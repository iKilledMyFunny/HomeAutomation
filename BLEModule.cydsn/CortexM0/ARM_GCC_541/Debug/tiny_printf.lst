ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"tiny_printf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.put_string,"ax",%progbits
  20              		.align	2
  21              		.global	put_string
  22              		.code	16
  23              		.thumb_func
  24              		.type	put_string, %function
  25              	put_string:
  26              	.LFB35:
  27              		.file 1 "tiny_printf.c"
   1:tiny_printf.c **** #include "tiny_printf.h"
   2:tiny_printf.c **** 
   3:tiny_printf.c **** #include <project.h>
   4:tiny_printf.c **** 
   5:tiny_printf.c **** #include <stdarg.h>
   6:tiny_printf.c **** #include <stdbool.h>
   7:tiny_printf.c **** 
   8:tiny_printf.c **** void put_string(uint8_t *data, uint16_t length)
   9:tiny_printf.c **** {
  28              		.loc 1 9 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
  41 0008 0A00     		movs	r2, r1
  42 000a BB1C     		adds	r3, r7, #2
  43 000c 1A80     		strh	r2, [r3]
  10:tiny_printf.c **** 
  11:tiny_printf.c **** 	if (data[length - 1] == '\n')
  44              		.loc 1 11 0
  45 000e BB1C     		adds	r3, r7, #2
  46 0010 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 2


  47 0012 013B     		subs	r3, r3, #1
  48 0014 7A68     		ldr	r2, [r7, #4]
  49 0016 D318     		adds	r3, r2, r3
  50 0018 1B78     		ldrb	r3, [r3]
  51 001a 0A2B     		cmp	r3, #10
  52 001c 09D1     		bne	.L2
  12:tiny_printf.c **** 	{
  13:tiny_printf.c **** 		data[length++] = '\r';
  53              		.loc 1 13 0
  54 001e BB1C     		adds	r3, r7, #2
  55 0020 1B88     		ldrh	r3, [r3]
  56 0022 BA1C     		adds	r2, r7, #2
  57 0024 591C     		adds	r1, r3, #1
  58 0026 1180     		strh	r1, [r2]
  59 0028 1A00     		movs	r2, r3
  60 002a 7B68     		ldr	r3, [r7, #4]
  61 002c 9B18     		adds	r3, r3, r2
  62 002e 0D22     		movs	r2, #13
  63 0030 1A70     		strb	r2, [r3]
  64              	.L2:
  14:tiny_printf.c **** 	}
  15:tiny_printf.c ****     console_SpiUartPutArray(data, length);
  65              		.loc 1 15 0
  66 0032 BB1C     		adds	r3, r7, #2
  67 0034 1A88     		ldrh	r2, [r3]
  68 0036 7B68     		ldr	r3, [r7, #4]
  69 0038 1100     		movs	r1, r2
  70 003a 1800     		movs	r0, r3
  71 003c FFF7FEFF 		bl	console_SpiUartPutArray
  16:tiny_printf.c **** }
  72              		.loc 1 16 0
  73 0040 C046     		nop
  74 0042 BD46     		mov	sp, r7
  75 0044 02B0     		add	sp, sp, #8
  76              		@ sp needed
  77 0046 80BD     		pop	{r7, pc}
  78              		.cfi_endproc
  79              	.LFE35:
  80              		.size	put_string, .-put_string
  81              		.section	.text._strlen,"ax",%progbits
  82              		.align	2
  83              		.code	16
  84              		.thumb_func
  85              		.type	_strlen, %function
  86              	_strlen:
  87              	.LFB36:
  17:tiny_printf.c **** 
  18:tiny_printf.c **** ///////////////////////////////////////////////////////////////////////////////
  19:tiny_printf.c **** 
  20:tiny_printf.c **** // buffer size used for printf (created on stack)
  21:tiny_printf.c **** #define PRINTF_BUFFER_SIZE    128u
  22:tiny_printf.c **** 
  23:tiny_printf.c **** // ntoa conversion buffer size, this must be big enough to hold one converted numeric number (creat
  24:tiny_printf.c **** #define NTOA_BUFFER_SIZE      32U
  25:tiny_printf.c **** 
  26:tiny_printf.c **** // ftoa conversion buffer size, this must be big enough to hold one converted float number (created
  27:tiny_printf.c **** #define FTOA_BUFFER_SIZE      32U
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 3


  28:tiny_printf.c **** 
  29:tiny_printf.c **** // define this to support floating point (%f)
  30:tiny_printf.c **** #define PRINTF_FLOAT_SUPPORT
  31:tiny_printf.c **** 
  32:tiny_printf.c **** // define this to support long long types (%llu or %p)
  33:tiny_printf.c **** #define PRINTF_LONG_LONG_SUPPORT
  34:tiny_printf.c **** 
  35:tiny_printf.c **** ///////////////////////////////////////////////////////////////////////////////
  36:tiny_printf.c **** 
  37:tiny_printf.c **** // internal flag definitions
  38:tiny_printf.c **** #define FLAGS_ZEROPAD   (1U << 0U)
  39:tiny_printf.c **** #define FLAGS_LEFT      (1U << 1U)
  40:tiny_printf.c **** #define FLAGS_PLUS      (1U << 2U)
  41:tiny_printf.c **** #define FLAGS_SPACE     (1U << 3U)
  42:tiny_printf.c **** #define FLAGS_HASH      (1U << 4U)
  43:tiny_printf.c **** #define FLAGS_UPPERCASE (1U << 5U)
  44:tiny_printf.c **** #define FLAGS_LONG      (1U << 6U)
  45:tiny_printf.c **** #define FLAGS_LONG_LONG (1U << 7U)
  46:tiny_printf.c **** #define FLAGS_PRECISION (1U << 8U)
  47:tiny_printf.c **** #define FLAGS_WIDTH     (1U << 9U)
  48:tiny_printf.c **** 
  49:tiny_printf.c **** // internal strlen
  50:tiny_printf.c **** // \return The length of the string (excluding the terminating 0)
  51:tiny_printf.c **** static inline size_t _strlen(const char* str)
  52:tiny_printf.c **** {
  88              		.loc 1 52 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 16
  91              		@ frame_needed = 1, uses_anonymous_args = 0
  92 0000 80B5     		push	{r7, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 0002 84B0     		sub	sp, sp, #16
  97              		.cfi_def_cfa_offset 24
  98 0004 00AF     		add	r7, sp, #0
  99              		.cfi_def_cfa_register 7
 100 0006 7860     		str	r0, [r7, #4]
  53:tiny_printf.c **** 	size_t len = 0U;
 101              		.loc 1 53 0
 102 0008 0023     		movs	r3, #0
 103 000a FB60     		str	r3, [r7, #12]
  54:tiny_printf.c **** 	while (str[len] != (char) 0)
 104              		.loc 1 54 0
 105 000c 02E0     		b	.L4
 106              	.L5:
  55:tiny_printf.c **** 	{
  56:tiny_printf.c **** 		len++;
 107              		.loc 1 56 0
 108 000e FB68     		ldr	r3, [r7, #12]
 109 0010 0133     		adds	r3, r3, #1
 110 0012 FB60     		str	r3, [r7, #12]
 111              	.L4:
  54:tiny_printf.c **** 	while (str[len] != (char) 0)
 112              		.loc 1 54 0
 113 0014 7A68     		ldr	r2, [r7, #4]
 114 0016 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 4


 115 0018 D318     		adds	r3, r2, r3
 116 001a 1B78     		ldrb	r3, [r3]
 117 001c 002B     		cmp	r3, #0
 118 001e F6D1     		bne	.L5
  57:tiny_printf.c **** 	}
  58:tiny_printf.c **** 	return len;
 119              		.loc 1 58 0
 120 0020 FB68     		ldr	r3, [r7, #12]
  59:tiny_printf.c **** }
 121              		.loc 1 59 0
 122 0022 1800     		movs	r0, r3
 123 0024 BD46     		mov	sp, r7
 124 0026 04B0     		add	sp, sp, #16
 125              		@ sp needed
 126 0028 80BD     		pop	{r7, pc}
 127              		.cfi_endproc
 128              	.LFE36:
 129              		.size	_strlen, .-_strlen
 130 002a C046     		.section	.text._is_digit,"ax",%progbits
 131              		.align	2
 132              		.code	16
 133              		.thumb_func
 134              		.type	_is_digit, %function
 135              	_is_digit:
 136              	.LFB37:
  60:tiny_printf.c **** 
  61:tiny_printf.c **** // returns true if char is a digit
  62:tiny_printf.c **** static inline bool _is_digit(char ch)
  63:tiny_printf.c **** {
 137              		.loc 1 63 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 8
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141 0000 80B5     		push	{r7, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 7, -8
 144              		.cfi_offset 14, -4
 145 0002 82B0     		sub	sp, sp, #8
 146              		.cfi_def_cfa_offset 16
 147 0004 00AF     		add	r7, sp, #0
 148              		.cfi_def_cfa_register 7
 149 0006 0200     		movs	r2, r0
 150 0008 FB1D     		adds	r3, r7, #7
 151 000a 1A70     		strb	r2, [r3]
  64:tiny_printf.c **** 	return (ch >= '0') && (ch <= '9');
 152              		.loc 1 64 0
 153 000c FB1D     		adds	r3, r7, #7
 154 000e 1B78     		ldrb	r3, [r3]
 155 0010 2F2B     		cmp	r3, #47
 156 0012 05D9     		bls	.L8
 157              		.loc 1 64 0 is_stmt 0 discriminator 1
 158 0014 FB1D     		adds	r3, r7, #7
 159 0016 1B78     		ldrb	r3, [r3]
 160 0018 392B     		cmp	r3, #57
 161 001a 01D8     		bhi	.L8
 162              		.loc 1 64 0 discriminator 3
 163 001c 0123     		movs	r3, #1
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 5


 164 001e 00E0     		b	.L9
 165              	.L8:
 166              		.loc 1 64 0 discriminator 4
 167 0020 0023     		movs	r3, #0
 168              	.L9:
 169              		.loc 1 64 0 discriminator 6
 170 0022 1A1C     		adds	r2, r3, #0
 171 0024 0123     		movs	r3, #1
 172 0026 1340     		ands	r3, r2
 173 0028 DBB2     		uxtb	r3, r3
  65:tiny_printf.c **** }
 174              		.loc 1 65 0 is_stmt 1 discriminator 6
 175 002a 1800     		movs	r0, r3
 176 002c BD46     		mov	sp, r7
 177 002e 02B0     		add	sp, sp, #8
 178              		@ sp needed
 179 0030 80BD     		pop	{r7, pc}
 180              		.cfi_endproc
 181              	.LFE37:
 182              		.size	_is_digit, .-_is_digit
 183 0032 C046     		.section	.text._atoi,"ax",%progbits
 184              		.align	2
 185              		.code	16
 186              		.thumb_func
 187              		.type	_atoi, %function
 188              	_atoi:
 189              	.LFB38:
  66:tiny_printf.c **** 
  67:tiny_printf.c **** // internal ASCII to unsigned int conversion
  68:tiny_printf.c **** static inline unsigned int _atoi(const char** str)
  69:tiny_printf.c **** {
 190              		.loc 1 69 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 16
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 0000 80B5     		push	{r7, lr}
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 84B0     		sub	sp, sp, #16
 199              		.cfi_def_cfa_offset 24
 200 0004 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
 202 0006 7860     		str	r0, [r7, #4]
  70:tiny_printf.c **** 	unsigned int i = 0U;
 203              		.loc 1 70 0
 204 0008 0023     		movs	r3, #0
 205 000a FB60     		str	r3, [r7, #12]
  71:tiny_printf.c **** 	while (_is_digit(**str))
 206              		.loc 1 71 0
 207 000c 0EE0     		b	.L12
 208              	.L13:
  72:tiny_printf.c **** 	{
  73:tiny_printf.c **** 		i = i * 10U + (unsigned int) (*((*str)++) - '0');
 209              		.loc 1 73 0
 210 000e FA68     		ldr	r2, [r7, #12]
 211 0010 1300     		movs	r3, r2
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 6


 212 0012 9B00     		lsls	r3, r3, #2
 213 0014 9B18     		adds	r3, r3, r2
 214 0016 5B00     		lsls	r3, r3, #1
 215 0018 1800     		movs	r0, r3
 216 001a 7B68     		ldr	r3, [r7, #4]
 217 001c 1B68     		ldr	r3, [r3]
 218 001e 591C     		adds	r1, r3, #1
 219 0020 7A68     		ldr	r2, [r7, #4]
 220 0022 1160     		str	r1, [r2]
 221 0024 1B78     		ldrb	r3, [r3]
 222 0026 C318     		adds	r3, r0, r3
 223 0028 303B     		subs	r3, r3, #48
 224 002a FB60     		str	r3, [r7, #12]
 225              	.L12:
  71:tiny_printf.c **** 	while (_is_digit(**str))
 226              		.loc 1 71 0
 227 002c 7B68     		ldr	r3, [r7, #4]
 228 002e 1B68     		ldr	r3, [r3]
 229 0030 1B78     		ldrb	r3, [r3]
 230 0032 1800     		movs	r0, r3
 231 0034 FFF7FEFF 		bl	_is_digit
 232 0038 031E     		subs	r3, r0, #0
 233 003a E8D1     		bne	.L13
  74:tiny_printf.c **** 	}
  75:tiny_printf.c **** 	return i;
 234              		.loc 1 75 0
 235 003c FB68     		ldr	r3, [r7, #12]
  76:tiny_printf.c **** }
 236              		.loc 1 76 0
 237 003e 1800     		movs	r0, r3
 238 0040 BD46     		mov	sp, r7
 239 0042 04B0     		add	sp, sp, #16
 240              		@ sp needed
 241 0044 80BD     		pop	{r7, pc}
 242              		.cfi_endproc
 243              	.LFE38:
 244              		.size	_atoi, .-_atoi
 245 0046 C046     		.section	.text._ntoa_format,"ax",%progbits
 246              		.align	2
 247              		.code	16
 248              		.thumb_func
 249              		.type	_ntoa_format, %function
 250              	_ntoa_format:
 251              	.LFB39:
  77:tiny_printf.c **** 
  78:tiny_printf.c **** // internal itoa format
  79:tiny_printf.c **** static size_t _ntoa_format(char* buffer, char* buf, size_t len, bool negative,
  80:tiny_printf.c **** 		unsigned int base, size_t maxlen, unsigned int prec, unsigned int width,
  81:tiny_printf.c **** 		unsigned int flags)
  82:tiny_printf.c **** {
 252              		.loc 1 82 0
 253              		.cfi_startproc
 254              		@ args = 20, pretend = 0, frame = 24
 255              		@ frame_needed = 1, uses_anonymous_args = 0
 256 0000 80B5     		push	{r7, lr}
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 7, -8
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 7


 259              		.cfi_offset 14, -4
 260 0002 86B0     		sub	sp, sp, #24
 261              		.cfi_def_cfa_offset 32
 262 0004 00AF     		add	r7, sp, #0
 263              		.cfi_def_cfa_register 7
 264 0006 F860     		str	r0, [r7, #12]
 265 0008 B960     		str	r1, [r7, #8]
 266 000a 7A60     		str	r2, [r7, #4]
 267 000c 1A00     		movs	r2, r3
 268 000e FB1C     		adds	r3, r7, #3
 269 0010 1A70     		strb	r2, [r3]
  83:tiny_printf.c **** 	if (maxlen == 0U)
 270              		.loc 1 83 0
 271 0012 7B6A     		ldr	r3, [r7, #36]
 272 0014 002B     		cmp	r3, #0
 273 0016 01D1     		bne	.L16
  84:tiny_printf.c **** 	{
  85:tiny_printf.c **** 		return 0U;
 274              		.loc 1 85 0
 275 0018 0023     		movs	r3, #0
 276 001a F2E0     		b	.L17
 277              	.L16:
  86:tiny_printf.c **** 	}
  87:tiny_printf.c **** 	if (base > 16U)
 278              		.loc 1 87 0
 279 001c 3B6A     		ldr	r3, [r7, #32]
 280 001e 102B     		cmp	r3, #16
 281 0020 08D9     		bls	.L19
  88:tiny_printf.c **** 	{
  89:tiny_printf.c **** 		return 0U;
 282              		.loc 1 89 0
 283 0022 0023     		movs	r3, #0
 284 0024 EDE0     		b	.L17
 285              	.L21:
  90:tiny_printf.c **** 	}
  91:tiny_printf.c **** 
  92:tiny_printf.c **** 	// pad leading zeros
  93:tiny_printf.c **** 	while (!(flags & FLAGS_LEFT) && (len < prec) && (len < NTOA_BUFFER_SIZE))
  94:tiny_printf.c **** 	{
  95:tiny_printf.c **** 		buf[len++] = '0';
 286              		.loc 1 95 0
 287 0026 7B68     		ldr	r3, [r7, #4]
 288 0028 5A1C     		adds	r2, r3, #1
 289 002a 7A60     		str	r2, [r7, #4]
 290 002c BA68     		ldr	r2, [r7, #8]
 291 002e D318     		adds	r3, r2, r3
 292 0030 3022     		movs	r2, #48
 293 0032 1A70     		strb	r2, [r3]
 294              	.L19:
  93:tiny_printf.c **** 	{
 295              		.loc 1 93 0
 296 0034 3B6B     		ldr	r3, [r7, #48]
 297 0036 0222     		movs	r2, #2
 298 0038 1340     		ands	r3, r2
 299 003a 0ED1     		bne	.L22
  93:tiny_printf.c **** 	{
 300              		.loc 1 93 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 8


 301 003c 7A68     		ldr	r2, [r7, #4]
 302 003e BB6A     		ldr	r3, [r7, #40]
 303 0040 9A42     		cmp	r2, r3
 304 0042 0AD2     		bcs	.L22
  93:tiny_printf.c **** 	{
 305              		.loc 1 93 0 discriminator 2
 306 0044 7B68     		ldr	r3, [r7, #4]
 307 0046 1F2B     		cmp	r3, #31
 308 0048 EDD9     		bls	.L21
  96:tiny_printf.c **** 	}
  97:tiny_printf.c **** 	while (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD) && (len < width)
 309              		.loc 1 97 0 is_stmt 1
 310 004a 06E0     		b	.L22
 311              	.L24:
  98:tiny_printf.c **** 			&& (len < NTOA_BUFFER_SIZE))
  99:tiny_printf.c **** 	{
 100:tiny_printf.c **** 		buf[len++] = '0';
 312              		.loc 1 100 0
 313 004c 7B68     		ldr	r3, [r7, #4]
 314 004e 5A1C     		adds	r2, r3, #1
 315 0050 7A60     		str	r2, [r7, #4]
 316 0052 BA68     		ldr	r2, [r7, #8]
 317 0054 D318     		adds	r3, r2, r3
 318 0056 3022     		movs	r2, #48
 319 0058 1A70     		strb	r2, [r3]
 320              	.L22:
  97:tiny_printf.c **** 			&& (len < NTOA_BUFFER_SIZE))
 321              		.loc 1 97 0
 322 005a 3B6B     		ldr	r3, [r7, #48]
 323 005c 0222     		movs	r2, #2
 324 005e 1340     		ands	r3, r2
 325 0060 0AD1     		bne	.L23
  97:tiny_printf.c **** 			&& (len < NTOA_BUFFER_SIZE))
 326              		.loc 1 97 0 is_stmt 0 discriminator 1
 327 0062 3B6B     		ldr	r3, [r7, #48]
 328 0064 0122     		movs	r2, #1
 329 0066 1340     		ands	r3, r2
 330 0068 06D0     		beq	.L23
  97:tiny_printf.c **** 			&& (len < NTOA_BUFFER_SIZE))
 331              		.loc 1 97 0 discriminator 2
 332 006a 7A68     		ldr	r2, [r7, #4]
 333 006c FB6A     		ldr	r3, [r7, #44]
 334 006e 9A42     		cmp	r2, r3
 335 0070 02D2     		bcs	.L23
  98:tiny_printf.c **** 			&& (len < NTOA_BUFFER_SIZE))
 336              		.loc 1 98 0 is_stmt 1
 337 0072 7B68     		ldr	r3, [r7, #4]
 338 0074 1F2B     		cmp	r3, #31
 339 0076 E9D9     		bls	.L24
 340              	.L23:
 101:tiny_printf.c **** 	}
 102:tiny_printf.c **** 
 103:tiny_printf.c **** 	// handle hash
 104:tiny_printf.c **** 	if (flags & FLAGS_HASH)
 341              		.loc 1 104 0
 342 0078 3B6B     		ldr	r3, [r7, #48]
 343 007a 1022     		movs	r2, #16
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 9


 344 007c 1340     		ands	r3, r2
 345 007e 42D0     		beq	.L25
 105:tiny_printf.c **** 	{
 106:tiny_printf.c **** 		if (((len == prec) || (len == width)) && (len > 0U))
 346              		.loc 1 106 0
 347 0080 7A68     		ldr	r2, [r7, #4]
 348 0082 BB6A     		ldr	r3, [r7, #40]
 349 0084 9A42     		cmp	r2, r3
 350 0086 03D0     		beq	.L26
 351              		.loc 1 106 0 is_stmt 0 discriminator 2
 352 0088 7A68     		ldr	r2, [r7, #4]
 353 008a FB6A     		ldr	r3, [r7, #44]
 354 008c 9A42     		cmp	r2, r3
 355 008e 0ED1     		bne	.L27
 356              	.L26:
 357              		.loc 1 106 0 discriminator 3
 358 0090 7B68     		ldr	r3, [r7, #4]
 359 0092 002B     		cmp	r3, #0
 360 0094 0BD0     		beq	.L27
 107:tiny_printf.c **** 		{
 108:tiny_printf.c **** 			len--;
 361              		.loc 1 108 0 is_stmt 1
 362 0096 7B68     		ldr	r3, [r7, #4]
 363 0098 013B     		subs	r3, r3, #1
 364 009a 7B60     		str	r3, [r7, #4]
 109:tiny_printf.c **** 			if ((base == 16U) && (len > 0U))
 365              		.loc 1 109 0
 366 009c 3B6A     		ldr	r3, [r7, #32]
 367 009e 102B     		cmp	r3, #16
 368 00a0 05D1     		bne	.L27
 369              		.loc 1 109 0 is_stmt 0 discriminator 1
 370 00a2 7B68     		ldr	r3, [r7, #4]
 371 00a4 002B     		cmp	r3, #0
 372 00a6 02D0     		beq	.L27
 110:tiny_printf.c **** 			{
 111:tiny_printf.c **** 				len--;
 373              		.loc 1 111 0 is_stmt 1
 374 00a8 7B68     		ldr	r3, [r7, #4]
 375 00aa 013B     		subs	r3, r3, #1
 376 00ac 7B60     		str	r3, [r7, #4]
 377              	.L27:
 112:tiny_printf.c **** 			}
 113:tiny_printf.c **** 		}
 114:tiny_printf.c **** 		if ((base == 16U) && !(flags & FLAGS_UPPERCASE)
 378              		.loc 1 114 0
 379 00ae 3B6A     		ldr	r3, [r7, #32]
 380 00b0 102B     		cmp	r3, #16
 381 00b2 0DD1     		bne	.L28
 382              		.loc 1 114 0 is_stmt 0 discriminator 1
 383 00b4 3B6B     		ldr	r3, [r7, #48]
 384 00b6 2022     		movs	r2, #32
 385 00b8 1340     		ands	r3, r2
 386 00ba 09D1     		bne	.L28
 115:tiny_printf.c **** 				&& (len < NTOA_BUFFER_SIZE))
 387              		.loc 1 115 0 is_stmt 1
 388 00bc 7B68     		ldr	r3, [r7, #4]
 389 00be 1F2B     		cmp	r3, #31
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 10


 390 00c0 06D8     		bhi	.L28
 116:tiny_printf.c **** 		{
 117:tiny_printf.c **** 			buf[len++] = 'x';
 391              		.loc 1 117 0
 392 00c2 7B68     		ldr	r3, [r7, #4]
 393 00c4 5A1C     		adds	r2, r3, #1
 394 00c6 7A60     		str	r2, [r7, #4]
 395 00c8 BA68     		ldr	r2, [r7, #8]
 396 00ca D318     		adds	r3, r2, r3
 397 00cc 7822     		movs	r2, #120
 398 00ce 1A70     		strb	r2, [r3]
 399              	.L28:
 118:tiny_printf.c **** 		}
 119:tiny_printf.c **** 		if ((base == 16U) && (flags & FLAGS_UPPERCASE)
 400              		.loc 1 119 0
 401 00d0 3B6A     		ldr	r3, [r7, #32]
 402 00d2 102B     		cmp	r3, #16
 403 00d4 0DD1     		bne	.L29
 404              		.loc 1 119 0 is_stmt 0 discriminator 1
 405 00d6 3B6B     		ldr	r3, [r7, #48]
 406 00d8 2022     		movs	r2, #32
 407 00da 1340     		ands	r3, r2
 408 00dc 09D0     		beq	.L29
 120:tiny_printf.c **** 				&& (len < NTOA_BUFFER_SIZE))
 409              		.loc 1 120 0 is_stmt 1
 410 00de 7B68     		ldr	r3, [r7, #4]
 411 00e0 1F2B     		cmp	r3, #31
 412 00e2 06D8     		bhi	.L29
 121:tiny_printf.c **** 		{
 122:tiny_printf.c **** 			buf[len++] = 'X';
 413              		.loc 1 122 0
 414 00e4 7B68     		ldr	r3, [r7, #4]
 415 00e6 5A1C     		adds	r2, r3, #1
 416 00e8 7A60     		str	r2, [r7, #4]
 417 00ea BA68     		ldr	r2, [r7, #8]
 418 00ec D318     		adds	r3, r2, r3
 419 00ee 5822     		movs	r2, #88
 420 00f0 1A70     		strb	r2, [r3]
 421              	.L29:
 123:tiny_printf.c **** 		}
 124:tiny_printf.c **** 		if (len < NTOA_BUFFER_SIZE)
 422              		.loc 1 124 0
 423 00f2 7B68     		ldr	r3, [r7, #4]
 424 00f4 1F2B     		cmp	r3, #31
 425 00f6 06D8     		bhi	.L25
 125:tiny_printf.c **** 		{
 126:tiny_printf.c **** 			buf[len++] = '0';
 426              		.loc 1 126 0
 427 00f8 7B68     		ldr	r3, [r7, #4]
 428 00fa 5A1C     		adds	r2, r3, #1
 429 00fc 7A60     		str	r2, [r7, #4]
 430 00fe BA68     		ldr	r2, [r7, #8]
 431 0100 D318     		adds	r3, r2, r3
 432 0102 3022     		movs	r2, #48
 433 0104 1A70     		strb	r2, [r3]
 434              	.L25:
 127:tiny_printf.c **** 		}
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 11


 128:tiny_printf.c **** 	}
 129:tiny_printf.c **** 
 130:tiny_printf.c **** 	// handle sign
 131:tiny_printf.c **** 	if ((len == width)
 435              		.loc 1 131 0
 436 0106 7A68     		ldr	r2, [r7, #4]
 437 0108 FB6A     		ldr	r3, [r7, #44]
 438 010a 9A42     		cmp	r2, r3
 439 010c 0ED1     		bne	.L30
 132:tiny_printf.c **** 			&& (negative || (flags & FLAGS_PLUS) || (flags & FLAGS_SPACE)))
 440              		.loc 1 132 0
 441 010e FB1C     		adds	r3, r7, #3
 442 0110 1B78     		ldrb	r3, [r3]
 443 0112 002B     		cmp	r3, #0
 444 0114 07D1     		bne	.L31
 445              		.loc 1 132 0 is_stmt 0 discriminator 1
 446 0116 3B6B     		ldr	r3, [r7, #48]
 447 0118 0422     		movs	r2, #4
 448 011a 1340     		ands	r3, r2
 449 011c 03D1     		bne	.L31
 450              		.loc 1 132 0 discriminator 2
 451 011e 3B6B     		ldr	r3, [r7, #48]
 452 0120 0822     		movs	r2, #8
 453 0122 1340     		ands	r3, r2
 454 0124 02D0     		beq	.L30
 455              	.L31:
 133:tiny_printf.c **** 	{
 134:tiny_printf.c **** 		len--;
 456              		.loc 1 134 0 is_stmt 1
 457 0126 7B68     		ldr	r3, [r7, #4]
 458 0128 013B     		subs	r3, r3, #1
 459 012a 7B60     		str	r3, [r7, #4]
 460              	.L30:
 135:tiny_printf.c **** 	}
 136:tiny_printf.c **** 	if (len < NTOA_BUFFER_SIZE)
 461              		.loc 1 136 0
 462 012c 7B68     		ldr	r3, [r7, #4]
 463 012e 1F2B     		cmp	r3, #31
 464 0130 22D8     		bhi	.L32
 137:tiny_printf.c **** 	{
 138:tiny_printf.c **** 		if (negative)
 465              		.loc 1 138 0
 466 0132 FB1C     		adds	r3, r7, #3
 467 0134 1B78     		ldrb	r3, [r3]
 468 0136 002B     		cmp	r3, #0
 469 0138 07D0     		beq	.L33
 139:tiny_printf.c **** 		{
 140:tiny_printf.c **** 			buf[len++] = '-';
 470              		.loc 1 140 0
 471 013a 7B68     		ldr	r3, [r7, #4]
 472 013c 5A1C     		adds	r2, r3, #1
 473 013e 7A60     		str	r2, [r7, #4]
 474 0140 BA68     		ldr	r2, [r7, #8]
 475 0142 D318     		adds	r3, r2, r3
 476 0144 2D22     		movs	r2, #45
 477 0146 1A70     		strb	r2, [r3]
 478 0148 16E0     		b	.L32
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 12


 479              	.L33:
 141:tiny_printf.c **** 		}
 142:tiny_printf.c **** 		else if (flags & FLAGS_PLUS)
 480              		.loc 1 142 0
 481 014a 3B6B     		ldr	r3, [r7, #48]
 482 014c 0422     		movs	r2, #4
 483 014e 1340     		ands	r3, r2
 484 0150 07D0     		beq	.L34
 143:tiny_printf.c **** 		{
 144:tiny_printf.c **** 			buf[len++] = '+';  // ignore the space if the '+' exists
 485              		.loc 1 144 0
 486 0152 7B68     		ldr	r3, [r7, #4]
 487 0154 5A1C     		adds	r2, r3, #1
 488 0156 7A60     		str	r2, [r7, #4]
 489 0158 BA68     		ldr	r2, [r7, #8]
 490 015a D318     		adds	r3, r2, r3
 491 015c 2B22     		movs	r2, #43
 492 015e 1A70     		strb	r2, [r3]
 493 0160 0AE0     		b	.L32
 494              	.L34:
 145:tiny_printf.c **** 		}
 146:tiny_printf.c **** 		else if (flags & FLAGS_SPACE)
 495              		.loc 1 146 0
 496 0162 3B6B     		ldr	r3, [r7, #48]
 497 0164 0822     		movs	r2, #8
 498 0166 1340     		ands	r3, r2
 499 0168 06D0     		beq	.L32
 147:tiny_printf.c **** 		{
 148:tiny_printf.c **** 			buf[len++] = ' ';
 500              		.loc 1 148 0
 501 016a 7B68     		ldr	r3, [r7, #4]
 502 016c 5A1C     		adds	r2, r3, #1
 503 016e 7A60     		str	r2, [r7, #4]
 504 0170 BA68     		ldr	r2, [r7, #8]
 505 0172 D318     		adds	r3, r2, r3
 506 0174 2022     		movs	r2, #32
 507 0176 1A70     		strb	r2, [r3]
 508              	.L32:
 149:tiny_printf.c **** 		}
 150:tiny_printf.c **** 	}
 151:tiny_printf.c **** 
 152:tiny_printf.c **** 	// pad spaces up to given width
 153:tiny_printf.c **** 	if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD))
 509              		.loc 1 153 0
 510 0178 3B6B     		ldr	r3, [r7, #48]
 511 017a 0222     		movs	r2, #2
 512 017c 1340     		ands	r3, r2
 513 017e 12D1     		bne	.L35
 514              		.loc 1 153 0 is_stmt 0 discriminator 1
 515 0180 3B6B     		ldr	r3, [r7, #48]
 516 0182 0122     		movs	r2, #1
 517 0184 1340     		ands	r3, r2
 518 0186 0ED1     		bne	.L35
 154:tiny_printf.c **** 	{
 155:tiny_printf.c **** 		while ((len < width) && (len < NTOA_BUFFER_SIZE))
 519              		.loc 1 155 0 is_stmt 1
 520 0188 06E0     		b	.L36
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 13


 521              	.L37:
 156:tiny_printf.c **** 		{
 157:tiny_printf.c **** 			buf[len++] = ' ';
 522              		.loc 1 157 0
 523 018a 7B68     		ldr	r3, [r7, #4]
 524 018c 5A1C     		adds	r2, r3, #1
 525 018e 7A60     		str	r2, [r7, #4]
 526 0190 BA68     		ldr	r2, [r7, #8]
 527 0192 D318     		adds	r3, r2, r3
 528 0194 2022     		movs	r2, #32
 529 0196 1A70     		strb	r2, [r3]
 530              	.L36:
 155:tiny_printf.c **** 		{
 531              		.loc 1 155 0
 532 0198 7A68     		ldr	r2, [r7, #4]
 533 019a FB6A     		ldr	r3, [r7, #44]
 534 019c 9A42     		cmp	r2, r3
 535 019e 02D2     		bcs	.L35
 155:tiny_printf.c **** 		{
 536              		.loc 1 155 0 is_stmt 0 discriminator 1
 537 01a0 7B68     		ldr	r3, [r7, #4]
 538 01a2 1F2B     		cmp	r3, #31
 539 01a4 F1D9     		bls	.L37
 540              	.L35:
 541              	.LBB2:
 158:tiny_printf.c **** 		}
 159:tiny_printf.c **** 	}
 160:tiny_printf.c **** 
 161:tiny_printf.c **** 	// reverse string
 162:tiny_printf.c **** 	for (size_t i = 0U; (i < len) && (i < maxlen); ++i)
 542              		.loc 1 162 0 is_stmt 1
 543 01a6 0023     		movs	r3, #0
 544 01a8 7B61     		str	r3, [r7, #20]
 545 01aa 0DE0     		b	.L38
 546              	.L40:
 163:tiny_printf.c **** 	{
 164:tiny_printf.c **** 		buffer[i] = buf[len - i - 1U];
 547              		.loc 1 164 0 discriminator 4
 548 01ac FA68     		ldr	r2, [r7, #12]
 549 01ae 7B69     		ldr	r3, [r7, #20]
 550 01b0 D318     		adds	r3, r2, r3
 551 01b2 7968     		ldr	r1, [r7, #4]
 552 01b4 7A69     		ldr	r2, [r7, #20]
 553 01b6 8A1A     		subs	r2, r1, r2
 554 01b8 013A     		subs	r2, r2, #1
 555 01ba B968     		ldr	r1, [r7, #8]
 556 01bc 8A18     		adds	r2, r1, r2
 557 01be 1278     		ldrb	r2, [r2]
 558 01c0 1A70     		strb	r2, [r3]
 162:tiny_printf.c **** 	{
 559              		.loc 1 162 0 discriminator 4
 560 01c2 7B69     		ldr	r3, [r7, #20]
 561 01c4 0133     		adds	r3, r3, #1
 562 01c6 7B61     		str	r3, [r7, #20]
 563              	.L38:
 162:tiny_printf.c **** 	{
 564              		.loc 1 162 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 14


 565 01c8 7A69     		ldr	r2, [r7, #20]
 566 01ca 7B68     		ldr	r3, [r7, #4]
 567 01cc 9A42     		cmp	r2, r3
 568 01ce 03D2     		bcs	.L39
 162:tiny_printf.c **** 	{
 569              		.loc 1 162 0 discriminator 3
 570 01d0 7A69     		ldr	r2, [r7, #20]
 571 01d2 7B6A     		ldr	r3, [r7, #36]
 572 01d4 9A42     		cmp	r2, r3
 573 01d6 E9D3     		bcc	.L40
 574              	.L39:
 575              	.LBE2:
 165:tiny_printf.c **** 	}
 166:tiny_printf.c **** 
 167:tiny_printf.c **** 	// append pad spaces up to given width
 168:tiny_printf.c **** 	if (flags & FLAGS_LEFT)
 576              		.loc 1 168 0 is_stmt 1
 577 01d8 3B6B     		ldr	r3, [r7, #48]
 578 01da 0222     		movs	r2, #2
 579 01dc 1340     		ands	r3, r2
 580 01de 0FD0     		beq	.L41
 169:tiny_printf.c **** 	{
 170:tiny_printf.c **** 		while ((len < width) && (len < maxlen))
 581              		.loc 1 170 0
 582 01e0 06E0     		b	.L42
 583              	.L43:
 171:tiny_printf.c **** 		{
 172:tiny_printf.c **** 			buffer[len++] = ' ';
 584              		.loc 1 172 0
 585 01e2 7B68     		ldr	r3, [r7, #4]
 586 01e4 5A1C     		adds	r2, r3, #1
 587 01e6 7A60     		str	r2, [r7, #4]
 588 01e8 FA68     		ldr	r2, [r7, #12]
 589 01ea D318     		adds	r3, r2, r3
 590 01ec 2022     		movs	r2, #32
 591 01ee 1A70     		strb	r2, [r3]
 592              	.L42:
 170:tiny_printf.c **** 		{
 593              		.loc 1 170 0
 594 01f0 7A68     		ldr	r2, [r7, #4]
 595 01f2 FB6A     		ldr	r3, [r7, #44]
 596 01f4 9A42     		cmp	r2, r3
 597 01f6 03D2     		bcs	.L41
 170:tiny_printf.c **** 		{
 598              		.loc 1 170 0 is_stmt 0 discriminator 1
 599 01f8 7A68     		ldr	r2, [r7, #4]
 600 01fa 7B6A     		ldr	r3, [r7, #36]
 601 01fc 9A42     		cmp	r2, r3
 602 01fe F0D3     		bcc	.L43
 603              	.L41:
 173:tiny_printf.c **** 		}
 174:tiny_printf.c **** 	}
 175:tiny_printf.c **** 
 176:tiny_printf.c **** 	return len;
 604              		.loc 1 176 0 is_stmt 1
 605 0200 7B68     		ldr	r3, [r7, #4]
 606              	.L17:
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 15


 177:tiny_printf.c **** }
 607              		.loc 1 177 0
 608 0202 1800     		movs	r0, r3
 609 0204 BD46     		mov	sp, r7
 610 0206 06B0     		add	sp, sp, #24
 611              		@ sp needed
 612 0208 80BD     		pop	{r7, pc}
 613              		.cfi_endproc
 614              	.LFE39:
 615              		.size	_ntoa_format, .-_ntoa_format
 616              		.global	__aeabi_uidivmod
 617              		.global	__aeabi_uidiv
 618 020a C046     		.section	.text._ntoa_long,"ax",%progbits
 619              		.align	2
 620              		.code	16
 621              		.thumb_func
 622              		.type	_ntoa_long, %function
 623              	_ntoa_long:
 624              	.LFB40:
 178:tiny_printf.c **** 
 179:tiny_printf.c **** // internal itoa for 'long' type
 180:tiny_printf.c **** static size_t _ntoa_long(char* buffer, unsigned long value, bool negative,
 181:tiny_printf.c **** 		unsigned long base, size_t maxlen, unsigned int prec,
 182:tiny_printf.c **** 		unsigned int width, unsigned int flags)
 183:tiny_printf.c **** {
 625              		.loc 1 183 0
 626              		.cfi_startproc
 627              		@ args = 16, pretend = 0, frame = 56
 628              		@ frame_needed = 1, uses_anonymous_args = 0
 629 0000 90B5     		push	{r4, r7, lr}
 630              		.cfi_def_cfa_offset 12
 631              		.cfi_offset 4, -12
 632              		.cfi_offset 7, -8
 633              		.cfi_offset 14, -4
 634 0002 95B0     		sub	sp, sp, #84
 635              		.cfi_def_cfa_offset 96
 636 0004 06AF     		add	r7, sp, #24
 637              		.cfi_def_cfa 7, 72
 638 0006 F860     		str	r0, [r7, #12]
 639 0008 B960     		str	r1, [r7, #8]
 640 000a 3B60     		str	r3, [r7]
 641 000c FB1D     		adds	r3, r7, #7
 642 000e 1A70     		strb	r2, [r3]
 184:tiny_printf.c **** 	char buf[NTOA_BUFFER_SIZE];
 185:tiny_printf.c **** 	size_t len = 0U;
 643              		.loc 1 185 0
 644 0010 0023     		movs	r3, #0
 645 0012 7B63     		str	r3, [r7, #52]
 186:tiny_printf.c **** 
 187:tiny_printf.c **** 	// write if precision != 0 and value is != 0
 188:tiny_printf.c **** 	if (!(flags & FLAGS_PRECISION) || value)
 646              		.loc 1 188 0
 647 0014 7A6D     		ldr	r2, [r7, #84]
 648 0016 8023     		movs	r3, #128
 649 0018 5B00     		lsls	r3, r3, #1
 650 001a 1340     		ands	r3, r2
 651 001c 02D0     		beq	.L45
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 16


 652              		.loc 1 188 0 is_stmt 0 discriminator 1
 653 001e BB68     		ldr	r3, [r7, #8]
 654 0020 002B     		cmp	r3, #0
 655 0022 34D0     		beq	.L46
 656              	.L45:
 657              	.LBB3:
 189:tiny_printf.c **** 	{
 190:tiny_printf.c **** 		do
 191:tiny_printf.c **** 		{
 192:tiny_printf.c **** 			char digit = (char) (value % base);
 658              		.loc 1 192 0 is_stmt 1
 659 0024 BB68     		ldr	r3, [r7, #8]
 660 0026 3968     		ldr	r1, [r7]
 661 0028 1800     		movs	r0, r3
 662 002a FFF7FEFF 		bl	__aeabi_uidivmod
 663 002e 0B00     		movs	r3, r1
 664 0030 1A00     		movs	r2, r3
 665 0032 3323     		movs	r3, #51
 666 0034 FB18     		adds	r3, r7, r3
 667 0036 1A70     		strb	r2, [r3]
 193:tiny_printf.c **** 			buf[len++] =
 668              		.loc 1 193 0
 669 0038 7B6B     		ldr	r3, [r7, #52]
 670 003a 5A1C     		adds	r2, r3, #1
 671 003c 7A63     		str	r2, [r7, #52]
 672 003e 3322     		movs	r2, #51
 673 0040 BA18     		adds	r2, r7, r2
 674 0042 1278     		ldrb	r2, [r2]
 675 0044 092A     		cmp	r2, #9
 676 0046 05D8     		bhi	.L47
 677              		.loc 1 193 0 is_stmt 0 discriminator 1
 678 0048 3322     		movs	r2, #51
 679 004a BA18     		adds	r2, r7, r2
 680 004c 1278     		ldrb	r2, [r2]
 681 004e 3032     		adds	r2, r2, #48
 682 0050 D2B2     		uxtb	r2, r2
 683 0052 0DE0     		b	.L48
 684              	.L47:
 194:tiny_printf.c **** 					digit < 10 ?
 195:tiny_printf.c **** 							'0' + digit :
 196:tiny_printf.c **** 							(flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 685              		.loc 1 196 0 is_stmt 1 discriminator 2
 686 0054 7A6D     		ldr	r2, [r7, #84]
 687 0056 2021     		movs	r1, #32
 688 0058 0A40     		ands	r2, r1
 193:tiny_printf.c **** 			buf[len++] =
 689              		.loc 1 193 0 discriminator 2
 690 005a 01D0     		beq	.L49
 193:tiny_printf.c **** 			buf[len++] =
 691              		.loc 1 193 0 is_stmt 0 discriminator 4
 692 005c 4122     		movs	r2, #65
 693 005e 00E0     		b	.L50
 694              	.L49:
 193:tiny_printf.c **** 			buf[len++] =
 695              		.loc 1 193 0 discriminator 5
 696 0060 6122     		movs	r2, #97
 697              	.L50:
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 17


 193:tiny_printf.c **** 			buf[len++] =
 698              		.loc 1 193 0 discriminator 7
 699 0062 3321     		movs	r1, #51
 700 0064 7918     		adds	r1, r7, r1
 701 0066 0978     		ldrb	r1, [r1]
 702 0068 5218     		adds	r2, r2, r1
 703 006a D2B2     		uxtb	r2, r2
 704 006c 0A3A     		subs	r2, r2, #10
 705 006e D2B2     		uxtb	r2, r2
 706              	.L48:
 193:tiny_printf.c **** 			buf[len++] =
 707              		.loc 1 193 0 discriminator 8
 708 0070 1021     		movs	r1, #16
 709 0072 7918     		adds	r1, r7, r1
 710 0074 CA54     		strb	r2, [r1, r3]
 197:tiny_printf.c **** 			value /= base;
 711              		.loc 1 197 0 is_stmt 1 discriminator 8
 712 0076 3968     		ldr	r1, [r7]
 713 0078 B868     		ldr	r0, [r7, #8]
 714 007a FFF7FEFF 		bl	__aeabi_uidiv
 715 007e 0300     		movs	r3, r0
 716 0080 BB60     		str	r3, [r7, #8]
 717              	.LBE3:
 198:tiny_printf.c **** 		} while ((len < NTOA_BUFFER_SIZE) && value);
 718              		.loc 1 198 0 discriminator 8
 719 0082 7B6B     		ldr	r3, [r7, #52]
 720 0084 1F2B     		cmp	r3, #31
 721 0086 02D8     		bhi	.L46
 722              		.loc 1 198 0 is_stmt 0 discriminator 1
 723 0088 BB68     		ldr	r3, [r7, #8]
 724 008a 002B     		cmp	r3, #0
 725 008c CAD1     		bne	.L45
 726              	.L46:
 199:tiny_printf.c **** 	}
 200:tiny_printf.c **** 
 201:tiny_printf.c **** 	return _ntoa_format(buffer, buf, len, negative, (unsigned int) base, maxlen,
 727              		.loc 1 201 0 is_stmt 1
 728 008e FB1D     		adds	r3, r7, #7
 729 0090 1C78     		ldrb	r4, [r3]
 730 0092 7A6B     		ldr	r2, [r7, #52]
 731 0094 1023     		movs	r3, #16
 732 0096 F918     		adds	r1, r7, r3
 733 0098 F868     		ldr	r0, [r7, #12]
 734 009a 7B6D     		ldr	r3, [r7, #84]
 735 009c 0493     		str	r3, [sp, #16]
 736 009e 3B6D     		ldr	r3, [r7, #80]
 737 00a0 0393     		str	r3, [sp, #12]
 738 00a2 FB6C     		ldr	r3, [r7, #76]
 739 00a4 0293     		str	r3, [sp, #8]
 740 00a6 BB6C     		ldr	r3, [r7, #72]
 741 00a8 0193     		str	r3, [sp, #4]
 742 00aa 3B68     		ldr	r3, [r7]
 743 00ac 0093     		str	r3, [sp]
 744 00ae 2300     		movs	r3, r4
 745 00b0 FFF7FEFF 		bl	_ntoa_format
 746 00b4 0300     		movs	r3, r0
 202:tiny_printf.c **** 			prec, width, flags);
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 18


 203:tiny_printf.c **** }
 747              		.loc 1 203 0
 748 00b6 1800     		movs	r0, r3
 749 00b8 BD46     		mov	sp, r7
 750 00ba 0FB0     		add	sp, sp, #60
 751              		@ sp needed
 752 00bc 90BD     		pop	{r4, r7, pc}
 753              		.cfi_endproc
 754              	.LFE40:
 755              		.size	_ntoa_long, .-_ntoa_long
 756              		.global	__aeabi_uldivmod
 757 00be C046     		.section	.text._ntoa_long_long,"ax",%progbits
 758              		.align	2
 759              		.code	16
 760              		.thumb_func
 761              		.type	_ntoa_long_long, %function
 762              	_ntoa_long_long:
 763              	.LFB41:
 204:tiny_printf.c **** 
 205:tiny_printf.c **** // internal itoa for 'long long' type
 206:tiny_printf.c **** #if defined(PRINTF_LONG_LONG_SUPPORT)
 207:tiny_printf.c **** static size_t _ntoa_long_long(char* buffer, unsigned long long value,
 208:tiny_printf.c **** 		bool negative, unsigned long long base, size_t maxlen,
 209:tiny_printf.c **** 		unsigned int prec, unsigned int width, unsigned int flags)
 210:tiny_printf.c **** {
 764              		.loc 1 210 0
 765              		.cfi_startproc
 766              		@ args = 32, pretend = 0, frame = 56
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768 0000 B0B5     		push	{r4, r5, r7, lr}
 769              		.cfi_def_cfa_offset 16
 770              		.cfi_offset 4, -16
 771              		.cfi_offset 5, -12
 772              		.cfi_offset 7, -8
 773              		.cfi_offset 14, -4
 774 0002 94B0     		sub	sp, sp, #80
 775              		.cfi_def_cfa_offset 96
 776 0004 06AF     		add	r7, sp, #24
 777              		.cfi_def_cfa 7, 72
 778 0006 F860     		str	r0, [r7, #12]
 779 0008 3A60     		str	r2, [r7]
 780 000a 7B60     		str	r3, [r7, #4]
 211:tiny_printf.c **** 	char buf[NTOA_BUFFER_SIZE];
 212:tiny_printf.c **** 	size_t len = 0U;
 781              		.loc 1 212 0
 782 000c 0023     		movs	r3, #0
 783 000e 7B63     		str	r3, [r7, #52]
 213:tiny_printf.c **** 
 214:tiny_printf.c **** 	// write if precision != 0 and value is != 0
 215:tiny_printf.c **** 	if (!(flags & FLAGS_PRECISION) || value)
 784              		.loc 1 215 0
 785 0010 7A6E     		ldr	r2, [r7, #100]
 786 0012 8023     		movs	r3, #128
 787 0014 5B00     		lsls	r3, r3, #1
 788 0016 1340     		ands	r3, r2
 789 0018 03D0     		beq	.L53
 790              		.loc 1 215 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 19


 791 001a 3B68     		ldr	r3, [r7]
 792 001c 7A68     		ldr	r2, [r7, #4]
 793 001e 1343     		orrs	r3, r2
 794 0020 3DD0     		beq	.L54
 795              	.L53:
 796              	.LBB4:
 216:tiny_printf.c **** 	{
 217:tiny_printf.c **** 		do
 218:tiny_printf.c **** 		{
 219:tiny_printf.c **** 			char digit = (char) (value % base);
 797              		.loc 1 219 0 is_stmt 1
 798 0022 3868     		ldr	r0, [r7]
 799 0024 7968     		ldr	r1, [r7, #4]
 800 0026 3A6D     		ldr	r2, [r7, #80]
 801 0028 7B6D     		ldr	r3, [r7, #84]
 802 002a FFF7FEFF 		bl	__aeabi_uldivmod
 803 002e 1C00     		movs	r4, r3
 804 0030 1300     		movs	r3, r2
 805 0032 1900     		movs	r1, r3
 806 0034 2200     		movs	r2, r4
 807 0036 3323     		movs	r3, #51
 808 0038 FB18     		adds	r3, r7, r3
 809 003a 0A1C     		adds	r2, r1, #0
 810 003c 1A70     		strb	r2, [r3]
 220:tiny_printf.c **** 			buf[len++] =
 811              		.loc 1 220 0
 812 003e 7B6B     		ldr	r3, [r7, #52]
 813 0040 5A1C     		adds	r2, r3, #1
 814 0042 7A63     		str	r2, [r7, #52]
 815 0044 3322     		movs	r2, #51
 816 0046 BA18     		adds	r2, r7, r2
 817 0048 1278     		ldrb	r2, [r2]
 818 004a 092A     		cmp	r2, #9
 819 004c 05D8     		bhi	.L56
 820              		.loc 1 220 0 is_stmt 0 discriminator 1
 821 004e 3322     		movs	r2, #51
 822 0050 BA18     		adds	r2, r7, r2
 823 0052 1278     		ldrb	r2, [r2]
 824 0054 3032     		adds	r2, r2, #48
 825 0056 D2B2     		uxtb	r2, r2
 826 0058 0DE0     		b	.L57
 827              	.L56:
 221:tiny_printf.c **** 					digit < 10 ?
 222:tiny_printf.c **** 							'0' + digit :
 223:tiny_printf.c **** 							(flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 828              		.loc 1 223 0 is_stmt 1 discriminator 2
 829 005a 7A6E     		ldr	r2, [r7, #100]
 830 005c 2021     		movs	r1, #32
 831 005e 0A40     		ands	r2, r1
 220:tiny_printf.c **** 			buf[len++] =
 832              		.loc 1 220 0 discriminator 2
 833 0060 01D0     		beq	.L58
 220:tiny_printf.c **** 			buf[len++] =
 834              		.loc 1 220 0 is_stmt 0 discriminator 4
 835 0062 4122     		movs	r2, #65
 836 0064 00E0     		b	.L59
 837              	.L58:
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 20


 220:tiny_printf.c **** 			buf[len++] =
 838              		.loc 1 220 0 discriminator 5
 839 0066 6122     		movs	r2, #97
 840              	.L59:
 220:tiny_printf.c **** 			buf[len++] =
 841              		.loc 1 220 0 discriminator 7
 842 0068 3321     		movs	r1, #51
 843 006a 7918     		adds	r1, r7, r1
 844 006c 0978     		ldrb	r1, [r1]
 845 006e 5218     		adds	r2, r2, r1
 846 0070 D2B2     		uxtb	r2, r2
 847 0072 0A3A     		subs	r2, r2, #10
 848 0074 D2B2     		uxtb	r2, r2
 849              	.L57:
 220:tiny_printf.c **** 			buf[len++] =
 850              		.loc 1 220 0 discriminator 8
 851 0076 1021     		movs	r1, #16
 852 0078 7918     		adds	r1, r7, r1
 853 007a CA54     		strb	r2, [r1, r3]
 224:tiny_printf.c **** 			value /= base;
 854              		.loc 1 224 0 is_stmt 1 discriminator 8
 855 007c 3A6D     		ldr	r2, [r7, #80]
 856 007e 7B6D     		ldr	r3, [r7, #84]
 857 0080 3868     		ldr	r0, [r7]
 858 0082 7968     		ldr	r1, [r7, #4]
 859 0084 FFF7FEFF 		bl	__aeabi_uldivmod
 860 0088 0300     		movs	r3, r0
 861 008a 0C00     		movs	r4, r1
 862 008c 3B60     		str	r3, [r7]
 863 008e 7C60     		str	r4, [r7, #4]
 864              	.LBE4:
 225:tiny_printf.c **** 		} while ((len < NTOA_BUFFER_SIZE) && value);
 865              		.loc 1 225 0 discriminator 8
 866 0090 7B6B     		ldr	r3, [r7, #52]
 867 0092 1F2B     		cmp	r3, #31
 868 0094 03D8     		bhi	.L54
 869              		.loc 1 225 0 is_stmt 0 discriminator 1
 870 0096 3B68     		ldr	r3, [r7]
 871 0098 7A68     		ldr	r2, [r7, #4]
 872 009a 1343     		orrs	r3, r2
 873 009c C1D1     		bne	.L53
 874              	.L54:
 226:tiny_printf.c **** 	}
 227:tiny_printf.c **** 
 228:tiny_printf.c **** 	return _ntoa_format(buffer, buf, len, negative, (unsigned int) base, maxlen,
 875              		.loc 1 228 0 is_stmt 1
 876 009e 3B6D     		ldr	r3, [r7, #80]
 877 00a0 4822     		movs	r2, #72
 878 00a2 BA18     		adds	r2, r7, r2
 879 00a4 1578     		ldrb	r5, [r2]
 880 00a6 7C6B     		ldr	r4, [r7, #52]
 881 00a8 1022     		movs	r2, #16
 882 00aa B918     		adds	r1, r7, r2
 883 00ac F868     		ldr	r0, [r7, #12]
 884 00ae 7A6E     		ldr	r2, [r7, #100]
 885 00b0 0492     		str	r2, [sp, #16]
 886 00b2 3A6E     		ldr	r2, [r7, #96]
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 21


 887 00b4 0392     		str	r2, [sp, #12]
 888 00b6 FA6D     		ldr	r2, [r7, #92]
 889 00b8 0292     		str	r2, [sp, #8]
 890 00ba BA6D     		ldr	r2, [r7, #88]
 891 00bc 0192     		str	r2, [sp, #4]
 892 00be 0093     		str	r3, [sp]
 893 00c0 2B00     		movs	r3, r5
 894 00c2 2200     		movs	r2, r4
 895 00c4 FFF7FEFF 		bl	_ntoa_format
 896 00c8 0300     		movs	r3, r0
 229:tiny_printf.c **** 			prec, width, flags);
 230:tiny_printf.c **** }
 897              		.loc 1 230 0
 898 00ca 1800     		movs	r0, r3
 899 00cc BD46     		mov	sp, r7
 900 00ce 0EB0     		add	sp, sp, #56
 901              		@ sp needed
 902 00d0 B0BD     		pop	{r4, r5, r7, pc}
 903              		.cfi_endproc
 904              	.LFE41:
 905              		.size	_ntoa_long_long, .-_ntoa_long_long
 906              		.global	__aeabi_dcmplt
 907              		.global	__aeabi_dsub
 908              		.global	__aeabi_d2iz
 909              		.global	__aeabi_i2d
 910              		.global	__aeabi_dmul
 911              		.global	__aeabi_d2uiz
 912              		.global	__aeabi_ui2d
 913              		.global	__aeabi_dcmpgt
 914              		.global	__aeabi_dcmpge
 915              		.global	__aeabi_dcmpeq
 916              		.global	__aeabi_idivmod
 917              		.global	__aeabi_idiv
 918 00d2 C046     		.section	.text._ftoa,"ax",%progbits
 919              		.align	2
 920              		.code	16
 921              		.thumb_func
 922              		.type	_ftoa, %function
 923              	_ftoa:
 924              	.LFB42:
 231:tiny_printf.c **** #endif  // PRINTF_LONG_LONG_SUPPORT
 232:tiny_printf.c **** 
 233:tiny_printf.c **** #if defined(PRINTF_FLOAT_SUPPORT)
 234:tiny_printf.c **** static size_t _ftoa(double value, char* buffer, size_t maxlen,
 235:tiny_printf.c **** 		unsigned int prec, unsigned int width, unsigned int flags)
 236:tiny_printf.c **** {
 925              		.loc 1 236 0
 926              		.cfi_startproc
 927              		@ args = 12, pretend = 0, frame = 96
 928              		@ frame_needed = 1, uses_anonymous_args = 0
 929 0000 90B5     		push	{r4, r7, lr}
 930              		.cfi_def_cfa_offset 12
 931              		.cfi_offset 4, -12
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 99B0     		sub	sp, sp, #100
 935              		.cfi_def_cfa_offset 112
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 22


 936 0004 00AF     		add	r7, sp, #0
 937              		.cfi_def_cfa_register 7
 938 0006 B860     		str	r0, [r7, #8]
 939 0008 F960     		str	r1, [r7, #12]
 940 000a 7A60     		str	r2, [r7, #4]
 941 000c 3B60     		str	r3, [r7]
 237:tiny_printf.c **** 	char buf[FTOA_BUFFER_SIZE];
 238:tiny_printf.c **** 	size_t len = 0U;
 942              		.loc 1 238 0
 943 000e 0023     		movs	r3, #0
 944 0010 FB65     		str	r3, [r7, #92]
 239:tiny_printf.c **** 	double diff = 0.0;
 945              		.loc 1 239 0
 946 0012 0023     		movs	r3, #0
 947 0014 0024     		movs	r4, #0
 948 0016 3B64     		str	r3, [r7, #64]
 949 0018 7C64     		str	r4, [r7, #68]
 240:tiny_printf.c **** 
 241:tiny_printf.c **** 	// if input is larger than thres_max, revert to exponential
 242:tiny_printf.c **** 	const double thres_max = (double) 0x7FFFFFFF;
 950              		.loc 1 242 0
 951 001a C04B     		ldr	r3, .L120
 952 001c C04C     		ldr	r4, .L120+4
 953 001e BB63     		str	r3, [r7, #56]
 954 0020 FC63     		str	r4, [r7, #60]
 243:tiny_printf.c **** 
 244:tiny_printf.c **** 	// powers of 10
 245:tiny_printf.c **** 	static const double pow10[] =
 246:tiny_printf.c **** 			{ 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000,
 247:tiny_printf.c **** 					1000000000 };
 248:tiny_printf.c **** 
 249:tiny_printf.c **** 	// test for negative
 250:tiny_printf.c **** 	bool negative = false;
 955              		.loc 1 250 0
 956 0022 5B23     		movs	r3, #91
 957 0024 FB18     		adds	r3, r7, r3
 958 0026 0022     		movs	r2, #0
 959 0028 1A70     		strb	r2, [r3]
 251:tiny_printf.c **** 	if (value < 0)
 960              		.loc 1 251 0
 961 002a 0022     		movs	r2, #0
 962 002c 0023     		movs	r3, #0
 963 002e B868     		ldr	r0, [r7, #8]
 964 0030 F968     		ldr	r1, [r7, #12]
 965 0032 FFF7FEFF 		bl	__aeabi_dcmplt
 966 0036 031E     		subs	r3, r0, #0
 967 0038 0DD0     		beq	.L62
 252:tiny_printf.c **** 	{
 253:tiny_printf.c **** 		negative = true;
 968              		.loc 1 253 0
 969 003a 5B23     		movs	r3, #91
 970 003c FB18     		adds	r3, r7, r3
 971 003e 0122     		movs	r2, #1
 972 0040 1A70     		strb	r2, [r3]
 254:tiny_printf.c **** 		value = 0 - value;
 973              		.loc 1 254 0
 974 0042 BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 23


 975 0044 FB68     		ldr	r3, [r7, #12]
 976 0046 0020     		movs	r0, #0
 977 0048 0021     		movs	r1, #0
 978 004a FFF7FEFF 		bl	__aeabi_dsub
 979 004e 0300     		movs	r3, r0
 980 0050 0C00     		movs	r4, r1
 981 0052 BB60     		str	r3, [r7, #8]
 982 0054 FC60     		str	r4, [r7, #12]
 983              	.L62:
 255:tiny_printf.c **** 	}
 256:tiny_printf.c **** 
 257:tiny_printf.c **** 	// limit precision
 258:tiny_printf.c **** 	if (!(flags & FLAGS_PRECISION))
 984              		.loc 1 258 0
 985 0056 BA6F     		ldr	r2, [r7, #120]
 986 0058 8023     		movs	r3, #128
 987 005a 5B00     		lsls	r3, r3, #1
 988 005c 1340     		ands	r3, r2
 989 005e 01D1     		bne	.L64
 259:tiny_printf.c **** 	{
 260:tiny_printf.c **** 		prec = 6U;  // by default, precesion is 6
 990              		.loc 1 260 0
 991 0060 0623     		movs	r3, #6
 992 0062 3B67     		str	r3, [r7, #112]
 993              	.L64:
 261:tiny_printf.c **** 	}
 262:tiny_printf.c **** 	if (prec > 9U)
 994              		.loc 1 262 0
 995 0064 3B6F     		ldr	r3, [r7, #112]
 996 0066 092B     		cmp	r3, #9
 997 0068 01D9     		bls	.L65
 263:tiny_printf.c **** 	{
 264:tiny_printf.c **** 		// precision of >= 10 can lead to overflow errors
 265:tiny_printf.c **** 		prec = 9U;
 998              		.loc 1 265 0
 999 006a 0923     		movs	r3, #9
 1000 006c 3B67     		str	r3, [r7, #112]
 1001              	.L65:
 266:tiny_printf.c **** 	}
 267:tiny_printf.c **** 
 268:tiny_printf.c **** 	int whole = (int) value;
 1002              		.loc 1 268 0
 1003 006e B868     		ldr	r0, [r7, #8]
 1004 0070 F968     		ldr	r1, [r7, #12]
 1005 0072 FFF7FEFF 		bl	__aeabi_d2iz
 1006 0076 0300     		movs	r3, r0
 1007 0078 7B65     		str	r3, [r7, #84]
 269:tiny_printf.c **** 	double tmp = (value - whole) * pow10[prec];
 1008              		.loc 1 269 0
 1009 007a 786D     		ldr	r0, [r7, #84]
 1010 007c FFF7FEFF 		bl	__aeabi_i2d
 1011 0080 0300     		movs	r3, r0
 1012 0082 0C00     		movs	r4, r1
 1013 0084 1A00     		movs	r2, r3
 1014 0086 2300     		movs	r3, r4
 1015 0088 B868     		ldr	r0, [r7, #8]
 1016 008a F968     		ldr	r1, [r7, #12]
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 24


 1017 008c FFF7FEFF 		bl	__aeabi_dsub
 1018 0090 0300     		movs	r3, r0
 1019 0092 0C00     		movs	r4, r1
 1020 0094 1800     		movs	r0, r3
 1021 0096 2100     		movs	r1, r4
 1022 0098 A24A     		ldr	r2, .L120+8
 1023 009a 3B6F     		ldr	r3, [r7, #112]
 1024 009c DB00     		lsls	r3, r3, #3
 1025 009e D318     		adds	r3, r2, r3
 1026 00a0 5C68     		ldr	r4, [r3, #4]
 1027 00a2 1B68     		ldr	r3, [r3]
 1028 00a4 1A00     		movs	r2, r3
 1029 00a6 2300     		movs	r3, r4
 1030 00a8 FFF7FEFF 		bl	__aeabi_dmul
 1031 00ac 0300     		movs	r3, r0
 1032 00ae 0C00     		movs	r4, r1
 1033 00b0 3B63     		str	r3, [r7, #48]
 1034 00b2 7C63     		str	r4, [r7, #52]
 270:tiny_printf.c **** 	unsigned long frac = (unsigned long) tmp;
 1035              		.loc 1 270 0
 1036 00b4 386B     		ldr	r0, [r7, #48]
 1037 00b6 796B     		ldr	r1, [r7, #52]
 1038 00b8 FFF7FEFF 		bl	__aeabi_d2uiz
 1039 00bc 0300     		movs	r3, r0
 1040 00be 3B65     		str	r3, [r7, #80]
 271:tiny_printf.c **** 	diff = tmp - frac;
 1041              		.loc 1 271 0
 1042 00c0 386D     		ldr	r0, [r7, #80]
 1043 00c2 FFF7FEFF 		bl	__aeabi_ui2d
 1044 00c6 0300     		movs	r3, r0
 1045 00c8 0C00     		movs	r4, r1
 1046 00ca 1A00     		movs	r2, r3
 1047 00cc 2300     		movs	r3, r4
 1048 00ce 386B     		ldr	r0, [r7, #48]
 1049 00d0 796B     		ldr	r1, [r7, #52]
 1050 00d2 FFF7FEFF 		bl	__aeabi_dsub
 1051 00d6 0300     		movs	r3, r0
 1052 00d8 0C00     		movs	r4, r1
 1053 00da 3B64     		str	r3, [r7, #64]
 1054 00dc 7C64     		str	r4, [r7, #68]
 272:tiny_printf.c **** 
 273:tiny_printf.c **** 	if (diff > 0.5)
 1055              		.loc 1 273 0
 1056 00de 0022     		movs	r2, #0
 1057 00e0 914B     		ldr	r3, .L120+12
 1058 00e2 386C     		ldr	r0, [r7, #64]
 1059 00e4 796C     		ldr	r1, [r7, #68]
 1060 00e6 FFF7FEFF 		bl	__aeabi_dcmpgt
 1061 00ea 031E     		subs	r3, r0, #0
 1062 00ec 17D0     		beq	.L116
 274:tiny_printf.c **** 	{
 275:tiny_printf.c **** 		++frac;
 1063              		.loc 1 275 0
 1064 00ee 3B6D     		ldr	r3, [r7, #80]
 1065 00f0 0133     		adds	r3, r3, #1
 1066 00f2 3B65     		str	r3, [r7, #80]
 276:tiny_printf.c **** 		// handle rollover, e.g. case 0.99 with prec 1 is 1.0
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 25


 277:tiny_printf.c **** 		if (frac >= pow10[prec])
 1067              		.loc 1 277 0
 1068 00f4 386D     		ldr	r0, [r7, #80]
 1069 00f6 FFF7FEFF 		bl	__aeabi_ui2d
 1070 00fa 8A4A     		ldr	r2, .L120+8
 1071 00fc 3B6F     		ldr	r3, [r7, #112]
 1072 00fe DB00     		lsls	r3, r3, #3
 1073 0100 D318     		adds	r3, r2, r3
 1074 0102 5C68     		ldr	r4, [r3, #4]
 1075 0104 1B68     		ldr	r3, [r3]
 1076 0106 1A00     		movs	r2, r3
 1077 0108 2300     		movs	r3, r4
 1078 010a FFF7FEFF 		bl	__aeabi_dcmpge
 1079 010e 031E     		subs	r3, r0, #0
 1080 0110 17D0     		beq	.L70
 278:tiny_printf.c **** 		{
 279:tiny_printf.c **** 			frac = 0;
 1081              		.loc 1 279 0
 1082 0112 0023     		movs	r3, #0
 1083 0114 3B65     		str	r3, [r7, #80]
 280:tiny_printf.c **** 			++whole;
 1084              		.loc 1 280 0
 1085 0116 7B6D     		ldr	r3, [r7, #84]
 1086 0118 0133     		adds	r3, r3, #1
 1087 011a 7B65     		str	r3, [r7, #84]
 1088 011c 11E0     		b	.L70
 1089              	.L116:
 281:tiny_printf.c **** 		}
 282:tiny_printf.c **** 	}
 283:tiny_printf.c **** 	else if ((diff == 0.5) && ((frac == 0) || (frac & 1)))
 1090              		.loc 1 283 0
 1091 011e 0022     		movs	r2, #0
 1092 0120 814B     		ldr	r3, .L120+12
 1093 0122 386C     		ldr	r0, [r7, #64]
 1094 0124 796C     		ldr	r1, [r7, #68]
 1095 0126 FFF7FEFF 		bl	__aeabi_dcmpeq
 1096 012a 031E     		subs	r3, r0, #0
 1097 012c 09D0     		beq	.L70
 1098              		.loc 1 283 0 is_stmt 0 discriminator 1
 1099 012e 3B6D     		ldr	r3, [r7, #80]
 1100 0130 002B     		cmp	r3, #0
 1101 0132 03D0     		beq	.L72
 1102              		.loc 1 283 0 discriminator 2
 1103 0134 3B6D     		ldr	r3, [r7, #80]
 1104 0136 0122     		movs	r2, #1
 1105 0138 1340     		ands	r3, r2
 1106 013a 02D0     		beq	.L70
 1107              	.L72:
 284:tiny_printf.c **** 	{
 285:tiny_printf.c **** 		// if halfway, round up if odd, OR if last digit is 0
 286:tiny_printf.c **** 		++frac;
 1108              		.loc 1 286 0 is_stmt 1
 1109 013c 3B6D     		ldr	r3, [r7, #80]
 1110 013e 0133     		adds	r3, r3, #1
 1111 0140 3B65     		str	r3, [r7, #80]
 1112              	.L70:
 287:tiny_printf.c **** 	}
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 26


 288:tiny_printf.c **** 
 289:tiny_printf.c **** 	// for very large numbers switch back to native sprintf for exponentials. anyone want to write cod
 290:tiny_printf.c **** 	// normal printf behavior is to print EVERY whole number digit which can be 100s of characters ove
 291:tiny_printf.c **** 	if (value > thres_max)
 1113              		.loc 1 291 0
 1114 0142 BA6B     		ldr	r2, [r7, #56]
 1115 0144 FB6B     		ldr	r3, [r7, #60]
 1116 0146 B868     		ldr	r0, [r7, #8]
 1117 0148 F968     		ldr	r1, [r7, #12]
 1118 014a FFF7FEFF 		bl	__aeabi_dcmpgt
 1119 014e 031E     		subs	r3, r0, #0
 1120 0150 01D0     		beq	.L117
 292:tiny_printf.c **** 	{
 293:tiny_printf.c **** 		return 0U;
 1121              		.loc 1 293 0
 1122 0152 0023     		movs	r3, #0
 1123 0154 26E1     		b	.L108
 1124              	.L117:
 294:tiny_printf.c **** 	}
 295:tiny_printf.c **** 
 296:tiny_printf.c **** 	if (prec == 0U)
 1125              		.loc 1 296 0
 1126 0156 3B6F     		ldr	r3, [r7, #112]
 1127 0158 002B     		cmp	r3, #0
 1128 015a 2AD1     		bne	.L76
 297:tiny_printf.c **** 	{
 298:tiny_printf.c **** 		diff = value - whole;
 1129              		.loc 1 298 0
 1130 015c 786D     		ldr	r0, [r7, #84]
 1131 015e FFF7FEFF 		bl	__aeabi_i2d
 1132 0162 0300     		movs	r3, r0
 1133 0164 0C00     		movs	r4, r1
 1134 0166 1A00     		movs	r2, r3
 1135 0168 2300     		movs	r3, r4
 1136 016a B868     		ldr	r0, [r7, #8]
 1137 016c F968     		ldr	r1, [r7, #12]
 1138 016e FFF7FEFF 		bl	__aeabi_dsub
 1139 0172 0300     		movs	r3, r0
 1140 0174 0C00     		movs	r4, r1
 1141 0176 3B64     		str	r3, [r7, #64]
 1142 0178 7C64     		str	r4, [r7, #68]
 299:tiny_printf.c **** 		if (diff > 0.5)
 1143              		.loc 1 299 0
 1144 017a 0022     		movs	r2, #0
 1145 017c 6A4B     		ldr	r3, .L120+12
 1146 017e 386C     		ldr	r0, [r7, #64]
 1147 0180 796C     		ldr	r1, [r7, #68]
 1148 0182 FFF7FEFF 		bl	__aeabi_dcmpgt
 1149 0186 031E     		subs	r3, r0, #0
 1150 0188 03D0     		beq	.L118
 300:tiny_printf.c **** 		{
 301:tiny_printf.c **** 			// greater than 0.5, round up, e.g. 1.6 -> 2
 302:tiny_printf.c **** 			++whole;
 1151              		.loc 1 302 0
 1152 018a 7B6D     		ldr	r3, [r7, #84]
 1153 018c 0133     		adds	r3, r3, #1
 1154 018e 7B65     		str	r3, [r7, #84]
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 27


 1155 0190 64E0     		b	.L87
 1156              	.L118:
 303:tiny_printf.c **** 		}
 304:tiny_printf.c **** 		else if ((diff == 0.5) && (whole & 1))
 1157              		.loc 1 304 0
 1158 0192 0022     		movs	r2, #0
 1159 0194 644B     		ldr	r3, .L120+12
 1160 0196 386C     		ldr	r0, [r7, #64]
 1161 0198 796C     		ldr	r1, [r7, #68]
 1162 019a FFF7FEFF 		bl	__aeabi_dcmpeq
 1163 019e 031E     		subs	r3, r0, #0
 1164 01a0 42D0     		beq	.L81
 1165              		.loc 1 304 0 is_stmt 0 discriminator 1
 1166 01a2 7B6D     		ldr	r3, [r7, #84]
 1167 01a4 0122     		movs	r2, #1
 1168 01a6 1340     		ands	r3, r2
 1169 01a8 58D0     		beq	.L87
 305:tiny_printf.c **** 		{
 306:tiny_printf.c **** 			// exactly 0.5 and ODD, then round up
 307:tiny_printf.c **** 			// 1.5 -> 2, but 2.5 -> 2
 308:tiny_printf.c **** 			++whole;
 1170              		.loc 1 308 0 is_stmt 1
 1171 01aa 7B6D     		ldr	r3, [r7, #84]
 1172 01ac 0133     		adds	r3, r3, #1
 1173 01ae 7B65     		str	r3, [r7, #84]
 1174 01b0 54E0     		b	.L87
 1175              	.L76:
 1176              	.LBB5:
 309:tiny_printf.c **** 		}
 310:tiny_printf.c **** 	}
 311:tiny_printf.c **** 	else
 312:tiny_printf.c **** 	{
 313:tiny_printf.c **** 		unsigned int count = prec;
 1177              		.loc 1 313 0
 1178 01b2 3B6F     		ldr	r3, [r7, #112]
 1179 01b4 FB64     		str	r3, [r7, #76]
 1180              	.L83:
 314:tiny_printf.c **** 		// now do fractional part, as an unsigned number
 315:tiny_printf.c **** 		do
 316:tiny_printf.c **** 		{
 317:tiny_printf.c **** 			--count;
 1181              		.loc 1 317 0 discriminator 2
 1182 01b6 FB6C     		ldr	r3, [r7, #76]
 1183 01b8 013B     		subs	r3, r3, #1
 1184 01ba FB64     		str	r3, [r7, #76]
 318:tiny_printf.c **** 			buf[len++] = (char) (48U + (frac % 10U));
 1185              		.loc 1 318 0 discriminator 2
 1186 01bc FC6D     		ldr	r4, [r7, #92]
 1187 01be 631C     		adds	r3, r4, #1
 1188 01c0 FB65     		str	r3, [r7, #92]
 1189 01c2 3B6D     		ldr	r3, [r7, #80]
 1190 01c4 0A21     		movs	r1, #10
 1191 01c6 1800     		movs	r0, r3
 1192 01c8 FFF7FEFF 		bl	__aeabi_uidivmod
 1193 01cc 0B00     		movs	r3, r1
 1194 01ce DBB2     		uxtb	r3, r3
 1195 01d0 3033     		adds	r3, r3, #48
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 28


 1196 01d2 DAB2     		uxtb	r2, r3
 1197 01d4 1023     		movs	r3, #16
 1198 01d6 FB18     		adds	r3, r7, r3
 1199 01d8 1A55     		strb	r2, [r3, r4]
 319:tiny_printf.c **** 		} while ((len < FTOA_BUFFER_SIZE) && (frac /= 10U));
 1200              		.loc 1 319 0 discriminator 2
 1201 01da FB6D     		ldr	r3, [r7, #92]
 1202 01dc 1F2B     		cmp	r3, #31
 1203 01de 11D8     		bhi	.L84
 1204              		.loc 1 319 0 is_stmt 0 discriminator 1
 1205 01e0 3B6D     		ldr	r3, [r7, #80]
 1206 01e2 0A21     		movs	r1, #10
 1207 01e4 1800     		movs	r0, r3
 1208 01e6 FFF7FEFF 		bl	__aeabi_uidiv
 1209 01ea 0300     		movs	r3, r0
 1210 01ec 3B65     		str	r3, [r7, #80]
 1211 01ee 3B6D     		ldr	r3, [r7, #80]
 1212 01f0 002B     		cmp	r3, #0
 1213 01f2 E0D1     		bne	.L83
 320:tiny_printf.c **** 		// add extra 0s
 321:tiny_printf.c **** 		while ((len < FTOA_BUFFER_SIZE) && (count-- > 0U))
 1214              		.loc 1 321 0 is_stmt 1
 1215 01f4 06E0     		b	.L84
 1216              	.L86:
 322:tiny_printf.c **** 		{
 323:tiny_printf.c **** 			buf[len++] = '0';
 1217              		.loc 1 323 0
 1218 01f6 FB6D     		ldr	r3, [r7, #92]
 1219 01f8 5A1C     		adds	r2, r3, #1
 1220 01fa FA65     		str	r2, [r7, #92]
 1221 01fc 1022     		movs	r2, #16
 1222 01fe BA18     		adds	r2, r7, r2
 1223 0200 3021     		movs	r1, #48
 1224 0202 D154     		strb	r1, [r2, r3]
 1225              	.L84:
 321:tiny_printf.c **** 		{
 1226              		.loc 1 321 0
 1227 0204 FB6D     		ldr	r3, [r7, #92]
 1228 0206 1F2B     		cmp	r3, #31
 1229 0208 04D8     		bhi	.L85
 321:tiny_printf.c **** 		{
 1230              		.loc 1 321 0 is_stmt 0 discriminator 1
 1231 020a FB6C     		ldr	r3, [r7, #76]
 1232 020c 5A1E     		subs	r2, r3, #1
 1233 020e FA64     		str	r2, [r7, #76]
 1234 0210 002B     		cmp	r3, #0
 1235 0212 F0D1     		bne	.L86
 1236              	.L85:
 324:tiny_printf.c **** 		}
 325:tiny_printf.c **** 		if (len < FTOA_BUFFER_SIZE)
 1237              		.loc 1 325 0 is_stmt 1
 1238 0214 FB6D     		ldr	r3, [r7, #92]
 1239 0216 1F2B     		cmp	r3, #31
 1240 0218 20D8     		bhi	.L87
 326:tiny_printf.c **** 		{
 327:tiny_printf.c **** 			// add decimal
 328:tiny_printf.c **** 			buf[len++] = '.';
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 29


 1241              		.loc 1 328 0
 1242 021a FB6D     		ldr	r3, [r7, #92]
 1243 021c 5A1C     		adds	r2, r3, #1
 1244 021e FA65     		str	r2, [r7, #92]
 1245 0220 1022     		movs	r2, #16
 1246 0222 BA18     		adds	r2, r7, r2
 1247 0224 2E21     		movs	r1, #46
 1248 0226 D154     		strb	r1, [r2, r3]
 1249              	.L81:
 1250              	.LBE5:
 329:tiny_printf.c **** 		}
 330:tiny_printf.c **** 	}
 331:tiny_printf.c **** 
 332:tiny_printf.c **** 	// do whole part, number is reversed
 333:tiny_printf.c **** 	while (len < FTOA_BUFFER_SIZE)
 1251              		.loc 1 333 0 discriminator 1
 1252 0228 18E0     		b	.L87
 1253              	.L89:
 334:tiny_printf.c **** 	{
 335:tiny_printf.c **** 		buf[len++] = (char) (48 + (whole % 10));
 1254              		.loc 1 335 0
 1255 022a FC6D     		ldr	r4, [r7, #92]
 1256 022c 631C     		adds	r3, r4, #1
 1257 022e FB65     		str	r3, [r7, #92]
 1258 0230 7B6D     		ldr	r3, [r7, #84]
 1259 0232 0A21     		movs	r1, #10
 1260 0234 1800     		movs	r0, r3
 1261 0236 FFF7FEFF 		bl	__aeabi_idivmod
 1262 023a 0B00     		movs	r3, r1
 1263 023c DBB2     		uxtb	r3, r3
 1264 023e 3033     		adds	r3, r3, #48
 1265 0240 DAB2     		uxtb	r2, r3
 1266 0242 1023     		movs	r3, #16
 1267 0244 FB18     		adds	r3, r7, r3
 1268 0246 1A55     		strb	r2, [r3, r4]
 336:tiny_printf.c **** 		if (!(whole /= 10))
 1269              		.loc 1 336 0
 1270 0248 7B6D     		ldr	r3, [r7, #84]
 1271 024a 0A21     		movs	r1, #10
 1272 024c 1800     		movs	r0, r3
 1273 024e FFF7FEFF 		bl	__aeabi_idiv
 1274 0252 0300     		movs	r3, r0
 1275 0254 7B65     		str	r3, [r7, #84]
 1276 0256 7B6D     		ldr	r3, [r7, #84]
 1277 0258 002B     		cmp	r3, #0
 1278 025a 03D0     		beq	.L119
 1279              	.L87:
 333:tiny_printf.c **** 	{
 1280              		.loc 1 333 0
 1281 025c FB6D     		ldr	r3, [r7, #92]
 1282 025e 1F2B     		cmp	r3, #31
 1283 0260 E3D9     		bls	.L89
 1284 0262 08E0     		b	.L90
 1285              	.L119:
 337:tiny_printf.c **** 		{
 338:tiny_printf.c **** 			break;
 1286              		.loc 1 338 0
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 30


 1287 0264 C046     		nop
 339:tiny_printf.c **** 		}
 340:tiny_printf.c **** 	}
 341:tiny_printf.c **** 
 342:tiny_printf.c **** 	// pad leading zeros
 343:tiny_printf.c **** 	while (!(flags & FLAGS_LEFT) && (len < prec) && (len < FTOA_BUFFER_SIZE))
 1288              		.loc 1 343 0
 1289 0266 06E0     		b	.L90
 1290              	.L92:
 344:tiny_printf.c **** 	{
 345:tiny_printf.c **** 		buf[len++] = '0';
 1291              		.loc 1 345 0
 1292 0268 FB6D     		ldr	r3, [r7, #92]
 1293 026a 5A1C     		adds	r2, r3, #1
 1294 026c FA65     		str	r2, [r7, #92]
 1295 026e 1022     		movs	r2, #16
 1296 0270 BA18     		adds	r2, r7, r2
 1297 0272 3021     		movs	r1, #48
 1298 0274 D154     		strb	r1, [r2, r3]
 1299              	.L90:
 343:tiny_printf.c **** 	{
 1300              		.loc 1 343 0
 1301 0276 BB6F     		ldr	r3, [r7, #120]
 1302 0278 0222     		movs	r2, #2
 1303 027a 1340     		ands	r3, r2
 1304 027c 0ED1     		bne	.L93
 343:tiny_printf.c **** 	{
 1305              		.loc 1 343 0 is_stmt 0 discriminator 1
 1306 027e FA6D     		ldr	r2, [r7, #92]
 1307 0280 3B6F     		ldr	r3, [r7, #112]
 1308 0282 9A42     		cmp	r2, r3
 1309 0284 0AD2     		bcs	.L93
 343:tiny_printf.c **** 	{
 1310              		.loc 1 343 0 discriminator 2
 1311 0286 FB6D     		ldr	r3, [r7, #92]
 1312 0288 1F2B     		cmp	r3, #31
 1313 028a EDD9     		bls	.L92
 346:tiny_printf.c **** 	}
 347:tiny_printf.c **** 	while (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD) && (len < width)
 1314              		.loc 1 347 0 is_stmt 1
 1315 028c 06E0     		b	.L93
 1316              	.L95:
 348:tiny_printf.c **** 			&& (len < FTOA_BUFFER_SIZE))
 349:tiny_printf.c **** 	{
 350:tiny_printf.c **** 		buf[len++] = '0';
 1317              		.loc 1 350 0
 1318 028e FB6D     		ldr	r3, [r7, #92]
 1319 0290 5A1C     		adds	r2, r3, #1
 1320 0292 FA65     		str	r2, [r7, #92]
 1321 0294 1022     		movs	r2, #16
 1322 0296 BA18     		adds	r2, r7, r2
 1323 0298 3021     		movs	r1, #48
 1324 029a D154     		strb	r1, [r2, r3]
 1325              	.L93:
 347:tiny_printf.c **** 			&& (len < FTOA_BUFFER_SIZE))
 1326              		.loc 1 347 0
 1327 029c BB6F     		ldr	r3, [r7, #120]
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 31


 1328 029e 0222     		movs	r2, #2
 1329 02a0 1340     		ands	r3, r2
 1330 02a2 0AD1     		bne	.L94
 347:tiny_printf.c **** 			&& (len < FTOA_BUFFER_SIZE))
 1331              		.loc 1 347 0 is_stmt 0 discriminator 1
 1332 02a4 BB6F     		ldr	r3, [r7, #120]
 1333 02a6 0122     		movs	r2, #1
 1334 02a8 1340     		ands	r3, r2
 1335 02aa 06D0     		beq	.L94
 347:tiny_printf.c **** 			&& (len < FTOA_BUFFER_SIZE))
 1336              		.loc 1 347 0 discriminator 2
 1337 02ac FA6D     		ldr	r2, [r7, #92]
 1338 02ae 7B6F     		ldr	r3, [r7, #116]
 1339 02b0 9A42     		cmp	r2, r3
 1340 02b2 02D2     		bcs	.L94
 348:tiny_printf.c **** 			&& (len < FTOA_BUFFER_SIZE))
 1341              		.loc 1 348 0 is_stmt 1
 1342 02b4 FB6D     		ldr	r3, [r7, #92]
 1343 02b6 1F2B     		cmp	r3, #31
 1344 02b8 E9D9     		bls	.L95
 1345              	.L94:
 351:tiny_printf.c **** 	}
 352:tiny_printf.c **** 
 353:tiny_printf.c **** 	// handle sign
 354:tiny_printf.c **** 	if (len < FTOA_BUFFER_SIZE)
 1346              		.loc 1 354 0
 1347 02ba FB6D     		ldr	r3, [r7, #92]
 1348 02bc 1F2B     		cmp	r3, #31
 1349 02be 23D8     		bhi	.L96
 355:tiny_printf.c **** 	{
 356:tiny_printf.c **** 		if (negative)
 1350              		.loc 1 356 0
 1351 02c0 5B23     		movs	r3, #91
 1352 02c2 FB18     		adds	r3, r7, r3
 1353 02c4 1B78     		ldrb	r3, [r3]
 1354 02c6 002B     		cmp	r3, #0
 1355 02c8 07D0     		beq	.L97
 357:tiny_printf.c **** 		{
 358:tiny_printf.c **** 			buf[len++] = '-';
 1356              		.loc 1 358 0
 1357 02ca FB6D     		ldr	r3, [r7, #92]
 1358 02cc 5A1C     		adds	r2, r3, #1
 1359 02ce FA65     		str	r2, [r7, #92]
 1360 02d0 1022     		movs	r2, #16
 1361 02d2 BA18     		adds	r2, r7, r2
 1362 02d4 2D21     		movs	r1, #45
 1363 02d6 D154     		strb	r1, [r2, r3]
 1364 02d8 16E0     		b	.L96
 1365              	.L97:
 359:tiny_printf.c **** 		}
 360:tiny_printf.c **** 		else if (flags & FLAGS_PLUS)
 1366              		.loc 1 360 0
 1367 02da BB6F     		ldr	r3, [r7, #120]
 1368 02dc 0422     		movs	r2, #4
 1369 02de 1340     		ands	r3, r2
 1370 02e0 07D0     		beq	.L98
 361:tiny_printf.c **** 		{
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 32


 362:tiny_printf.c **** 			buf[len++] = '+';  // ignore the space if the '+' exists
 1371              		.loc 1 362 0
 1372 02e2 FB6D     		ldr	r3, [r7, #92]
 1373 02e4 5A1C     		adds	r2, r3, #1
 1374 02e6 FA65     		str	r2, [r7, #92]
 1375 02e8 1022     		movs	r2, #16
 1376 02ea BA18     		adds	r2, r7, r2
 1377 02ec 2B21     		movs	r1, #43
 1378 02ee D154     		strb	r1, [r2, r3]
 1379 02f0 0AE0     		b	.L96
 1380              	.L98:
 363:tiny_printf.c **** 		}
 364:tiny_printf.c **** 		else if (flags & FLAGS_SPACE)
 1381              		.loc 1 364 0
 1382 02f2 BB6F     		ldr	r3, [r7, #120]
 1383 02f4 0822     		movs	r2, #8
 1384 02f6 1340     		ands	r3, r2
 1385 02f8 06D0     		beq	.L96
 365:tiny_printf.c **** 		{
 366:tiny_printf.c **** 			buf[len++] = ' ';
 1386              		.loc 1 366 0
 1387 02fa FB6D     		ldr	r3, [r7, #92]
 1388 02fc 5A1C     		adds	r2, r3, #1
 1389 02fe FA65     		str	r2, [r7, #92]
 1390 0300 1022     		movs	r2, #16
 1391 0302 BA18     		adds	r2, r7, r2
 1392 0304 2021     		movs	r1, #32
 1393 0306 D154     		strb	r1, [r2, r3]
 1394              	.L96:
 367:tiny_printf.c **** 		}
 368:tiny_printf.c **** 	}
 369:tiny_printf.c **** 
 370:tiny_printf.c **** 	// pad spaces up to given width
 371:tiny_printf.c **** 	if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD))
 1395              		.loc 1 371 0
 1396 0308 BB6F     		ldr	r3, [r7, #120]
 1397 030a 0222     		movs	r2, #2
 1398 030c 1340     		ands	r3, r2
 1399 030e 1BD1     		bne	.L99
 1400              		.loc 1 371 0 is_stmt 0 discriminator 1
 1401 0310 BB6F     		ldr	r3, [r7, #120]
 1402 0312 0122     		movs	r2, #1
 1403 0314 1340     		ands	r3, r2
 1404 0316 17D1     		bne	.L99
 372:tiny_printf.c **** 	{
 373:tiny_printf.c **** 		while ((len < width) && (len < FTOA_BUFFER_SIZE))
 1405              		.loc 1 373 0 is_stmt 1
 1406 0318 0FE0     		b	.L100
 1407              	.L121:
 1408 031a C046     		.align	2
 1409              	.L120:
 1410 031c 0000C0FF 		.word	-4194304
 1411 0320 FFFFDF41 		.word	1105199103
 1412 0324 98010000 		.word	pow10.7479
 1413 0328 0000E03F 		.word	1071644672
 1414              	.L101:
 374:tiny_printf.c **** 		{
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 33


 375:tiny_printf.c **** 			buf[len++] = ' ';
 1415              		.loc 1 375 0
 1416 032c FB6D     		ldr	r3, [r7, #92]
 1417 032e 5A1C     		adds	r2, r3, #1
 1418 0330 FA65     		str	r2, [r7, #92]
 1419 0332 1022     		movs	r2, #16
 1420 0334 BA18     		adds	r2, r7, r2
 1421 0336 2021     		movs	r1, #32
 1422 0338 D154     		strb	r1, [r2, r3]
 1423              	.L100:
 373:tiny_printf.c **** 		{
 1424              		.loc 1 373 0
 1425 033a FA6D     		ldr	r2, [r7, #92]
 1426 033c 7B6F     		ldr	r3, [r7, #116]
 1427 033e 9A42     		cmp	r2, r3
 1428 0340 02D2     		bcs	.L99
 373:tiny_printf.c **** 		{
 1429              		.loc 1 373 0 is_stmt 0 discriminator 1
 1430 0342 FB6D     		ldr	r3, [r7, #92]
 1431 0344 1F2B     		cmp	r3, #31
 1432 0346 F1D9     		bls	.L101
 1433              	.L99:
 1434              	.LBB6:
 376:tiny_printf.c **** 		}
 377:tiny_printf.c **** 	}
 378:tiny_printf.c **** 
 379:tiny_printf.c **** 	// reverse string
 380:tiny_printf.c **** 	for (size_t i = 0U; (i < len) && (i < maxlen); ++i)
 1435              		.loc 1 380 0 is_stmt 1
 1436 0348 0023     		movs	r3, #0
 1437 034a BB64     		str	r3, [r7, #72]
 1438 034c 0DE0     		b	.L102
 1439              	.L104:
 381:tiny_printf.c **** 	{
 382:tiny_printf.c **** 		buffer[i] = buf[len - i - 1];
 1440              		.loc 1 382 0 discriminator 4
 1441 034e 7A68     		ldr	r2, [r7, #4]
 1442 0350 BB6C     		ldr	r3, [r7, #72]
 1443 0352 D318     		adds	r3, r2, r3
 1444 0354 F96D     		ldr	r1, [r7, #92]
 1445 0356 BA6C     		ldr	r2, [r7, #72]
 1446 0358 8A1A     		subs	r2, r1, r2
 1447 035a 013A     		subs	r2, r2, #1
 1448 035c 1021     		movs	r1, #16
 1449 035e 7918     		adds	r1, r7, r1
 1450 0360 8A5C     		ldrb	r2, [r1, r2]
 1451 0362 1A70     		strb	r2, [r3]
 380:tiny_printf.c **** 	{
 1452              		.loc 1 380 0 discriminator 4
 1453 0364 BB6C     		ldr	r3, [r7, #72]
 1454 0366 0133     		adds	r3, r3, #1
 1455 0368 BB64     		str	r3, [r7, #72]
 1456              	.L102:
 380:tiny_printf.c **** 	{
 1457              		.loc 1 380 0 is_stmt 0 discriminator 1
 1458 036a BA6C     		ldr	r2, [r7, #72]
 1459 036c FB6D     		ldr	r3, [r7, #92]
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 34


 1460 036e 9A42     		cmp	r2, r3
 1461 0370 03D2     		bcs	.L103
 380:tiny_printf.c **** 	{
 1462              		.loc 1 380 0 discriminator 3
 1463 0372 BA6C     		ldr	r2, [r7, #72]
 1464 0374 3B68     		ldr	r3, [r7]
 1465 0376 9A42     		cmp	r2, r3
 1466 0378 E9D3     		bcc	.L104
 1467              	.L103:
 1468              	.LBE6:
 383:tiny_printf.c **** 	}
 384:tiny_printf.c **** 
 385:tiny_printf.c **** 	// append pad spaces up to given width
 386:tiny_printf.c **** 	if (flags & FLAGS_LEFT)
 1469              		.loc 1 386 0 is_stmt 1
 1470 037a BB6F     		ldr	r3, [r7, #120]
 1471 037c 0222     		movs	r2, #2
 1472 037e 1340     		ands	r3, r2
 1473 0380 0FD0     		beq	.L105
 387:tiny_printf.c **** 	{
 388:tiny_printf.c **** 		while ((len < width) && (len < maxlen))
 1474              		.loc 1 388 0
 1475 0382 06E0     		b	.L106
 1476              	.L107:
 389:tiny_printf.c **** 		{
 390:tiny_printf.c **** 			buffer[len++] = ' ';
 1477              		.loc 1 390 0
 1478 0384 FB6D     		ldr	r3, [r7, #92]
 1479 0386 5A1C     		adds	r2, r3, #1
 1480 0388 FA65     		str	r2, [r7, #92]
 1481 038a 7A68     		ldr	r2, [r7, #4]
 1482 038c D318     		adds	r3, r2, r3
 1483 038e 2022     		movs	r2, #32
 1484 0390 1A70     		strb	r2, [r3]
 1485              	.L106:
 388:tiny_printf.c **** 		{
 1486              		.loc 1 388 0
 1487 0392 FA6D     		ldr	r2, [r7, #92]
 1488 0394 7B6F     		ldr	r3, [r7, #116]
 1489 0396 9A42     		cmp	r2, r3
 1490 0398 03D2     		bcs	.L105
 388:tiny_printf.c **** 		{
 1491              		.loc 1 388 0 is_stmt 0 discriminator 1
 1492 039a FA6D     		ldr	r2, [r7, #92]
 1493 039c 3B68     		ldr	r3, [r7]
 1494 039e 9A42     		cmp	r2, r3
 1495 03a0 F0D3     		bcc	.L107
 1496              	.L105:
 391:tiny_printf.c **** 		}
 392:tiny_printf.c **** 	}
 393:tiny_printf.c **** 
 394:tiny_printf.c **** 	return len;
 1497              		.loc 1 394 0 is_stmt 1
 1498 03a2 FB6D     		ldr	r3, [r7, #92]
 1499              	.L108:
 395:tiny_printf.c **** }
 1500              		.loc 1 395 0 discriminator 3
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 35


 1501 03a4 1800     		movs	r0, r3
 1502 03a6 BD46     		mov	sp, r7
 1503 03a8 19B0     		add	sp, sp, #100
 1504              		@ sp needed
 1505 03aa 90BD     		pop	{r4, r7, pc}
 1506              		.cfi_endproc
 1507              	.LFE42:
 1508              		.size	_ftoa, .-_ftoa
 1509              		.global	__aeabi_d2f
 1510              		.global	__aeabi_f2d
 1511              		.section	.text._vsnprintf,"ax",%progbits
 1512              		.align	2
 1513              		.code	16
 1514              		.thumb_func
 1515              		.type	_vsnprintf, %function
 1516              	_vsnprintf:
 1517              	.LFB43:
 396:tiny_printf.c **** #endif  // PRINTF_FLOAT_SUPPORT
 397:tiny_printf.c **** 
 398:tiny_printf.c **** // internal vsnprintf
 399:tiny_printf.c **** static size_t _vsnprintf(char* buffer, size_t buffer_len, const char* format,
 400:tiny_printf.c **** 		va_list va)
 401:tiny_printf.c **** {
 1518              		.loc 1 401 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 88
 1521              		@ frame_needed = 1, uses_anonymous_args = 0
 1522 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1523              		.cfi_def_cfa_offset 20
 1524              		.cfi_offset 4, -20
 1525              		.cfi_offset 5, -16
 1526              		.cfi_offset 6, -12
 1527              		.cfi_offset 7, -8
 1528              		.cfi_offset 14, -4
 1529 0002 9FB0     		sub	sp, sp, #124
 1530              		.cfi_def_cfa_offset 144
 1531 0004 08AF     		add	r7, sp, #32
 1532              		.cfi_def_cfa 7, 112
 1533 0006 F861     		str	r0, [r7, #28]
 1534 0008 B961     		str	r1, [r7, #24]
 1535 000a 7A61     		str	r2, [r7, #20]
 1536 000c 3B61     		str	r3, [r7, #16]
 402:tiny_printf.c **** 	unsigned int flags, width, precision, n;
 403:tiny_printf.c **** 	size_t idx = 0U;
 1537              		.loc 1 403 0
 1538 000e 0023     		movs	r3, #0
 1539 0010 7B64     		str	r3, [r7, #68]
 404:tiny_printf.c **** 
 405:tiny_printf.c **** 	while (idx < buffer_len)
 1540              		.loc 1 405 0
 1541 0012 1AE3     		b	.L123
 1542              	.L187:
 406:tiny_printf.c **** 	{
 407:tiny_printf.c **** 		// end reached?
 408:tiny_printf.c **** 		if (*format == (char) 0)
 1543              		.loc 1 408 0
 1544 0014 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 36


 1545 0016 1B78     		ldrb	r3, [r3]
 1546 0018 002B     		cmp	r3, #0
 1547 001a 05D1     		bne	.L124
 409:tiny_printf.c **** 		{
 410:tiny_printf.c **** 			buffer[idx] = (char) 0;
 1548              		.loc 1 410 0
 1549 001c FA69     		ldr	r2, [r7, #28]
 1550 001e 7B6C     		ldr	r3, [r7, #68]
 1551 0020 D318     		adds	r3, r2, r3
 1552 0022 0022     		movs	r2, #0
 1553 0024 1A70     		strb	r2, [r3]
 411:tiny_printf.c **** 			break;
 1554              		.loc 1 411 0
 1555 0026 15E3     		b	.L125
 1556              	.L124:
 412:tiny_printf.c **** 		}
 413:tiny_printf.c **** 
 414:tiny_printf.c **** 		// format specifier?  %[flags][width][.precision][length]
 415:tiny_printf.c **** 		if (*format != '%')
 1557              		.loc 1 415 0
 1558 0028 7B69     		ldr	r3, [r7, #20]
 1559 002a 1B78     		ldrb	r3, [r3]
 1560 002c 252B     		cmp	r3, #37
 1561 002e 0BD0     		beq	.L126
 416:tiny_printf.c **** 		{
 417:tiny_printf.c **** 			// no
 418:tiny_printf.c **** 			buffer[idx++] = *format;
 1562              		.loc 1 418 0
 1563 0030 7B6C     		ldr	r3, [r7, #68]
 1564 0032 5A1C     		adds	r2, r3, #1
 1565 0034 7A64     		str	r2, [r7, #68]
 1566 0036 FA69     		ldr	r2, [r7, #28]
 1567 0038 D318     		adds	r3, r2, r3
 1568 003a 7A69     		ldr	r2, [r7, #20]
 1569 003c 1278     		ldrb	r2, [r2]
 1570 003e 1A70     		strb	r2, [r3]
 419:tiny_printf.c **** 			format++;
 1571              		.loc 1 419 0
 1572 0040 7B69     		ldr	r3, [r7, #20]
 1573 0042 0133     		adds	r3, r3, #1
 1574 0044 7B61     		str	r3, [r7, #20]
 420:tiny_printf.c **** 			continue;
 1575              		.loc 1 420 0
 1576 0046 00E3     		b	.L123
 1577              	.L126:
 421:tiny_printf.c **** 		}
 422:tiny_printf.c **** 		else
 423:tiny_printf.c **** 		{
 424:tiny_printf.c **** 			// yes, evaluate it
 425:tiny_printf.c **** 			format++;
 1578              		.loc 1 425 0
 1579 0048 7B69     		ldr	r3, [r7, #20]
 1580 004a 0133     		adds	r3, r3, #1
 1581 004c 7B61     		str	r3, [r7, #20]
 426:tiny_printf.c **** 		}
 427:tiny_printf.c **** 
 428:tiny_printf.c **** 		// evaluate flags
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 37


 429:tiny_printf.c **** 		flags = 0U;
 1582              		.loc 1 429 0
 1583 004e 0023     		movs	r3, #0
 1584 0050 7B65     		str	r3, [r7, #84]
 1585              	.L135:
 430:tiny_printf.c **** 		do
 431:tiny_printf.c **** 		{
 432:tiny_printf.c **** 			switch (*format)
 1586              		.loc 1 432 0
 1587 0052 7B69     		ldr	r3, [r7, #20]
 1588 0054 1B78     		ldrb	r3, [r3]
 1589 0056 203B     		subs	r3, r3, #32
 1590 0058 102B     		cmp	r3, #16
 1591 005a 36D8     		bhi	.L127
 1592 005c 9A00     		lsls	r2, r3, #2
 1593 005e D64B     		ldr	r3, .L189
 1594 0060 D318     		adds	r3, r2, r3
 1595 0062 1B68     		ldr	r3, [r3]
 1596 0064 9F46     		mov	pc, r3
 1597              		.section	.rodata
 1598              		.align	2
 1599              	.L129:
 1600 0000 A2000000 		.word	.L128
 1601 0004 CA000000 		.word	.L127
 1602 0008 CA000000 		.word	.L127
 1603 000c B6000000 		.word	.L130
 1604 0010 CA000000 		.word	.L127
 1605 0014 CA000000 		.word	.L127
 1606 0018 CA000000 		.word	.L127
 1607 001c CA000000 		.word	.L127
 1608 0020 CA000000 		.word	.L127
 1609 0024 CA000000 		.word	.L127
 1610 0028 CA000000 		.word	.L127
 1611 002c 8E000000 		.word	.L131
 1612 0030 CA000000 		.word	.L127
 1613 0034 7A000000 		.word	.L132
 1614 0038 CA000000 		.word	.L127
 1615 003c CA000000 		.word	.L127
 1616 0040 66000000 		.word	.L133
 1617              		.section	.text._vsnprintf
 1618              	.L133:
 433:tiny_printf.c **** 			{
 434:tiny_printf.c **** 			case '0':
 435:tiny_printf.c **** 				flags |= FLAGS_ZEROPAD;
 1619              		.loc 1 435 0
 1620 0066 7B6D     		ldr	r3, [r7, #84]
 1621 0068 0122     		movs	r2, #1
 1622 006a 1343     		orrs	r3, r2
 1623 006c 7B65     		str	r3, [r7, #84]
 436:tiny_printf.c **** 				format++;
 1624              		.loc 1 436 0
 1625 006e 7B69     		ldr	r3, [r7, #20]
 1626 0070 0133     		adds	r3, r3, #1
 1627 0072 7B61     		str	r3, [r7, #20]
 437:tiny_printf.c **** 				n = 1U;
 1628              		.loc 1 437 0
 1629 0074 0123     		movs	r3, #1
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 38


 1630 0076 BB64     		str	r3, [r7, #72]
 438:tiny_printf.c **** 				break;
 1631              		.loc 1 438 0
 1632 0078 2AE0     		b	.L134
 1633              	.L132:
 439:tiny_printf.c **** 			case '-':
 440:tiny_printf.c **** 				flags |= FLAGS_LEFT;
 1634              		.loc 1 440 0
 1635 007a 7B6D     		ldr	r3, [r7, #84]
 1636 007c 0222     		movs	r2, #2
 1637 007e 1343     		orrs	r3, r2
 1638 0080 7B65     		str	r3, [r7, #84]
 441:tiny_printf.c **** 				format++;
 1639              		.loc 1 441 0
 1640 0082 7B69     		ldr	r3, [r7, #20]
 1641 0084 0133     		adds	r3, r3, #1
 1642 0086 7B61     		str	r3, [r7, #20]
 442:tiny_printf.c **** 				n = 1U;
 1643              		.loc 1 442 0
 1644 0088 0123     		movs	r3, #1
 1645 008a BB64     		str	r3, [r7, #72]
 443:tiny_printf.c **** 				break;
 1646              		.loc 1 443 0
 1647 008c 20E0     		b	.L134
 1648              	.L131:
 444:tiny_printf.c **** 			case '+':
 445:tiny_printf.c **** 				flags |= FLAGS_PLUS;
 1649              		.loc 1 445 0
 1650 008e 7B6D     		ldr	r3, [r7, #84]
 1651 0090 0422     		movs	r2, #4
 1652 0092 1343     		orrs	r3, r2
 1653 0094 7B65     		str	r3, [r7, #84]
 446:tiny_printf.c **** 				format++;
 1654              		.loc 1 446 0
 1655 0096 7B69     		ldr	r3, [r7, #20]
 1656 0098 0133     		adds	r3, r3, #1
 1657 009a 7B61     		str	r3, [r7, #20]
 447:tiny_printf.c **** 				n = 1U;
 1658              		.loc 1 447 0
 1659 009c 0123     		movs	r3, #1
 1660 009e BB64     		str	r3, [r7, #72]
 448:tiny_printf.c **** 				break;
 1661              		.loc 1 448 0
 1662 00a0 16E0     		b	.L134
 1663              	.L128:
 449:tiny_printf.c **** 			case ' ':
 450:tiny_printf.c **** 				flags |= FLAGS_SPACE;
 1664              		.loc 1 450 0
 1665 00a2 7B6D     		ldr	r3, [r7, #84]
 1666 00a4 0822     		movs	r2, #8
 1667 00a6 1343     		orrs	r3, r2
 1668 00a8 7B65     		str	r3, [r7, #84]
 451:tiny_printf.c **** 				format++;
 1669              		.loc 1 451 0
 1670 00aa 7B69     		ldr	r3, [r7, #20]
 1671 00ac 0133     		adds	r3, r3, #1
 1672 00ae 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 39


 452:tiny_printf.c **** 				n = 1U;
 1673              		.loc 1 452 0
 1674 00b0 0123     		movs	r3, #1
 1675 00b2 BB64     		str	r3, [r7, #72]
 453:tiny_printf.c **** 				break;
 1676              		.loc 1 453 0
 1677 00b4 0CE0     		b	.L134
 1678              	.L130:
 454:tiny_printf.c **** 			case '#':
 455:tiny_printf.c **** 				flags |= FLAGS_HASH;
 1679              		.loc 1 455 0
 1680 00b6 7B6D     		ldr	r3, [r7, #84]
 1681 00b8 1022     		movs	r2, #16
 1682 00ba 1343     		orrs	r3, r2
 1683 00bc 7B65     		str	r3, [r7, #84]
 456:tiny_printf.c **** 				format++;
 1684              		.loc 1 456 0
 1685 00be 7B69     		ldr	r3, [r7, #20]
 1686 00c0 0133     		adds	r3, r3, #1
 1687 00c2 7B61     		str	r3, [r7, #20]
 457:tiny_printf.c **** 				n = 1U;
 1688              		.loc 1 457 0
 1689 00c4 0123     		movs	r3, #1
 1690 00c6 BB64     		str	r3, [r7, #72]
 458:tiny_printf.c **** 				break;
 1691              		.loc 1 458 0
 1692 00c8 02E0     		b	.L134
 1693              	.L127:
 459:tiny_printf.c **** 			default:
 460:tiny_printf.c **** 				n = 0U;
 1694              		.loc 1 460 0
 1695 00ca 0023     		movs	r3, #0
 1696 00cc BB64     		str	r3, [r7, #72]
 461:tiny_printf.c **** 				break;
 1697              		.loc 1 461 0
 1698 00ce C046     		nop
 1699              	.L134:
 462:tiny_printf.c **** 			}
 463:tiny_printf.c **** 		} while (n);
 1700              		.loc 1 463 0
 1701 00d0 BB6C     		ldr	r3, [r7, #72]
 1702 00d2 002B     		cmp	r3, #0
 1703 00d4 BDD1     		bne	.L135
 464:tiny_printf.c **** 
 465:tiny_printf.c **** 		// evaluate width field
 466:tiny_printf.c **** 		width = 0U;
 1704              		.loc 1 466 0
 1705 00d6 0023     		movs	r3, #0
 1706 00d8 3B65     		str	r3, [r7, #80]
 467:tiny_printf.c **** 		if (_is_digit(*format))
 1707              		.loc 1 467 0
 1708 00da 7B69     		ldr	r3, [r7, #20]
 1709 00dc 1B78     		ldrb	r3, [r3]
 1710 00de 1800     		movs	r0, r3
 1711 00e0 FFF7FEFF 		bl	_is_digit
 1712 00e4 031E     		subs	r3, r0, #0
 1713 00e6 07D0     		beq	.L136
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 40


 468:tiny_printf.c **** 		{
 469:tiny_printf.c **** 			width = _atoi(&format);
 1714              		.loc 1 469 0
 1715 00e8 1423     		movs	r3, #20
 1716 00ea FB18     		adds	r3, r7, r3
 1717 00ec 1800     		movs	r0, r3
 1718 00ee FFF7FEFF 		bl	_atoi
 1719 00f2 0300     		movs	r3, r0
 1720 00f4 3B65     		str	r3, [r7, #80]
 1721 00f6 18E0     		b	.L137
 1722              	.L136:
 470:tiny_printf.c **** 		}
 471:tiny_printf.c **** 		else if (*format == '*')
 1723              		.loc 1 471 0
 1724 00f8 7B69     		ldr	r3, [r7, #20]
 1725 00fa 1B78     		ldrb	r3, [r3]
 1726 00fc 2A2B     		cmp	r3, #42
 1727 00fe 14D1     		bne	.L137
 1728              	.LBB7:
 472:tiny_printf.c **** 		{
 473:tiny_printf.c **** 			const int w = va_arg(va, int);
 1729              		.loc 1 473 0
 1730 0100 3B69     		ldr	r3, [r7, #16]
 1731 0102 1A1D     		adds	r2, r3, #4
 1732 0104 3A61     		str	r2, [r7, #16]
 1733 0106 1B68     		ldr	r3, [r3]
 1734 0108 3B63     		str	r3, [r7, #48]
 474:tiny_printf.c **** 			if (w < 0)
 1735              		.loc 1 474 0
 1736 010a 3B6B     		ldr	r3, [r7, #48]
 1737 010c 002B     		cmp	r3, #0
 1738 010e 07DA     		bge	.L138
 475:tiny_printf.c **** 			{
 476:tiny_printf.c **** 				flags |= FLAGS_LEFT;    // reverse padding
 1739              		.loc 1 476 0
 1740 0110 7B6D     		ldr	r3, [r7, #84]
 1741 0112 0222     		movs	r2, #2
 1742 0114 1343     		orrs	r3, r2
 1743 0116 7B65     		str	r3, [r7, #84]
 477:tiny_printf.c **** 				width = (unsigned int) -w;
 1744              		.loc 1 477 0
 1745 0118 3B6B     		ldr	r3, [r7, #48]
 1746 011a 5B42     		rsbs	r3, r3, #0
 1747 011c 3B65     		str	r3, [r7, #80]
 1748 011e 01E0     		b	.L139
 1749              	.L138:
 478:tiny_printf.c **** 			}
 479:tiny_printf.c **** 			else
 480:tiny_printf.c **** 			{
 481:tiny_printf.c **** 				width = (unsigned int) w;
 1750              		.loc 1 481 0
 1751 0120 3B6B     		ldr	r3, [r7, #48]
 1752 0122 3B65     		str	r3, [r7, #80]
 1753              	.L139:
 482:tiny_printf.c **** 			}
 483:tiny_printf.c **** 			format++;
 1754              		.loc 1 483 0
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 41


 1755 0124 7B69     		ldr	r3, [r7, #20]
 1756 0126 0133     		adds	r3, r3, #1
 1757 0128 7B61     		str	r3, [r7, #20]
 1758              	.L137:
 1759              	.LBE7:
 484:tiny_printf.c **** 		}
 485:tiny_printf.c **** 
 486:tiny_printf.c **** 		// evaluate precision field
 487:tiny_printf.c **** 		precision = 0U;
 1760              		.loc 1 487 0
 1761 012a 0023     		movs	r3, #0
 1762 012c FB64     		str	r3, [r7, #76]
 488:tiny_printf.c **** 		if (*format == '.')
 1763              		.loc 1 488 0
 1764 012e 7B69     		ldr	r3, [r7, #20]
 1765 0130 1B78     		ldrb	r3, [r3]
 1766 0132 2E2B     		cmp	r3, #46
 1767 0134 22D1     		bne	.L140
 489:tiny_printf.c **** 		{
 490:tiny_printf.c **** 			flags |= FLAGS_PRECISION;
 1768              		.loc 1 490 0
 1769 0136 7B6D     		ldr	r3, [r7, #84]
 1770 0138 8022     		movs	r2, #128
 1771 013a 5200     		lsls	r2, r2, #1
 1772 013c 1343     		orrs	r3, r2
 1773 013e 7B65     		str	r3, [r7, #84]
 491:tiny_printf.c **** 			format++;
 1774              		.loc 1 491 0
 1775 0140 7B69     		ldr	r3, [r7, #20]
 1776 0142 0133     		adds	r3, r3, #1
 1777 0144 7B61     		str	r3, [r7, #20]
 492:tiny_printf.c **** 			if (_is_digit(*format))
 1778              		.loc 1 492 0
 1779 0146 7B69     		ldr	r3, [r7, #20]
 1780 0148 1B78     		ldrb	r3, [r3]
 1781 014a 1800     		movs	r0, r3
 1782 014c FFF7FEFF 		bl	_is_digit
 1783 0150 031E     		subs	r3, r0, #0
 1784 0152 07D0     		beq	.L141
 493:tiny_printf.c **** 			{
 494:tiny_printf.c **** 				precision = _atoi(&format);
 1785              		.loc 1 494 0
 1786 0154 1423     		movs	r3, #20
 1787 0156 FB18     		adds	r3, r7, r3
 1788 0158 1800     		movs	r0, r3
 1789 015a FFF7FEFF 		bl	_atoi
 1790 015e 0300     		movs	r3, r0
 1791 0160 FB64     		str	r3, [r7, #76]
 1792 0162 0BE0     		b	.L140
 1793              	.L141:
 495:tiny_printf.c **** 			}
 496:tiny_printf.c **** 			else if (*format == '*')
 1794              		.loc 1 496 0
 1795 0164 7B69     		ldr	r3, [r7, #20]
 1796 0166 1B78     		ldrb	r3, [r3]
 1797 0168 2A2B     		cmp	r3, #42
 1798 016a 07D1     		bne	.L140
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 42


 497:tiny_printf.c **** 			{
 498:tiny_printf.c **** 				precision = (unsigned int) va_arg(va, int);
 1799              		.loc 1 498 0
 1800 016c 3B69     		ldr	r3, [r7, #16]
 1801 016e 1A1D     		adds	r2, r3, #4
 1802 0170 3A61     		str	r2, [r7, #16]
 1803 0172 1B68     		ldr	r3, [r3]
 1804 0174 FB64     		str	r3, [r7, #76]
 499:tiny_printf.c **** 				format++;
 1805              		.loc 1 499 0
 1806 0176 7B69     		ldr	r3, [r7, #20]
 1807 0178 0133     		adds	r3, r3, #1
 1808 017a 7B61     		str	r3, [r7, #20]
 1809              	.L140:
 500:tiny_printf.c **** 			}
 501:tiny_printf.c **** 		}
 502:tiny_printf.c **** 
 503:tiny_printf.c **** 		// evaluate length field
 504:tiny_printf.c **** 		if (*format == 'l' || *format == 'L')
 1810              		.loc 1 504 0
 1811 017c 7B69     		ldr	r3, [r7, #20]
 1812 017e 1B78     		ldrb	r3, [r3]
 1813 0180 6C2B     		cmp	r3, #108
 1814 0182 03D0     		beq	.L142
 1815              		.loc 1 504 0 is_stmt 0 discriminator 1
 1816 0184 7B69     		ldr	r3, [r7, #20]
 1817 0186 1B78     		ldrb	r3, [r3]
 1818 0188 4C2B     		cmp	r3, #76
 1819 018a 06D1     		bne	.L143
 1820              	.L142:
 505:tiny_printf.c **** 		{
 506:tiny_printf.c **** 			flags |= FLAGS_LONG;
 1821              		.loc 1 506 0 is_stmt 1
 1822 018c 7B6D     		ldr	r3, [r7, #84]
 1823 018e 4022     		movs	r2, #64
 1824 0190 1343     		orrs	r3, r2
 1825 0192 7B65     		str	r3, [r7, #84]
 507:tiny_printf.c **** 			format++;
 1826              		.loc 1 507 0
 1827 0194 7B69     		ldr	r3, [r7, #20]
 1828 0196 0133     		adds	r3, r3, #1
 1829 0198 7B61     		str	r3, [r7, #20]
 1830              	.L143:
 508:tiny_printf.c **** 		}
 509:tiny_printf.c **** 		if ((*format == 'l') && (flags & FLAGS_LONG))
 1831              		.loc 1 509 0
 1832 019a 7B69     		ldr	r3, [r7, #20]
 1833 019c 1B78     		ldrb	r3, [r3]
 1834 019e 6C2B     		cmp	r3, #108
 1835 01a0 0AD1     		bne	.L144
 1836              		.loc 1 509 0 is_stmt 0 discriminator 1
 1837 01a2 7B6D     		ldr	r3, [r7, #84]
 1838 01a4 4022     		movs	r2, #64
 1839 01a6 1340     		ands	r3, r2
 1840 01a8 06D0     		beq	.L144
 510:tiny_printf.c **** 		{
 511:tiny_printf.c **** 			flags |= FLAGS_LONG_LONG;
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 43


 1841              		.loc 1 511 0 is_stmt 1
 1842 01aa 7B6D     		ldr	r3, [r7, #84]
 1843 01ac 8022     		movs	r2, #128
 1844 01ae 1343     		orrs	r3, r2
 1845 01b0 7B65     		str	r3, [r7, #84]
 512:tiny_printf.c **** 			format++;
 1846              		.loc 1 512 0
 1847 01b2 7B69     		ldr	r3, [r7, #20]
 1848 01b4 0133     		adds	r3, r3, #1
 1849 01b6 7B61     		str	r3, [r7, #20]
 1850              	.L144:
 513:tiny_printf.c **** 		}
 514:tiny_printf.c **** 
 515:tiny_printf.c **** 		// evaluate specifier
 516:tiny_printf.c **** 		switch (*format)
 1851              		.loc 1 516 0
 1852 01b8 7B69     		ldr	r3, [r7, #20]
 1853 01ba 1B78     		ldrb	r3, [r3]
 1854 01bc 253B     		subs	r3, r3, #37
 1855 01be 532B     		cmp	r3, #83
 1856 01c0 00D9     		bls	.LCB1639
 1857 01c2 36E2     		b	.L145	@long jump
 1858              	.LCB1639:
 1859 01c4 9A00     		lsls	r2, r3, #2
 1860 01c6 7D4B     		ldr	r3, .L189+4
 1861 01c8 D318     		adds	r3, r2, r3
 1862 01ca 1B68     		ldr	r3, [r3]
 1863 01cc 9F46     		mov	pc, r3
 1864              		.section	.rodata
 1865              		.align	2
 1866              	.L147:
 1867 0044 1C060000 		.word	.L146
 1868 0048 32060000 		.word	.L145
 1869 004c 32060000 		.word	.L145
 1870 0050 32060000 		.word	.L145
 1871 0054 32060000 		.word	.L145
 1872 0058 32060000 		.word	.L145
 1873 005c 32060000 		.word	.L145
 1874 0060 32060000 		.word	.L145
 1875 0064 32060000 		.word	.L145
 1876 0068 32060000 		.word	.L145
 1877 006c 32060000 		.word	.L145
 1878 0070 32060000 		.word	.L145
 1879 0074 32060000 		.word	.L145
 1880 0078 32060000 		.word	.L145
 1881 007c 32060000 		.word	.L145
 1882 0080 32060000 		.word	.L145
 1883 0084 32060000 		.word	.L145
 1884 0088 32060000 		.word	.L145
 1885 008c 32060000 		.word	.L145
 1886 0090 32060000 		.word	.L145
 1887 0094 32060000 		.word	.L145
 1888 0098 32060000 		.word	.L145
 1889 009c 32060000 		.word	.L145
 1890 00a0 32060000 		.word	.L145
 1891 00a4 32060000 		.word	.L145
 1892 00a8 32060000 		.word	.L145
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 44


 1893 00ac 32060000 		.word	.L145
 1894 00b0 32060000 		.word	.L145
 1895 00b4 32060000 		.word	.L145
 1896 00b8 32060000 		.word	.L145
 1897 00bc 32060000 		.word	.L145
 1898 00c0 32060000 		.word	.L145
 1899 00c4 32060000 		.word	.L145
 1900 00c8 3A040000 		.word	.L148
 1901 00cc 32060000 		.word	.L145
 1902 00d0 32060000 		.word	.L145
 1903 00d4 32060000 		.word	.L145
 1904 00d8 32060000 		.word	.L145
 1905 00dc 32060000 		.word	.L145
 1906 00e0 32060000 		.word	.L145
 1907 00e4 32060000 		.word	.L145
 1908 00e8 32060000 		.word	.L145
 1909 00ec 32060000 		.word	.L145
 1910 00f0 32060000 		.word	.L145
 1911 00f4 32060000 		.word	.L145
 1912 00f8 32060000 		.word	.L145
 1913 00fc 32060000 		.word	.L145
 1914 0100 32060000 		.word	.L145
 1915 0104 32060000 		.word	.L145
 1916 0108 32060000 		.word	.L145
 1917 010c 32060000 		.word	.L145
 1918 0110 CE010000 		.word	.L149
 1919 0114 32060000 		.word	.L145
 1920 0118 32060000 		.word	.L145
 1921 011c 32060000 		.word	.L145
 1922 0120 32060000 		.word	.L145
 1923 0124 32060000 		.word	.L145
 1924 0128 32060000 		.word	.L145
 1925 012c 32060000 		.word	.L145
 1926 0130 32060000 		.word	.L145
 1927 0134 32060000 		.word	.L145
 1928 0138 CE010000 		.word	.L149
 1929 013c 94040000 		.word	.L150
 1930 0140 CE010000 		.word	.L149
 1931 0144 32060000 		.word	.L145
 1932 0148 3A040000 		.word	.L148
 1933 014c 32060000 		.word	.L145
 1934 0150 32060000 		.word	.L145
 1935 0154 CE010000 		.word	.L149
 1936 0158 32060000 		.word	.L145
 1937 015c 32060000 		.word	.L145
 1938 0160 32060000 		.word	.L145
 1939 0164 32060000 		.word	.L145
 1940 0168 32060000 		.word	.L145
 1941 016c CE010000 		.word	.L149
 1942 0170 D4050000 		.word	.L151
 1943 0174 32060000 		.word	.L145
 1944 0178 32060000 		.word	.L145
 1945 017c 0E050000 		.word	.L152
 1946 0180 32060000 		.word	.L145
 1947 0184 CE010000 		.word	.L149
 1948 0188 32060000 		.word	.L145
 1949 018c 32060000 		.word	.L145
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 45


 1950 0190 CE010000 		.word	.L149
 1951              		.section	.text._vsnprintf
 1952              	.L149:
 1953              	.LBB8:
 517:tiny_printf.c **** 		{
 518:tiny_printf.c **** 		case 'd':
 519:tiny_printf.c **** 		case 'i':
 520:tiny_printf.c **** 		case 'u':
 521:tiny_printf.c **** 		case 'x':
 522:tiny_printf.c **** 		case 'X':
 523:tiny_printf.c **** 		case 'o':
 524:tiny_printf.c **** 		case 'b':
 525:tiny_printf.c **** 		{
 526:tiny_printf.c **** 			// set the base
 527:tiny_printf.c **** 			unsigned int base;
 528:tiny_printf.c **** 			if (*format == 'x' || *format == 'X')
 1954              		.loc 1 528 0
 1955 01ce 7B69     		ldr	r3, [r7, #20]
 1956 01d0 1B78     		ldrb	r3, [r3]
 1957 01d2 782B     		cmp	r3, #120
 1958 01d4 03D0     		beq	.L153
 1959              		.loc 1 528 0 is_stmt 0 discriminator 1
 1960 01d6 7B69     		ldr	r3, [r7, #20]
 1961 01d8 1B78     		ldrb	r3, [r3]
 1962 01da 582B     		cmp	r3, #88
 1963 01dc 02D1     		bne	.L154
 1964              	.L153:
 529:tiny_printf.c **** 			{
 530:tiny_printf.c **** 				base = 16U;
 1965              		.loc 1 530 0 is_stmt 1
 1966 01de 1023     		movs	r3, #16
 1967 01e0 3B64     		str	r3, [r7, #64]
 1968 01e2 17E0     		b	.L155
 1969              	.L154:
 531:tiny_printf.c **** 			}
 532:tiny_printf.c **** 			else if (*format == 'o')
 1970              		.loc 1 532 0
 1971 01e4 7B69     		ldr	r3, [r7, #20]
 1972 01e6 1B78     		ldrb	r3, [r3]
 1973 01e8 6F2B     		cmp	r3, #111
 1974 01ea 02D1     		bne	.L156
 533:tiny_printf.c **** 			{
 534:tiny_printf.c **** 				base = 8U;
 1975              		.loc 1 534 0
 1976 01ec 0823     		movs	r3, #8
 1977 01ee 3B64     		str	r3, [r7, #64]
 1978 01f0 10E0     		b	.L155
 1979              	.L156:
 535:tiny_printf.c **** 			}
 536:tiny_printf.c **** 			else if (*format == 'b')
 1980              		.loc 1 536 0
 1981 01f2 7B69     		ldr	r3, [r7, #20]
 1982 01f4 1B78     		ldrb	r3, [r3]
 1983 01f6 622B     		cmp	r3, #98
 1984 01f8 06D1     		bne	.L157
 537:tiny_printf.c **** 			{
 538:tiny_printf.c **** 				base = 2U;
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 46


 1985              		.loc 1 538 0
 1986 01fa 0223     		movs	r3, #2
 1987 01fc 3B64     		str	r3, [r7, #64]
 539:tiny_printf.c **** 				flags &= ~FLAGS_HASH;   // no hash for bin format
 1988              		.loc 1 539 0
 1989 01fe 7B6D     		ldr	r3, [r7, #84]
 1990 0200 1022     		movs	r2, #16
 1991 0202 9343     		bics	r3, r2
 1992 0204 7B65     		str	r3, [r7, #84]
 1993 0206 05E0     		b	.L155
 1994              	.L157:
 540:tiny_printf.c **** 			}
 541:tiny_printf.c **** 			else
 542:tiny_printf.c **** 			{
 543:tiny_printf.c **** 				base = 10U;
 1995              		.loc 1 543 0
 1996 0208 0A23     		movs	r3, #10
 1997 020a 3B64     		str	r3, [r7, #64]
 544:tiny_printf.c **** 				flags &= ~FLAGS_HASH;   // no hash for dec format
 1998              		.loc 1 544 0
 1999 020c 7B6D     		ldr	r3, [r7, #84]
 2000 020e 1022     		movs	r2, #16
 2001 0210 9343     		bics	r3, r2
 2002 0212 7B65     		str	r3, [r7, #84]
 2003              	.L155:
 545:tiny_printf.c **** 			}
 546:tiny_printf.c **** 			// uppercase
 547:tiny_printf.c **** 			if (*format == 'X')
 2004              		.loc 1 547 0
 2005 0214 7B69     		ldr	r3, [r7, #20]
 2006 0216 1B78     		ldrb	r3, [r3]
 2007 0218 582B     		cmp	r3, #88
 2008 021a 03D1     		bne	.L158
 548:tiny_printf.c **** 			{
 549:tiny_printf.c **** 				flags |= FLAGS_UPPERCASE;
 2009              		.loc 1 549 0
 2010 021c 7B6D     		ldr	r3, [r7, #84]
 2011 021e 2022     		movs	r2, #32
 2012 0220 1343     		orrs	r3, r2
 2013 0222 7B65     		str	r3, [r7, #84]
 2014              	.L158:
 550:tiny_printf.c **** 			}
 551:tiny_printf.c **** 
 552:tiny_printf.c **** 			// no plus or space flag for u, x, X, o, b
 553:tiny_printf.c **** 			if ((*format != 'i') && (*format != 'd'))
 2015              		.loc 1 553 0
 2016 0224 7B69     		ldr	r3, [r7, #20]
 2017 0226 1B78     		ldrb	r3, [r3]
 2018 0228 692B     		cmp	r3, #105
 2019 022a 07D0     		beq	.L159
 2020              		.loc 1 553 0 is_stmt 0 discriminator 1
 2021 022c 7B69     		ldr	r3, [r7, #20]
 2022 022e 1B78     		ldrb	r3, [r3]
 2023 0230 642B     		cmp	r3, #100
 2024 0232 03D0     		beq	.L159
 554:tiny_printf.c **** 			{
 555:tiny_printf.c **** 				flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 47


 2025              		.loc 1 555 0 is_stmt 1
 2026 0234 7B6D     		ldr	r3, [r7, #84]
 2027 0236 0C22     		movs	r2, #12
 2028 0238 9343     		bics	r3, r2
 2029 023a 7B65     		str	r3, [r7, #84]
 2030              	.L159:
 556:tiny_printf.c **** 			}
 557:tiny_printf.c **** 
 558:tiny_printf.c **** 			// convert the integer
 559:tiny_printf.c **** 			if ((*format == 'i') || (*format == 'd'))
 2031              		.loc 1 559 0
 2032 023c 7B69     		ldr	r3, [r7, #20]
 2033 023e 1B78     		ldrb	r3, [r3]
 2034 0240 692B     		cmp	r3, #105
 2035 0242 04D0     		beq	.L160
 2036              		.loc 1 559 0 is_stmt 0 discriminator 1
 2037 0244 7B69     		ldr	r3, [r7, #20]
 2038 0246 1B78     		ldrb	r3, [r3]
 2039 0248 642B     		cmp	r3, #100
 2040 024a 00D0     		beq	.LCB1730
 2041 024c 89E0     		b	.L161	@long jump
 2042              	.LCB1730:
 2043              	.L160:
 560:tiny_printf.c **** 			{
 561:tiny_printf.c **** 				// signed
 562:tiny_printf.c **** 				if (flags & FLAGS_LONG_LONG)
 2044              		.loc 1 562 0 is_stmt 1
 2045 024e 7B6D     		ldr	r3, [r7, #84]
 2046 0250 8022     		movs	r2, #128
 2047 0252 1340     		ands	r3, r2
 2048 0254 37D0     		beq	.L162
 2049              	.LBB9:
 563:tiny_printf.c **** 				{
 564:tiny_printf.c **** #if defined(PRINTF_LONG_LONG_SUPPORT)
 565:tiny_printf.c **** 					const long long value = va_arg(va, long long);
 2050              		.loc 1 565 0
 2051 0256 3B69     		ldr	r3, [r7, #16]
 2052 0258 0733     		adds	r3, r3, #7
 2053 025a 0722     		movs	r2, #7
 2054 025c 9343     		bics	r3, r2
 2055 025e 1A00     		movs	r2, r3
 2056 0260 0832     		adds	r2, r2, #8
 2057 0262 3A61     		str	r2, [r7, #16]
 2058 0264 5C68     		ldr	r4, [r3, #4]
 2059 0266 1B68     		ldr	r3, [r3]
 2060 0268 BB62     		str	r3, [r7, #40]
 2061 026a FC62     		str	r4, [r7, #44]
 566:tiny_printf.c **** 					idx +=
 567:tiny_printf.c **** 							_ntoa_long_long(&buffer[idx],
 2062              		.loc 1 567 0
 2063 026c FA69     		ldr	r2, [r7, #28]
 2064 026e 7B6C     		ldr	r3, [r7, #68]
 2065 0270 D018     		adds	r0, r2, r3
 568:tiny_printf.c **** 									(unsigned long long) (
 2066              		.loc 1 568 0
 2067 0272 BB6A     		ldr	r3, [r7, #40]
 2068 0274 FC6A     		ldr	r4, [r7, #44]
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 48


 2069 0276 002C     		cmp	r4, #0
 2070 0278 04DA     		bge	.L163
 2071 027a 1900     		movs	r1, r3
 2072 027c 2200     		movs	r2, r4
 2073 027e 0024     		movs	r4, #0
 2074 0280 4B42     		rsbs	r3, r1, #0
 2075 0282 9441     		sbcs	r4, r2
 2076              	.L163:
 567:tiny_printf.c **** 									(unsigned long long) (
 2077              		.loc 1 567 0
 2078 0284 3B60     		str	r3, [r7]
 2079 0286 7C60     		str	r4, [r7, #4]
 2080 0288 FB6A     		ldr	r3, [r7, #44]
 2081 028a DB0F     		lsrs	r3, r3, #31
 2082 028c DBB2     		uxtb	r3, r3
 2083 028e 3A6C     		ldr	r2, [r7, #64]
 2084 0290 BA60     		str	r2, [r7, #8]
 2085 0292 0022     		movs	r2, #0
 2086 0294 FA60     		str	r2, [r7, #12]
 2087 0296 B969     		ldr	r1, [r7, #24]
 2088 0298 7A6C     		ldr	r2, [r7, #68]
 2089 029a 8A1A     		subs	r2, r1, r2
 2090 029c 796D     		ldr	r1, [r7, #84]
 2091 029e 0791     		str	r1, [sp, #28]
 2092 02a0 396D     		ldr	r1, [r7, #80]
 2093 02a2 0691     		str	r1, [sp, #24]
 2094 02a4 F96C     		ldr	r1, [r7, #76]
 2095 02a6 0591     		str	r1, [sp, #20]
 2096 02a8 0492     		str	r2, [sp, #16]
 2097 02aa B968     		ldr	r1, [r7, #8]
 2098 02ac FA68     		ldr	r2, [r7, #12]
 2099 02ae 0291     		str	r1, [sp, #8]
 2100 02b0 0392     		str	r2, [sp, #12]
 2101 02b2 0093     		str	r3, [sp]
 2102 02b4 3A68     		ldr	r2, [r7]
 2103 02b6 7B68     		ldr	r3, [r7, #4]
 2104 02b8 FFF7FEFF 		bl	_ntoa_long_long
 2105 02bc 0200     		movs	r2, r0
 566:tiny_printf.c **** 					idx +=
 2106              		.loc 1 566 0
 2107 02be 7B6C     		ldr	r3, [r7, #68]
 2108 02c0 9B18     		adds	r3, r3, r2
 2109 02c2 7B64     		str	r3, [r7, #68]
 2110              	.LBE9:
 562:tiny_printf.c **** 				{
 2111              		.loc 1 562 0
 2112 02c4 B5E0     		b	.L167
 2113              	.L162:
 569:tiny_printf.c **** 											value > 0 ? value : 0 - value),
 570:tiny_printf.c **** 									value < 0, base, buffer_len - idx,
 571:tiny_printf.c **** 									precision, width, flags);
 572:tiny_printf.c **** #endif
 573:tiny_printf.c **** 				}
 574:tiny_printf.c **** 				else if (flags & FLAGS_LONG)
 2114              		.loc 1 574 0
 2115 02c6 7B6D     		ldr	r3, [r7, #84]
 2116 02c8 4022     		movs	r2, #64
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 49


 2117 02ca 1340     		ands	r3, r2
 2118 02cc 24D0     		beq	.L166
 2119              	.LBB10:
 575:tiny_printf.c **** 				{
 576:tiny_printf.c **** 					const long value = va_arg(va, long);
 2120              		.loc 1 576 0
 2121 02ce 3B69     		ldr	r3, [r7, #16]
 2122 02d0 1A1D     		adds	r2, r3, #4
 2123 02d2 3A61     		str	r2, [r7, #16]
 2124 02d4 1B68     		ldr	r3, [r3]
 2125 02d6 7B62     		str	r3, [r7, #36]
 577:tiny_printf.c **** 					idx += _ntoa_long(&buffer[idx],
 2126              		.loc 1 577 0
 2127 02d8 FA69     		ldr	r2, [r7, #28]
 2128 02da 7B6C     		ldr	r3, [r7, #68]
 2129 02dc D018     		adds	r0, r2, r3
 578:tiny_printf.c **** 							(unsigned long) (value > 0 ? value : 0 - value),
 2130              		.loc 1 578 0
 2131 02de 7B6A     		ldr	r3, [r7, #36]
 2132 02e0 DA17     		asrs	r2, r3, #31
 2133 02e2 9B18     		adds	r3, r3, r2
 2134 02e4 5340     		eors	r3, r2
 577:tiny_printf.c **** 					idx += _ntoa_long(&buffer[idx],
 2135              		.loc 1 577 0
 2136 02e6 3B60     		str	r3, [r7]
 2137 02e8 7B6A     		ldr	r3, [r7, #36]
 2138 02ea DB0F     		lsrs	r3, r3, #31
 2139 02ec D9B2     		uxtb	r1, r3
 2140 02ee BA69     		ldr	r2, [r7, #24]
 2141 02f0 7B6C     		ldr	r3, [r7, #68]
 2142 02f2 D31A     		subs	r3, r2, r3
 2143 02f4 3C6C     		ldr	r4, [r7, #64]
 2144 02f6 7A6D     		ldr	r2, [r7, #84]
 2145 02f8 0392     		str	r2, [sp, #12]
 2146 02fa 3A6D     		ldr	r2, [r7, #80]
 2147 02fc 0292     		str	r2, [sp, #8]
 2148 02fe FA6C     		ldr	r2, [r7, #76]
 2149 0300 0192     		str	r2, [sp, #4]
 2150 0302 0093     		str	r3, [sp]
 2151 0304 2300     		movs	r3, r4
 2152 0306 0A00     		movs	r2, r1
 2153 0308 3968     		ldr	r1, [r7]
 2154 030a FFF7FEFF 		bl	_ntoa_long
 2155 030e 0200     		movs	r2, r0
 2156 0310 7B6C     		ldr	r3, [r7, #68]
 2157 0312 9B18     		adds	r3, r3, r2
 2158 0314 7B64     		str	r3, [r7, #68]
 2159              	.LBE10:
 562:tiny_printf.c **** 				{
 2160              		.loc 1 562 0
 2161 0316 8CE0     		b	.L167
 2162              	.L166:
 2163              	.LBB11:
 579:tiny_printf.c **** 							value < 0, base, buffer_len - idx, precision, width,
 580:tiny_printf.c **** 							flags);
 581:tiny_printf.c **** 				}
 582:tiny_printf.c **** 				else
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 50


 583:tiny_printf.c **** 				{
 584:tiny_printf.c **** 					const int value = va_arg(va, int);
 2164              		.loc 1 584 0
 2165 0318 3B69     		ldr	r3, [r7, #16]
 2166 031a 1A1D     		adds	r2, r3, #4
 2167 031c 3A61     		str	r2, [r7, #16]
 2168 031e 1B68     		ldr	r3, [r3]
 2169 0320 3B62     		str	r3, [r7, #32]
 585:tiny_printf.c **** 					idx += _ntoa_long(&buffer[idx],
 2170              		.loc 1 585 0
 2171 0322 FA69     		ldr	r2, [r7, #28]
 2172 0324 7B6C     		ldr	r3, [r7, #68]
 2173 0326 D018     		adds	r0, r2, r3
 586:tiny_printf.c **** 							(unsigned int) (value > 0 ? value : 0 - value),
 2174              		.loc 1 586 0
 2175 0328 3B6A     		ldr	r3, [r7, #32]
 2176 032a DA17     		asrs	r2, r3, #31
 2177 032c 9B18     		adds	r3, r3, r2
 2178 032e 5340     		eors	r3, r2
 585:tiny_printf.c **** 					idx += _ntoa_long(&buffer[idx],
 2179              		.loc 1 585 0
 2180 0330 3B60     		str	r3, [r7]
 2181 0332 3B6A     		ldr	r3, [r7, #32]
 2182 0334 DB0F     		lsrs	r3, r3, #31
 2183 0336 D9B2     		uxtb	r1, r3
 2184 0338 BA69     		ldr	r2, [r7, #24]
 2185 033a 7B6C     		ldr	r3, [r7, #68]
 2186 033c D31A     		subs	r3, r2, r3
 2187 033e 3C6C     		ldr	r4, [r7, #64]
 2188 0340 7A6D     		ldr	r2, [r7, #84]
 2189 0342 0392     		str	r2, [sp, #12]
 2190 0344 3A6D     		ldr	r2, [r7, #80]
 2191 0346 0292     		str	r2, [sp, #8]
 2192 0348 FA6C     		ldr	r2, [r7, #76]
 2193 034a 0192     		str	r2, [sp, #4]
 2194 034c 0093     		str	r3, [sp]
 2195 034e 2300     		movs	r3, r4
 2196 0350 0A00     		movs	r2, r1
 2197 0352 3968     		ldr	r1, [r7]
 2198 0354 FFF7FEFF 		bl	_ntoa_long
 2199 0358 0200     		movs	r2, r0
 2200 035a 7B6C     		ldr	r3, [r7, #68]
 2201 035c 9B18     		adds	r3, r3, r2
 2202 035e 7B64     		str	r3, [r7, #68]
 2203              	.LBE11:
 562:tiny_printf.c **** 				{
 2204              		.loc 1 562 0
 2205 0360 67E0     		b	.L167
 2206              	.L161:
 587:tiny_printf.c **** 							value < 0, base, buffer_len - idx, precision, width,
 588:tiny_printf.c **** 							flags);
 589:tiny_printf.c **** 				}
 590:tiny_printf.c **** 			}
 591:tiny_printf.c **** 			else
 592:tiny_printf.c **** 			{
 593:tiny_printf.c **** 				// unsigned
 594:tiny_printf.c **** 				if (flags & FLAGS_LONG_LONG)
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 51


 2207              		.loc 1 594 0
 2208 0362 7B6D     		ldr	r3, [r7, #84]
 2209 0364 8022     		movs	r2, #128
 2210 0366 1340     		ands	r3, r2
 2211 0368 2AD0     		beq	.L168
 595:tiny_printf.c **** 				{
 596:tiny_printf.c **** #if defined(PRINTF_LONG_LONG_SUPPORT)
 597:tiny_printf.c **** 					idx += _ntoa_long_long(&buffer[idx],
 2212              		.loc 1 597 0
 2213 036a FA69     		ldr	r2, [r7, #28]
 2214 036c 7B6C     		ldr	r3, [r7, #68]
 2215 036e D018     		adds	r0, r2, r3
 2216 0370 3B69     		ldr	r3, [r7, #16]
 2217 0372 0733     		adds	r3, r3, #7
 2218 0374 0722     		movs	r2, #7
 2219 0376 9343     		bics	r3, r2
 2220 0378 1A00     		movs	r2, r3
 2221 037a 0832     		adds	r2, r2, #8
 2222 037c 3A61     		str	r2, [r7, #16]
 2223 037e 5C68     		ldr	r4, [r3, #4]
 2224 0380 1B68     		ldr	r3, [r3]
 2225 0382 3A6C     		ldr	r2, [r7, #64]
 2226 0384 1500     		movs	r5, r2
 2227 0386 0022     		movs	r2, #0
 2228 0388 1600     		movs	r6, r2
 2229 038a B969     		ldr	r1, [r7, #24]
 2230 038c 7A6C     		ldr	r2, [r7, #68]
 2231 038e 8A1A     		subs	r2, r1, r2
 2232 0390 796D     		ldr	r1, [r7, #84]
 2233 0392 0791     		str	r1, [sp, #28]
 2234 0394 396D     		ldr	r1, [r7, #80]
 2235 0396 0691     		str	r1, [sp, #24]
 2236 0398 F96C     		ldr	r1, [r7, #76]
 2237 039a 0591     		str	r1, [sp, #20]
 2238 039c 0492     		str	r2, [sp, #16]
 2239 039e 0295     		str	r5, [sp, #8]
 2240 03a0 0396     		str	r6, [sp, #12]
 2241 03a2 0022     		movs	r2, #0
 2242 03a4 0092     		str	r2, [sp]
 2243 03a6 1A00     		movs	r2, r3
 2244 03a8 2300     		movs	r3, r4
 2245 03aa FFF7FEFF 		bl	_ntoa_long_long
 2246 03ae 0200     		movs	r2, r0
 2247 03b0 7B6C     		ldr	r3, [r7, #68]
 2248 03b2 9B18     		adds	r3, r3, r2
 2249 03b4 7B64     		str	r3, [r7, #68]
 2250 03b6 3CE0     		b	.L167
 2251              	.L190:
 2252              		.align	2
 2253              	.L189:
 2254 03b8 00000000 		.word	.L129
 2255 03bc 44000000 		.word	.L147
 2256              	.L168:
 598:tiny_printf.c **** 							va_arg(va, unsigned long long), false, base,
 599:tiny_printf.c **** 							buffer_len - idx, precision, width, flags);
 600:tiny_printf.c **** #endif
 601:tiny_printf.c **** 				}
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 52


 602:tiny_printf.c **** 				else if (flags & FLAGS_LONG)
 2257              		.loc 1 602 0
 2258 03c0 7B6D     		ldr	r3, [r7, #84]
 2259 03c2 4022     		movs	r2, #64
 2260 03c4 1340     		ands	r3, r2
 2261 03c6 1AD0     		beq	.L169
 603:tiny_printf.c **** 				{
 604:tiny_printf.c **** 					idx += _ntoa_long(&buffer[idx], va_arg(va, unsigned long),
 2262              		.loc 1 604 0
 2263 03c8 FA69     		ldr	r2, [r7, #28]
 2264 03ca 7B6C     		ldr	r3, [r7, #68]
 2265 03cc D018     		adds	r0, r2, r3
 2266 03ce 3B69     		ldr	r3, [r7, #16]
 2267 03d0 1A1D     		adds	r2, r3, #4
 2268 03d2 3A61     		str	r2, [r7, #16]
 2269 03d4 1968     		ldr	r1, [r3]
 2270 03d6 BA69     		ldr	r2, [r7, #24]
 2271 03d8 7B6C     		ldr	r3, [r7, #68]
 2272 03da D31A     		subs	r3, r2, r3
 2273 03dc 3C6C     		ldr	r4, [r7, #64]
 2274 03de 7A6D     		ldr	r2, [r7, #84]
 2275 03e0 0392     		str	r2, [sp, #12]
 2276 03e2 3A6D     		ldr	r2, [r7, #80]
 2277 03e4 0292     		str	r2, [sp, #8]
 2278 03e6 FA6C     		ldr	r2, [r7, #76]
 2279 03e8 0192     		str	r2, [sp, #4]
 2280 03ea 0093     		str	r3, [sp]
 2281 03ec 2300     		movs	r3, r4
 2282 03ee 0022     		movs	r2, #0
 2283 03f0 FFF7FEFF 		bl	_ntoa_long
 2284 03f4 0200     		movs	r2, r0
 2285 03f6 7B6C     		ldr	r3, [r7, #68]
 2286 03f8 9B18     		adds	r3, r3, r2
 2287 03fa 7B64     		str	r3, [r7, #68]
 2288 03fc 19E0     		b	.L167
 2289              	.L169:
 605:tiny_printf.c **** 							false, base, buffer_len - idx, precision, width,
 606:tiny_printf.c **** 							flags);
 607:tiny_printf.c **** 				}
 608:tiny_printf.c **** 				else
 609:tiny_printf.c **** 				{
 610:tiny_printf.c **** 					idx += _ntoa_long(&buffer[idx], va_arg(va, unsigned int),
 2290              		.loc 1 610 0
 2291 03fe FA69     		ldr	r2, [r7, #28]
 2292 0400 7B6C     		ldr	r3, [r7, #68]
 2293 0402 D018     		adds	r0, r2, r3
 2294 0404 3B69     		ldr	r3, [r7, #16]
 2295 0406 1A1D     		adds	r2, r3, #4
 2296 0408 3A61     		str	r2, [r7, #16]
 2297 040a 1968     		ldr	r1, [r3]
 2298 040c BA69     		ldr	r2, [r7, #24]
 2299 040e 7B6C     		ldr	r3, [r7, #68]
 2300 0410 D31A     		subs	r3, r2, r3
 2301 0412 3C6C     		ldr	r4, [r7, #64]
 2302 0414 7A6D     		ldr	r2, [r7, #84]
 2303 0416 0392     		str	r2, [sp, #12]
 2304 0418 3A6D     		ldr	r2, [r7, #80]
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 53


 2305 041a 0292     		str	r2, [sp, #8]
 2306 041c FA6C     		ldr	r2, [r7, #76]
 2307 041e 0192     		str	r2, [sp, #4]
 2308 0420 0093     		str	r3, [sp]
 2309 0422 2300     		movs	r3, r4
 2310 0424 0022     		movs	r2, #0
 2311 0426 FFF7FEFF 		bl	_ntoa_long
 2312 042a 0200     		movs	r2, r0
 2313 042c 7B6C     		ldr	r3, [r7, #68]
 2314 042e 9B18     		adds	r3, r3, r2
 2315 0430 7B64     		str	r3, [r7, #68]
 2316              	.L167:
 611:tiny_printf.c **** 							false, base, buffer_len - idx, precision, width,
 612:tiny_printf.c **** 							flags);
 613:tiny_printf.c **** 				}
 614:tiny_printf.c **** 			}
 615:tiny_printf.c **** 			format++;
 2317              		.loc 1 615 0
 2318 0432 7B69     		ldr	r3, [r7, #20]
 2319 0434 0133     		adds	r3, r3, #1
 2320 0436 7B61     		str	r3, [r7, #20]
 616:tiny_printf.c **** 			break;
 2321              		.loc 1 616 0
 2322 0438 07E1     		b	.L123
 2323              	.L148:
 2324              	.LBE8:
 617:tiny_printf.c **** 		}
 618:tiny_printf.c **** #if defined(PRINTF_FLOAT_SUPPORT)
 619:tiny_printf.c **** 		case 'f':
 620:tiny_printf.c **** 		case 'F':
 621:tiny_printf.c **** 		{
 622:tiny_printf.c **** 			idx += _ftoa((float) va_arg(va, double), &buffer[idx],
 2325              		.loc 1 622 0
 2326 043a 3B69     		ldr	r3, [r7, #16]
 2327 043c 0733     		adds	r3, r3, #7
 2328 043e 0722     		movs	r2, #7
 2329 0440 9343     		bics	r3, r2
 2330 0442 1A00     		movs	r2, r3
 2331 0444 0832     		adds	r2, r2, #8
 2332 0446 3A61     		str	r2, [r7, #16]
 2333 0448 5C68     		ldr	r4, [r3, #4]
 2334 044a 1B68     		ldr	r3, [r3]
 2335 044c 1800     		movs	r0, r3
 2336 044e 2100     		movs	r1, r4
 2337 0450 FFF7FEFF 		bl	__aeabi_d2f
 2338 0454 031C     		adds	r3, r0, #0
 2339 0456 181C     		adds	r0, r3, #0
 2340 0458 FFF7FEFF 		bl	__aeabi_f2d
 2341 045c 3860     		str	r0, [r7]
 2342 045e 7960     		str	r1, [r7, #4]
 2343 0460 FA69     		ldr	r2, [r7, #28]
 2344 0462 7B6C     		ldr	r3, [r7, #68]
 2345 0464 D118     		adds	r1, r2, r3
 2346 0466 BA69     		ldr	r2, [r7, #24]
 2347 0468 7B6C     		ldr	r3, [r7, #68]
 2348 046a D21A     		subs	r2, r2, r3
 2349 046c 7B6D     		ldr	r3, [r7, #84]
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 54


 2350 046e 0293     		str	r3, [sp, #8]
 2351 0470 3B6D     		ldr	r3, [r7, #80]
 2352 0472 0193     		str	r3, [sp, #4]
 2353 0474 FB6C     		ldr	r3, [r7, #76]
 2354 0476 0093     		str	r3, [sp]
 2355 0478 1300     		movs	r3, r2
 2356 047a 0A00     		movs	r2, r1
 2357 047c 3868     		ldr	r0, [r7]
 2358 047e 7968     		ldr	r1, [r7, #4]
 2359 0480 FFF7FEFF 		bl	_ftoa
 2360 0484 0200     		movs	r2, r0
 2361 0486 7B6C     		ldr	r3, [r7, #68]
 2362 0488 9B18     		adds	r3, r3, r2
 2363 048a 7B64     		str	r3, [r7, #68]
 623:tiny_printf.c **** 					buffer_len - idx, precision, width, flags);
 624:tiny_printf.c **** 			format++;
 2364              		.loc 1 624 0
 2365 048c 7B69     		ldr	r3, [r7, #20]
 2366 048e 0133     		adds	r3, r3, #1
 2367 0490 7B61     		str	r3, [r7, #20]
 625:tiny_printf.c **** 			break;
 2368              		.loc 1 625 0
 2369 0492 DAE0     		b	.L123
 2370              	.L150:
 2371              	.LBB12:
 626:tiny_printf.c **** 		}
 627:tiny_printf.c **** #endif  // PRINTF_FLOAT_SUPPORT
 628:tiny_printf.c **** 		case 'c':
 629:tiny_printf.c **** 		{
 630:tiny_printf.c **** 			size_t l = 1U;
 2372              		.loc 1 630 0
 2373 0494 0123     		movs	r3, #1
 2374 0496 FB63     		str	r3, [r7, #60]
 631:tiny_printf.c **** 			// pre padding
 632:tiny_printf.c **** 			if (!(flags & FLAGS_LEFT))
 2375              		.loc 1 632 0
 2376 0498 7B6D     		ldr	r3, [r7, #84]
 2377 049a 0222     		movs	r2, #2
 2378 049c 1340     		ands	r3, r2
 2379 049e 11D1     		bne	.L170
 633:tiny_printf.c **** 			{
 634:tiny_printf.c **** 				while ((idx < buffer_len) && (l++ < width))
 2380              		.loc 1 634 0
 2381 04a0 06E0     		b	.L171
 2382              	.L172:
 635:tiny_printf.c **** 				{
 636:tiny_printf.c **** 					buffer[idx++] = ' ';
 2383              		.loc 1 636 0
 2384 04a2 7B6C     		ldr	r3, [r7, #68]
 2385 04a4 5A1C     		adds	r2, r3, #1
 2386 04a6 7A64     		str	r2, [r7, #68]
 2387 04a8 FA69     		ldr	r2, [r7, #28]
 2388 04aa D318     		adds	r3, r2, r3
 2389 04ac 2022     		movs	r2, #32
 2390 04ae 1A70     		strb	r2, [r3]
 2391              	.L171:
 634:tiny_printf.c **** 				{
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 55


 2392              		.loc 1 634 0
 2393 04b0 7A6C     		ldr	r2, [r7, #68]
 2394 04b2 BB69     		ldr	r3, [r7, #24]
 2395 04b4 9A42     		cmp	r2, r3
 2396 04b6 05D2     		bcs	.L170
 634:tiny_printf.c **** 				{
 2397              		.loc 1 634 0 is_stmt 0 discriminator 1
 2398 04b8 FB6B     		ldr	r3, [r7, #60]
 2399 04ba 5A1C     		adds	r2, r3, #1
 2400 04bc FA63     		str	r2, [r7, #60]
 2401 04be 3A6D     		ldr	r2, [r7, #80]
 2402 04c0 9342     		cmp	r3, r2
 2403 04c2 EED3     		bcc	.L172
 2404              	.L170:
 637:tiny_printf.c **** 				}
 638:tiny_printf.c **** 			}
 639:tiny_printf.c **** 			// char output
 640:tiny_printf.c **** 			buffer[idx++] = (char) va_arg(va, int);
 2405              		.loc 1 640 0 is_stmt 1
 2406 04c4 7B6C     		ldr	r3, [r7, #68]
 2407 04c6 5A1C     		adds	r2, r3, #1
 2408 04c8 7A64     		str	r2, [r7, #68]
 2409 04ca FA69     		ldr	r2, [r7, #28]
 2410 04cc D218     		adds	r2, r2, r3
 2411 04ce 3B69     		ldr	r3, [r7, #16]
 2412 04d0 191D     		adds	r1, r3, #4
 2413 04d2 3961     		str	r1, [r7, #16]
 2414 04d4 1B68     		ldr	r3, [r3]
 2415 04d6 DBB2     		uxtb	r3, r3
 2416 04d8 1370     		strb	r3, [r2]
 641:tiny_printf.c **** 			// post padding
 642:tiny_printf.c **** 			if (flags & FLAGS_LEFT)
 2417              		.loc 1 642 0
 2418 04da 7B6D     		ldr	r3, [r7, #84]
 2419 04dc 0222     		movs	r2, #2
 2420 04de 1340     		ands	r3, r2
 2421 04e0 11D0     		beq	.L173
 643:tiny_printf.c **** 			{
 644:tiny_printf.c **** 				while ((idx < buffer_len) && (l++ < width))
 2422              		.loc 1 644 0
 2423 04e2 06E0     		b	.L174
 2424              	.L175:
 645:tiny_printf.c **** 				{
 646:tiny_printf.c **** 					buffer[idx++] = ' ';
 2425              		.loc 1 646 0
 2426 04e4 7B6C     		ldr	r3, [r7, #68]
 2427 04e6 5A1C     		adds	r2, r3, #1
 2428 04e8 7A64     		str	r2, [r7, #68]
 2429 04ea FA69     		ldr	r2, [r7, #28]
 2430 04ec D318     		adds	r3, r2, r3
 2431 04ee 2022     		movs	r2, #32
 2432 04f0 1A70     		strb	r2, [r3]
 2433              	.L174:
 644:tiny_printf.c **** 				{
 2434              		.loc 1 644 0
 2435 04f2 7A6C     		ldr	r2, [r7, #68]
 2436 04f4 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 56


 2437 04f6 9A42     		cmp	r2, r3
 2438 04f8 05D2     		bcs	.L173
 644:tiny_printf.c **** 				{
 2439              		.loc 1 644 0 is_stmt 0 discriminator 1
 2440 04fa FB6B     		ldr	r3, [r7, #60]
 2441 04fc 5A1C     		adds	r2, r3, #1
 2442 04fe FA63     		str	r2, [r7, #60]
 2443 0500 3A6D     		ldr	r2, [r7, #80]
 2444 0502 9342     		cmp	r3, r2
 2445 0504 EED3     		bcc	.L175
 2446              	.L173:
 647:tiny_printf.c **** 				}
 648:tiny_printf.c **** 			}
 649:tiny_printf.c **** 			format++;
 2447              		.loc 1 649 0 is_stmt 1
 2448 0506 7B69     		ldr	r3, [r7, #20]
 2449 0508 0133     		adds	r3, r3, #1
 2450 050a 7B61     		str	r3, [r7, #20]
 650:tiny_printf.c **** 			break;
 2451              		.loc 1 650 0
 2452 050c 9DE0     		b	.L123
 2453              	.L152:
 2454              	.LBE12:
 2455              	.LBB13:
 651:tiny_printf.c **** 		}
 652:tiny_printf.c **** 
 653:tiny_printf.c **** 		case 's':
 654:tiny_printf.c **** 		{
 655:tiny_printf.c **** 			char* p = va_arg(va, char*);
 2456              		.loc 1 655 0
 2457 050e 3B69     		ldr	r3, [r7, #16]
 2458 0510 1A1D     		adds	r2, r3, #4
 2459 0512 3A61     		str	r2, [r7, #16]
 2460 0514 1B68     		ldr	r3, [r3]
 2461 0516 BB63     		str	r3, [r7, #56]
 656:tiny_printf.c **** 			size_t l = _strlen(p);
 2462              		.loc 1 656 0
 2463 0518 BB6B     		ldr	r3, [r7, #56]
 2464 051a 1800     		movs	r0, r3
 2465 051c FFF7FEFF 		bl	_strlen
 2466 0520 0300     		movs	r3, r0
 2467 0522 7B63     		str	r3, [r7, #52]
 657:tiny_printf.c **** 			// pre padding
 658:tiny_printf.c **** 			if (flags & FLAGS_PRECISION)
 2468              		.loc 1 658 0
 2469 0524 7A6D     		ldr	r2, [r7, #84]
 2470 0526 8023     		movs	r3, #128
 2471 0528 5B00     		lsls	r3, r3, #1
 2472 052a 1340     		ands	r3, r2
 2473 052c 05D0     		beq	.L176
 659:tiny_printf.c **** 			{
 660:tiny_printf.c **** 				l = (l < precision ? l : precision);
 2474              		.loc 1 660 0
 2475 052e 7A6B     		ldr	r2, [r7, #52]
 2476 0530 FB6C     		ldr	r3, [r7, #76]
 2477 0532 9342     		cmp	r3, r2
 2478 0534 00D9     		bls	.L177
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 57


 2479 0536 1300     		movs	r3, r2
 2480              	.L177:
 2481 0538 7B63     		str	r3, [r7, #52]
 2482              	.L176:
 661:tiny_printf.c **** 			}
 662:tiny_printf.c **** 			if (!(flags & FLAGS_LEFT))
 2483              		.loc 1 662 0
 2484 053a 7B6D     		ldr	r3, [r7, #84]
 2485 053c 0222     		movs	r2, #2
 2486 053e 1340     		ands	r3, r2
 2487 0540 1CD1     		bne	.L181
 663:tiny_printf.c **** 			{
 664:tiny_printf.c **** 				while ((idx < buffer_len) && (l++ < width))
 2488              		.loc 1 664 0
 2489 0542 06E0     		b	.L179
 2490              	.L180:
 665:tiny_printf.c **** 				{
 666:tiny_printf.c **** 					buffer[idx++] = ' ';
 2491              		.loc 1 666 0
 2492 0544 7B6C     		ldr	r3, [r7, #68]
 2493 0546 5A1C     		adds	r2, r3, #1
 2494 0548 7A64     		str	r2, [r7, #68]
 2495 054a FA69     		ldr	r2, [r7, #28]
 2496 054c D318     		adds	r3, r2, r3
 2497 054e 2022     		movs	r2, #32
 2498 0550 1A70     		strb	r2, [r3]
 2499              	.L179:
 664:tiny_printf.c **** 				{
 2500              		.loc 1 664 0
 2501 0552 7A6C     		ldr	r2, [r7, #68]
 2502 0554 BB69     		ldr	r3, [r7, #24]
 2503 0556 9A42     		cmp	r2, r3
 2504 0558 10D2     		bcs	.L181
 664:tiny_printf.c **** 				{
 2505              		.loc 1 664 0 is_stmt 0 discriminator 1
 2506 055a 7B6B     		ldr	r3, [r7, #52]
 2507 055c 5A1C     		adds	r2, r3, #1
 2508 055e 7A63     		str	r2, [r7, #52]
 2509 0560 3A6D     		ldr	r2, [r7, #80]
 2510 0562 9342     		cmp	r3, r2
 2511 0564 EED3     		bcc	.L180
 667:tiny_printf.c **** 				}
 668:tiny_printf.c **** 			}
 669:tiny_printf.c **** 			// string output
 670:tiny_printf.c **** 			while ((idx < buffer_len) && (*p != 0)
 2512              		.loc 1 670 0 is_stmt 1
 2513 0566 09E0     		b	.L181
 2514              	.L183:
 671:tiny_printf.c **** 					&& (!(flags & FLAGS_PRECISION) || precision--))
 672:tiny_printf.c **** 			{
 673:tiny_printf.c **** 				buffer[idx++] = *(p++);
 2515              		.loc 1 673 0
 2516 0568 7B6C     		ldr	r3, [r7, #68]
 2517 056a 5A1C     		adds	r2, r3, #1
 2518 056c 7A64     		str	r2, [r7, #68]
 2519 056e FA69     		ldr	r2, [r7, #28]
 2520 0570 D218     		adds	r2, r2, r3
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 58


 2521 0572 BB6B     		ldr	r3, [r7, #56]
 2522 0574 591C     		adds	r1, r3, #1
 2523 0576 B963     		str	r1, [r7, #56]
 2524 0578 1B78     		ldrb	r3, [r3]
 2525 057a 1370     		strb	r3, [r2]
 2526              	.L181:
 670:tiny_printf.c **** 					&& (!(flags & FLAGS_PRECISION) || precision--))
 2527              		.loc 1 670 0
 2528 057c 7A6C     		ldr	r2, [r7, #68]
 2529 057e BB69     		ldr	r3, [r7, #24]
 2530 0580 9A42     		cmp	r2, r3
 2531 0582 0DD2     		bcs	.L182
 670:tiny_printf.c **** 					&& (!(flags & FLAGS_PRECISION) || precision--))
 2532              		.loc 1 670 0 is_stmt 0 discriminator 1
 2533 0584 BB6B     		ldr	r3, [r7, #56]
 2534 0586 1B78     		ldrb	r3, [r3]
 2535 0588 002B     		cmp	r3, #0
 2536 058a 09D0     		beq	.L182
 671:tiny_printf.c **** 					&& (!(flags & FLAGS_PRECISION) || precision--))
 2537              		.loc 1 671 0 is_stmt 1
 2538 058c 7A6D     		ldr	r2, [r7, #84]
 2539 058e 8023     		movs	r3, #128
 2540 0590 5B00     		lsls	r3, r3, #1
 2541 0592 1340     		ands	r3, r2
 2542 0594 E8D0     		beq	.L183
 671:tiny_printf.c **** 					&& (!(flags & FLAGS_PRECISION) || precision--))
 2543              		.loc 1 671 0 is_stmt 0 discriminator 1
 2544 0596 FB6C     		ldr	r3, [r7, #76]
 2545 0598 5A1E     		subs	r2, r3, #1
 2546 059a FA64     		str	r2, [r7, #76]
 2547 059c 002B     		cmp	r3, #0
 2548 059e E3D1     		bne	.L183
 2549              	.L182:
 674:tiny_printf.c **** 			}
 675:tiny_printf.c **** 			// post padding
 676:tiny_printf.c **** 			if (flags & FLAGS_LEFT)
 2550              		.loc 1 676 0 is_stmt 1
 2551 05a0 7B6D     		ldr	r3, [r7, #84]
 2552 05a2 0222     		movs	r2, #2
 2553 05a4 1340     		ands	r3, r2
 2554 05a6 11D0     		beq	.L184
 677:tiny_printf.c **** 			{
 678:tiny_printf.c **** 				while ((idx < buffer_len) && (l++ < width))
 2555              		.loc 1 678 0
 2556 05a8 06E0     		b	.L185
 2557              	.L186:
 679:tiny_printf.c **** 				{
 680:tiny_printf.c **** 					buffer[idx++] = ' ';
 2558              		.loc 1 680 0
 2559 05aa 7B6C     		ldr	r3, [r7, #68]
 2560 05ac 5A1C     		adds	r2, r3, #1
 2561 05ae 7A64     		str	r2, [r7, #68]
 2562 05b0 FA69     		ldr	r2, [r7, #28]
 2563 05b2 D318     		adds	r3, r2, r3
 2564 05b4 2022     		movs	r2, #32
 2565 05b6 1A70     		strb	r2, [r3]
 2566              	.L185:
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 59


 678:tiny_printf.c **** 				{
 2567              		.loc 1 678 0
 2568 05b8 7A6C     		ldr	r2, [r7, #68]
 2569 05ba BB69     		ldr	r3, [r7, #24]
 2570 05bc 9A42     		cmp	r2, r3
 2571 05be 05D2     		bcs	.L184
 678:tiny_printf.c **** 				{
 2572              		.loc 1 678 0 is_stmt 0 discriminator 1
 2573 05c0 7B6B     		ldr	r3, [r7, #52]
 2574 05c2 5A1C     		adds	r2, r3, #1
 2575 05c4 7A63     		str	r2, [r7, #52]
 2576 05c6 3A6D     		ldr	r2, [r7, #80]
 2577 05c8 9342     		cmp	r3, r2
 2578 05ca EED3     		bcc	.L186
 2579              	.L184:
 681:tiny_printf.c **** 				}
 682:tiny_printf.c **** 			}
 683:tiny_printf.c **** 			format++;
 2580              		.loc 1 683 0 is_stmt 1
 2581 05cc 7B69     		ldr	r3, [r7, #20]
 2582 05ce 0133     		adds	r3, r3, #1
 2583 05d0 7B61     		str	r3, [r7, #20]
 684:tiny_printf.c **** 			break;
 2584              		.loc 1 684 0
 2585 05d2 3AE0     		b	.L123
 2586              	.L151:
 2587              	.LBE13:
 685:tiny_printf.c **** 		}
 686:tiny_printf.c **** 
 687:tiny_printf.c **** 		case 'p':
 688:tiny_printf.c **** 		{
 689:tiny_printf.c **** 			width = sizeof(void*) * 2U;
 2588              		.loc 1 689 0
 2589 05d4 0823     		movs	r3, #8
 2590 05d6 3B65     		str	r3, [r7, #80]
 690:tiny_printf.c **** 			flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 2591              		.loc 1 690 0
 2592 05d8 7B6D     		ldr	r3, [r7, #84]
 2593 05da 2122     		movs	r2, #33
 2594 05dc 1343     		orrs	r3, r2
 2595 05de 7B65     		str	r3, [r7, #84]
 691:tiny_printf.c **** 			if (sizeof(uintptr_t) == sizeof(long long))
 692:tiny_printf.c **** 			{
 693:tiny_printf.c **** #if defined(PRINTF_LONG_LONG_SUPPORT)
 694:tiny_printf.c **** 				idx += _ntoa_long_long(&buffer[idx],
 695:tiny_printf.c **** 						(uintptr_t) va_arg(va, void*), false, 16U,
 696:tiny_printf.c **** 						buffer_len - idx, precision, width, flags);
 697:tiny_printf.c **** #endif
 698:tiny_printf.c **** 			}
 699:tiny_printf.c **** 			else
 700:tiny_printf.c **** 			{
 701:tiny_printf.c **** 				idx += _ntoa_long(&buffer[idx],
 2596              		.loc 1 701 0
 2597 05e0 FA69     		ldr	r2, [r7, #28]
 2598 05e2 7B6C     		ldr	r3, [r7, #68]
 2599 05e4 D018     		adds	r0, r2, r3
 702:tiny_printf.c **** 						(unsigned long) ((uintptr_t) va_arg(va, void*)), false,
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 60


 2600              		.loc 1 702 0
 2601 05e6 3B69     		ldr	r3, [r7, #16]
 2602 05e8 1A1D     		adds	r2, r3, #4
 2603 05ea 3A61     		str	r2, [r7, #16]
 2604 05ec 1B68     		ldr	r3, [r3]
 701:tiny_printf.c **** 						(unsigned long) ((uintptr_t) va_arg(va, void*)), false,
 2605              		.loc 1 701 0
 2606 05ee 1900     		movs	r1, r3
 2607 05f0 BA69     		ldr	r2, [r7, #24]
 2608 05f2 7B6C     		ldr	r3, [r7, #68]
 2609 05f4 D31A     		subs	r3, r2, r3
 2610 05f6 7A6D     		ldr	r2, [r7, #84]
 2611 05f8 0392     		str	r2, [sp, #12]
 2612 05fa 3A6D     		ldr	r2, [r7, #80]
 2613 05fc 0292     		str	r2, [sp, #8]
 2614 05fe FA6C     		ldr	r2, [r7, #76]
 2615 0600 0192     		str	r2, [sp, #4]
 2616 0602 0093     		str	r3, [sp]
 2617 0604 1023     		movs	r3, #16
 2618 0606 0022     		movs	r2, #0
 2619 0608 FFF7FEFF 		bl	_ntoa_long
 2620 060c 0200     		movs	r2, r0
 2621 060e 7B6C     		ldr	r3, [r7, #68]
 2622 0610 9B18     		adds	r3, r3, r2
 2623 0612 7B64     		str	r3, [r7, #68]
 703:tiny_printf.c **** 						16U, buffer_len - idx, precision, width, flags);
 704:tiny_printf.c **** 			}
 705:tiny_printf.c **** 			format++;
 2624              		.loc 1 705 0
 2625 0614 7B69     		ldr	r3, [r7, #20]
 2626 0616 0133     		adds	r3, r3, #1
 2627 0618 7B61     		str	r3, [r7, #20]
 706:tiny_printf.c **** 			break;
 2628              		.loc 1 706 0
 2629 061a 16E0     		b	.L123
 2630              	.L146:
 707:tiny_printf.c **** 		}
 708:tiny_printf.c **** 
 709:tiny_printf.c **** 		case '%':
 710:tiny_printf.c **** 			buffer[idx++] = '%';
 2631              		.loc 1 710 0
 2632 061c 7B6C     		ldr	r3, [r7, #68]
 2633 061e 5A1C     		adds	r2, r3, #1
 2634 0620 7A64     		str	r2, [r7, #68]
 2635 0622 FA69     		ldr	r2, [r7, #28]
 2636 0624 D318     		adds	r3, r2, r3
 2637 0626 2522     		movs	r2, #37
 2638 0628 1A70     		strb	r2, [r3]
 711:tiny_printf.c **** 			format++;
 2639              		.loc 1 711 0
 2640 062a 7B69     		ldr	r3, [r7, #20]
 2641 062c 0133     		adds	r3, r3, #1
 2642 062e 7B61     		str	r3, [r7, #20]
 712:tiny_printf.c **** 			break;
 2643              		.loc 1 712 0
 2644 0630 0BE0     		b	.L123
 2645              	.L145:
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 61


 713:tiny_printf.c **** 
 714:tiny_printf.c **** 		default:
 715:tiny_printf.c **** 			buffer[idx++] = *format;
 2646              		.loc 1 715 0
 2647 0632 7B6C     		ldr	r3, [r7, #68]
 2648 0634 5A1C     		adds	r2, r3, #1
 2649 0636 7A64     		str	r2, [r7, #68]
 2650 0638 FA69     		ldr	r2, [r7, #28]
 2651 063a D318     		adds	r3, r2, r3
 2652 063c 7A69     		ldr	r2, [r7, #20]
 2653 063e 1278     		ldrb	r2, [r2]
 2654 0640 1A70     		strb	r2, [r3]
 716:tiny_printf.c **** 			format++;
 2655              		.loc 1 716 0
 2656 0642 7B69     		ldr	r3, [r7, #20]
 2657 0644 0133     		adds	r3, r3, #1
 2658 0646 7B61     		str	r3, [r7, #20]
 717:tiny_printf.c **** 			break;
 2659              		.loc 1 717 0
 2660 0648 C046     		nop
 2661              	.L123:
 405:tiny_printf.c **** 	{
 2662              		.loc 1 405 0
 2663 064a 7A6C     		ldr	r2, [r7, #68]
 2664 064c BB69     		ldr	r3, [r7, #24]
 2665 064e 9A42     		cmp	r2, r3
 2666 0650 00D2     		bcs	.LCB2320
 2667 0652 DFE4     		b	.L187	@long jump
 2668              	.LCB2320:
 2669              	.L125:
 718:tiny_printf.c **** 		}
 719:tiny_printf.c **** 	}
 720:tiny_printf.c **** 
 721:tiny_printf.c **** 	return idx;
 2670              		.loc 1 721 0
 2671 0654 7B6C     		ldr	r3, [r7, #68]
 722:tiny_printf.c **** }
 2672              		.loc 1 722 0
 2673 0656 1800     		movs	r0, r3
 2674 0658 BD46     		mov	sp, r7
 2675 065a 17B0     		add	sp, sp, #92
 2676              		@ sp needed
 2677 065c F0BD     		pop	{r4, r5, r6, r7, pc}
 2678              		.cfi_endproc
 2679              	.LFE43:
 2680              		.size	_vsnprintf, .-_vsnprintf
 2681 065e C046     		.section	.text.tiny_printf,"ax",%progbits
 2682              		.align	2
 2683              		.global	tiny_printf
 2684              		.code	16
 2685              		.thumb_func
 2686              		.type	tiny_printf, %function
 2687              	tiny_printf:
 2688              	.LFB44:
 723:tiny_printf.c **** 
 724:tiny_printf.c **** ///////////////////////////////////////////////////////////////////////////////
 725:tiny_printf.c **** 
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 62


 726:tiny_printf.c **** int tiny_printf(const char* format, ...)
 727:tiny_printf.c **** {
 2689              		.loc 1 727 0
 2690              		.cfi_startproc
 2691              		@ args = 4, pretend = 16, frame = 136
 2692              		@ frame_needed = 1, uses_anonymous_args = 1
 2693 0000 0FB4     		push	{r0, r1, r2, r3}
 2694              		.cfi_def_cfa_offset 16
 2695 0002 80B5     		push	{r7, lr}
 2696              		.cfi_def_cfa_offset 24
 2697              		.cfi_offset 7, -24
 2698              		.cfi_offset 14, -20
 2699 0004 A2B0     		sub	sp, sp, #136
 2700              		.cfi_def_cfa_offset 160
 2701 0006 00AF     		add	r7, sp, #0
 2702              		.cfi_def_cfa_register 7
 728:tiny_printf.c **** 	va_list va;
 729:tiny_printf.c **** 	va_start(va, format);
 2703              		.loc 1 729 0
 2704 0008 9423     		movs	r3, #148
 2705 000a FB18     		adds	r3, r7, r3
 2706 000c 8022     		movs	r2, #128
 2707 000e BA18     		adds	r2, r7, r2
 2708 0010 1360     		str	r3, [r2]
 730:tiny_printf.c **** 	char buffer[PRINTF_BUFFER_SIZE];
 731:tiny_printf.c **** 	size_t ret = _vsnprintf(buffer, PRINTF_BUFFER_SIZE, format, va);
 2709              		.loc 1 731 0
 2710 0012 8023     		movs	r3, #128
 2711 0014 FB18     		adds	r3, r7, r3
 2712 0016 1B68     		ldr	r3, [r3]
 2713 0018 9022     		movs	r2, #144
 2714 001a BA18     		adds	r2, r7, r2
 2715 001c 1268     		ldr	r2, [r2]
 2716 001e 3800     		movs	r0, r7
 2717 0020 8021     		movs	r1, #128
 2718 0022 FFF7FEFF 		bl	_vsnprintf
 2719 0026 0300     		movs	r3, r0
 2720 0028 8422     		movs	r2, #132
 2721 002a BA18     		adds	r2, r7, r2
 2722 002c 1360     		str	r3, [r2]
 732:tiny_printf.c **** 	va_end(va);
 733:tiny_printf.c **** 
 734:tiny_printf.c **** 	put_string((uint8_t*) buffer, ret);
 2723              		.loc 1 734 0
 2724 002e 8423     		movs	r3, #132
 2725 0030 FB18     		adds	r3, r7, r3
 2726 0032 1B68     		ldr	r3, [r3]
 2727 0034 9AB2     		uxth	r2, r3
 2728 0036 3B00     		movs	r3, r7
 2729 0038 1100     		movs	r1, r2
 2730 003a 1800     		movs	r0, r3
 2731 003c FFF7FEFF 		bl	put_string
 735:tiny_printf.c **** 
 736:tiny_printf.c **** 	return (int) ret;
 2732              		.loc 1 736 0
 2733 0040 8423     		movs	r3, #132
 2734 0042 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 63


 2735 0044 1B68     		ldr	r3, [r3]
 737:tiny_printf.c **** }
 2736              		.loc 1 737 0
 2737 0046 1800     		movs	r0, r3
 2738 0048 BD46     		mov	sp, r7
 2739 004a 22B0     		add	sp, sp, #136
 2740              		@ sp needed
 2741 004c 80BC     		pop	{r7}
 2742 004e 08BC     		pop	{r3}
 2743 0050 04B0     		add	sp, sp, #16
 2744 0052 1847     		bx	r3
 2745              		.cfi_endproc
 2746              	.LFE44:
 2747              		.size	tiny_printf, .-tiny_printf
 2748              		.section	.text.tiny_sprintf,"ax",%progbits
 2749              		.align	2
 2750              		.global	tiny_sprintf
 2751              		.code	16
 2752              		.thumb_func
 2753              		.type	tiny_sprintf, %function
 2754              	tiny_sprintf:
 2755              	.LFB45:
 738:tiny_printf.c **** 
 739:tiny_printf.c **** int tiny_sprintf(char* buffer, const char* format, ...)
 740:tiny_printf.c **** {
 2756              		.loc 1 740 0
 2757              		.cfi_startproc
 2758              		@ args = 4, pretend = 12, frame = 16
 2759              		@ frame_needed = 1, uses_anonymous_args = 1
 2760 0000 0EB4     		push	{r1, r2, r3}
 2761              		.cfi_def_cfa_offset 12
 2762 0002 90B5     		push	{r4, r7, lr}
 2763              		.cfi_def_cfa_offset 24
 2764              		.cfi_offset 4, -24
 2765              		.cfi_offset 7, -20
 2766              		.cfi_offset 14, -16
 2767 0004 84B0     		sub	sp, sp, #16
 2768              		.cfi_def_cfa_offset 40
 2769 0006 00AF     		add	r7, sp, #0
 2770              		.cfi_def_cfa_register 7
 2771 0008 7860     		str	r0, [r7, #4]
 741:tiny_printf.c **** 	va_list va;
 742:tiny_printf.c **** 	va_start(va, format);
 2772              		.loc 1 742 0
 2773 000a 2023     		movs	r3, #32
 2774 000c FB18     		adds	r3, r7, r3
 2775 000e BB60     		str	r3, [r7, #8]
 743:tiny_printf.c **** 	size_t ret = _vsnprintf(buffer, (size_t) -1, format, va);
 2776              		.loc 1 743 0
 2777 0010 BC68     		ldr	r4, [r7, #8]
 2778 0012 FA69     		ldr	r2, [r7, #28]
 2779 0014 0123     		movs	r3, #1
 2780 0016 5942     		rsbs	r1, r3, #0
 2781 0018 7868     		ldr	r0, [r7, #4]
 2782 001a 2300     		movs	r3, r4
 2783 001c FFF7FEFF 		bl	_vsnprintf
 2784 0020 0300     		movs	r3, r0
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 64


 2785 0022 FB60     		str	r3, [r7, #12]
 744:tiny_printf.c **** 	va_end(va);
 745:tiny_printf.c **** 	return (int) ret;
 2786              		.loc 1 745 0
 2787 0024 FB68     		ldr	r3, [r7, #12]
 746:tiny_printf.c **** }
 2788              		.loc 1 746 0
 2789 0026 1800     		movs	r0, r3
 2790 0028 BD46     		mov	sp, r7
 2791 002a 04B0     		add	sp, sp, #16
 2792              		@ sp needed
 2793 002c 90BC     		pop	{r4, r7}
 2794 002e 08BC     		pop	{r3}
 2795 0030 03B0     		add	sp, sp, #12
 2796 0032 1847     		bx	r3
 2797              		.cfi_endproc
 2798              	.LFE45:
 2799              		.size	tiny_sprintf, .-tiny_sprintf
 2800              		.section	.text.tiny_snprintf,"ax",%progbits
 2801              		.align	2
 2802              		.global	tiny_snprintf
 2803              		.code	16
 2804              		.thumb_func
 2805              		.type	tiny_snprintf, %function
 2806              	tiny_snprintf:
 2807              	.LFB46:
 747:tiny_printf.c **** 
 748:tiny_printf.c **** int tiny_snprintf(char* buffer, size_t count, const char* format, ...)
 749:tiny_printf.c **** {
 2808              		.loc 1 749 0
 2809              		.cfi_startproc
 2810              		@ args = 4, pretend = 8, frame = 16
 2811              		@ frame_needed = 1, uses_anonymous_args = 1
 2812 0000 0CB4     		push	{r2, r3}
 2813              		.cfi_def_cfa_offset 8
 2814 0002 80B5     		push	{r7, lr}
 2815              		.cfi_def_cfa_offset 16
 2816              		.cfi_offset 7, -16
 2817              		.cfi_offset 14, -12
 2818 0004 84B0     		sub	sp, sp, #16
 2819              		.cfi_def_cfa_offset 32
 2820 0006 00AF     		add	r7, sp, #0
 2821              		.cfi_def_cfa_register 7
 2822 0008 7860     		str	r0, [r7, #4]
 2823 000a 3960     		str	r1, [r7]
 750:tiny_printf.c **** 	va_list va;
 751:tiny_printf.c **** 	va_start(va, format);
 2824              		.loc 1 751 0
 2825 000c 1C23     		movs	r3, #28
 2826 000e FB18     		adds	r3, r7, r3
 2827 0010 BB60     		str	r3, [r7, #8]
 752:tiny_printf.c **** 	size_t ret = _vsnprintf(buffer, count, format, va);
 2828              		.loc 1 752 0
 2829 0012 BB68     		ldr	r3, [r7, #8]
 2830 0014 BA69     		ldr	r2, [r7, #24]
 2831 0016 3968     		ldr	r1, [r7]
 2832 0018 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 65


 2833 001a FFF7FEFF 		bl	_vsnprintf
 2834 001e 0300     		movs	r3, r0
 2835 0020 FB60     		str	r3, [r7, #12]
 753:tiny_printf.c **** 	va_end(va);
 754:tiny_printf.c **** 	return (int) ret;
 2836              		.loc 1 754 0
 2837 0022 FB68     		ldr	r3, [r7, #12]
 755:tiny_printf.c **** }
 2838              		.loc 1 755 0
 2839 0024 1800     		movs	r0, r3
 2840 0026 BD46     		mov	sp, r7
 2841 0028 04B0     		add	sp, sp, #16
 2842              		@ sp needed
 2843 002a 80BC     		pop	{r7}
 2844 002c 08BC     		pop	{r3}
 2845 002e 02B0     		add	sp, sp, #8
 2846 0030 1847     		bx	r3
 2847              		.cfi_endproc
 2848              	.LFE46:
 2849              		.size	tiny_snprintf, .-tiny_snprintf
 2850 0032 C046     		.section	.rodata
 2851 0194 00000000 		.align	3
 2852              		.type	pow10.7479, %object
 2853              		.size	pow10.7479, 80
 2854              	pow10.7479:
 2855 0198 00000000 		.word	0
 2856 019c 0000F03F 		.word	1072693248
 2857 01a0 00000000 		.word	0
 2858 01a4 00002440 		.word	1076101120
 2859 01a8 00000000 		.word	0
 2860 01ac 00005940 		.word	1079574528
 2861 01b0 00000000 		.word	0
 2862 01b4 00408F40 		.word	1083129856
 2863 01b8 00000000 		.word	0
 2864 01bc 0088C340 		.word	1086556160
 2865 01c0 00000000 		.word	0
 2866 01c4 006AF840 		.word	1090021888
 2867 01c8 00000000 		.word	0
 2868 01cc 80842E41 		.word	1093567616
 2869 01d0 00000000 		.word	0
 2870 01d4 D0126341 		.word	1097011920
 2871 01d8 00000000 		.word	0
 2872 01dc 84D79741 		.word	1100470148
 2873 01e0 00000000 		.word	0
 2874 01e4 65CDCD41 		.word	1104006501
 2875              		.text
 2876              	.Letext0:
 2877              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2878              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2879              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2880              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2881              		.file 6 "<built-in>"
 2882              		.section	.debug_info,"",%progbits
 2883              	.Ldebug_info0:
 2884 0000 0F080000 		.4byte	0x80f
 2885 0004 0400     		.2byte	0x4
 2886 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 66


 2887 000a 04       		.byte	0x4
 2888 000b 01       		.uleb128 0x1
 2889 000c 26010000 		.4byte	.LASF56
 2890 0010 0C       		.byte	0xc
 2891 0011 5A020000 		.4byte	.LASF57
 2892 0015 E0000000 		.4byte	.LASF58
 2893 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2894 001d 00000000 		.4byte	0
 2895 0021 00000000 		.4byte	.Ldebug_line0
 2896 0025 02       		.uleb128 0x2
 2897 0026 04       		.byte	0x4
 2898 0027 05       		.byte	0x5
 2899 0028 696E7400 		.ascii	"int\000"
 2900 002c 03       		.uleb128 0x3
 2901 002d 1A000000 		.4byte	.LASF4
 2902 0031 02       		.byte	0x2
 2903 0032 D8       		.byte	0xd8
 2904 0033 37000000 		.4byte	0x37
 2905 0037 04       		.uleb128 0x4
 2906 0038 04       		.byte	0x4
 2907 0039 07       		.byte	0x7
 2908 003a 02020000 		.4byte	.LASF0
 2909 003e 04       		.uleb128 0x4
 2910 003f 08       		.byte	0x8
 2911 0040 05       		.byte	0x5
 2912 0041 2A000000 		.4byte	.LASF1
 2913 0045 04       		.uleb128 0x4
 2914 0046 08       		.byte	0x8
 2915 0047 04       		.byte	0x4
 2916 0048 B4010000 		.4byte	.LASF2
 2917 004c 04       		.uleb128 0x4
 2918 004d 01       		.byte	0x1
 2919 004e 06       		.byte	0x6
 2920 004f D9010000 		.4byte	.LASF3
 2921 0053 03       		.uleb128 0x3
 2922 0054 D6000000 		.4byte	.LASF5
 2923 0058 03       		.byte	0x3
 2924 0059 1D       		.byte	0x1d
 2925 005a 5E000000 		.4byte	0x5e
 2926 005e 04       		.uleb128 0x4
 2927 005f 01       		.byte	0x1
 2928 0060 08       		.byte	0x8
 2929 0061 C0010000 		.4byte	.LASF6
 2930 0065 04       		.uleb128 0x4
 2931 0066 02       		.byte	0x2
 2932 0067 05       		.byte	0x5
 2933 0068 10000000 		.4byte	.LASF7
 2934 006c 03       		.uleb128 0x3
 2935 006d 3D000000 		.4byte	.LASF8
 2936 0071 03       		.byte	0x3
 2937 0072 2B       		.byte	0x2b
 2938 0073 77000000 		.4byte	0x77
 2939 0077 04       		.uleb128 0x4
 2940 0078 02       		.byte	0x2
 2941 0079 07       		.byte	0x7
 2942 007a 25020000 		.4byte	.LASF9
 2943 007e 04       		.uleb128 0x4
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 67


 2944 007f 04       		.byte	0x4
 2945 0080 05       		.byte	0x5
 2946 0081 9F000000 		.4byte	.LASF10
 2947 0085 04       		.uleb128 0x4
 2948 0086 04       		.byte	0x4
 2949 0087 07       		.byte	0x7
 2950 0088 A1020000 		.4byte	.LASF11
 2951 008c 04       		.uleb128 0x4
 2952 008d 08       		.byte	0x8
 2953 008e 07       		.byte	0x7
 2954 008f EB010000 		.4byte	.LASF12
 2955 0093 03       		.uleb128 0x3
 2956 0094 BA020000 		.4byte	.LASF13
 2957 0098 03       		.byte	0x3
 2958 0099 CA       		.byte	0xca
 2959 009a 37000000 		.4byte	0x37
 2960 009e 03       		.uleb128 0x3
 2961 009f 5B000000 		.4byte	.LASF14
 2962 00a3 04       		.byte	0x4
 2963 00a4 18       		.byte	0x18
 2964 00a5 53000000 		.4byte	0x53
 2965 00a9 03       		.uleb128 0x3
 2966 00aa 0F020000 		.4byte	.LASF15
 2967 00ae 04       		.byte	0x4
 2968 00af 24       		.byte	0x24
 2969 00b0 6C000000 		.4byte	0x6c
 2970 00b4 03       		.uleb128 0x3
 2971 00b5 63000000 		.4byte	.LASF16
 2972 00b9 04       		.byte	0x4
 2973 00ba 48       		.byte	0x48
 2974 00bb 93000000 		.4byte	0x93
 2975 00bf 04       		.uleb128 0x4
 2976 00c0 04       		.byte	0x4
 2977 00c1 04       		.byte	0x4
 2978 00c2 7A000000 		.4byte	.LASF17
 2979 00c6 04       		.uleb128 0x4
 2980 00c7 08       		.byte	0x8
 2981 00c8 04       		.byte	0x4
 2982 00c9 B3020000 		.4byte	.LASF18
 2983 00cd 04       		.uleb128 0x4
 2984 00ce 01       		.byte	0x1
 2985 00cf 08       		.byte	0x8
 2986 00d0 43020000 		.4byte	.LASF19
 2987 00d4 04       		.uleb128 0x4
 2988 00d5 04       		.byte	0x4
 2989 00d6 07       		.byte	0x7
 2990 00d7 21000000 		.4byte	.LASF20
 2991 00db 05       		.uleb128 0x5
 2992 00dc 04       		.byte	0x4
 2993 00dd 06       		.uleb128 0x6
 2994 00de 04       		.byte	0x4
 2995 00df CD000000 		.4byte	0xcd
 2996 00e3 06       		.uleb128 0x6
 2997 00e4 04       		.byte	0x4
 2998 00e5 E9000000 		.4byte	0xe9
 2999 00e9 07       		.uleb128 0x7
 3000 00ea CD000000 		.4byte	0xcd
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 68


 3001 00ee 03       		.uleb128 0x3
 3002 00ef D1020000 		.4byte	.LASF21
 3003 00f3 05       		.byte	0x5
 3004 00f4 28       		.byte	0x28
 3005 00f5 F9000000 		.4byte	0xf9
 3006 00f9 08       		.uleb128 0x8
 3007 00fa 95000000 		.4byte	.LASF59
 3008 00fe 04       		.byte	0x4
 3009 00ff 06       		.byte	0x6
 3010 0100 00       		.byte	0
 3011 0101 10010000 		.4byte	0x110
 3012 0105 09       		.uleb128 0x9
 3013 0106 3E020000 		.4byte	.LASF60
 3014 010a DB000000 		.4byte	0xdb
 3015 010e 00       		.byte	0
 3016 010f 00       		.byte	0
 3017 0110 03       		.uleb128 0x3
 3018 0111 48000000 		.4byte	.LASF22
 3019 0115 05       		.byte	0x5
 3020 0116 62       		.byte	0x62
 3021 0117 EE000000 		.4byte	0xee
 3022 011b 0A       		.uleb128 0xa
 3023 011c E0020000 		.4byte	.LASF54
 3024 0120 01       		.byte	0x1
 3025 0121 08       		.byte	0x8
 3026 0122 00000000 		.4byte	.LFB35
 3027 0126 48000000 		.4byte	.LFE35-.LFB35
 3028 012a 01       		.uleb128 0x1
 3029 012b 9C       		.byte	0x9c
 3030 012c 4D010000 		.4byte	0x14d
 3031 0130 0B       		.uleb128 0xb
 3032 0131 38000000 		.4byte	.LASF23
 3033 0135 01       		.byte	0x1
 3034 0136 08       		.byte	0x8
 3035 0137 4D010000 		.4byte	0x14d
 3036 013b 02       		.uleb128 0x2
 3037 013c 91       		.byte	0x91
 3038 013d 74       		.sleb128 -12
 3039 013e 0B       		.uleb128 0xb
 3040 013f 73000000 		.4byte	.LASF24
 3041 0143 01       		.byte	0x1
 3042 0144 08       		.byte	0x8
 3043 0145 A9000000 		.4byte	0xa9
 3044 0149 02       		.uleb128 0x2
 3045 014a 91       		.byte	0x91
 3046 014b 72       		.sleb128 -14
 3047 014c 00       		.byte	0
 3048 014d 06       		.uleb128 0x6
 3049 014e 04       		.byte	0x4
 3050 014f 9E000000 		.4byte	0x9e
 3051 0153 0C       		.uleb128 0xc
 3052 0154 BB000000 		.4byte	.LASF25
 3053 0158 01       		.byte	0x1
 3054 0159 33       		.byte	0x33
 3055 015a 2C000000 		.4byte	0x2c
 3056 015e 00000000 		.4byte	.LFB36
 3057 0162 2A000000 		.4byte	.LFE36-.LFB36
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 69


 3058 0166 01       		.uleb128 0x1
 3059 0167 9C       		.byte	0x9c
 3060 0168 89010000 		.4byte	0x189
 3061 016c 0D       		.uleb128 0xd
 3062 016d 73747200 		.ascii	"str\000"
 3063 0171 01       		.byte	0x1
 3064 0172 33       		.byte	0x33
 3065 0173 E3000000 		.4byte	0xe3
 3066 0177 02       		.uleb128 0x2
 3067 0178 91       		.byte	0x91
 3068 0179 6C       		.sleb128 -20
 3069 017a 0E       		.uleb128 0xe
 3070 017b 6C656E00 		.ascii	"len\000"
 3071 017f 01       		.byte	0x1
 3072 0180 35       		.byte	0x35
 3073 0181 2C000000 		.4byte	0x2c
 3074 0185 02       		.uleb128 0x2
 3075 0186 91       		.byte	0x91
 3076 0187 74       		.sleb128 -12
 3077 0188 00       		.byte	0
 3078 0189 0C       		.uleb128 0xc
 3079 018a 68020000 		.4byte	.LASF26
 3080 018e 01       		.byte	0x1
 3081 018f 3E       		.byte	0x3e
 3082 0190 B0010000 		.4byte	0x1b0
 3083 0194 00000000 		.4byte	.LFB37
 3084 0198 32000000 		.4byte	.LFE37-.LFB37
 3085 019c 01       		.uleb128 0x1
 3086 019d 9C       		.byte	0x9c
 3087 019e B0010000 		.4byte	0x1b0
 3088 01a2 0D       		.uleb128 0xd
 3089 01a3 636800   		.ascii	"ch\000"
 3090 01a6 01       		.byte	0x1
 3091 01a7 3E       		.byte	0x3e
 3092 01a8 CD000000 		.4byte	0xcd
 3093 01ac 02       		.uleb128 0x2
 3094 01ad 91       		.byte	0x91
 3095 01ae 77       		.sleb128 -9
 3096 01af 00       		.byte	0
 3097 01b0 04       		.uleb128 0x4
 3098 01b1 01       		.byte	0x1
 3099 01b2 02       		.byte	0x2
 3100 01b3 54020000 		.4byte	.LASF27
 3101 01b7 0F       		.uleb128 0xf
 3102 01b8 1F020000 		.4byte	.LASF28
 3103 01bc 01       		.byte	0x1
 3104 01bd 44       		.byte	0x44
 3105 01be 37000000 		.4byte	0x37
 3106 01c2 00000000 		.4byte	.LFB38
 3107 01c6 46000000 		.4byte	.LFE38-.LFB38
 3108 01ca 01       		.uleb128 0x1
 3109 01cb 9C       		.byte	0x9c
 3110 01cc EB010000 		.4byte	0x1eb
 3111 01d0 0D       		.uleb128 0xd
 3112 01d1 73747200 		.ascii	"str\000"
 3113 01d5 01       		.byte	0x1
 3114 01d6 44       		.byte	0x44
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 70


 3115 01d7 EB010000 		.4byte	0x1eb
 3116 01db 02       		.uleb128 0x2
 3117 01dc 91       		.byte	0x91
 3118 01dd 6C       		.sleb128 -20
 3119 01de 0E       		.uleb128 0xe
 3120 01df 6900     		.ascii	"i\000"
 3121 01e1 01       		.byte	0x1
 3122 01e2 46       		.byte	0x46
 3123 01e3 37000000 		.4byte	0x37
 3124 01e7 02       		.uleb128 0x2
 3125 01e8 91       		.byte	0x91
 3126 01e9 74       		.sleb128 -12
 3127 01ea 00       		.byte	0
 3128 01eb 06       		.uleb128 0x6
 3129 01ec 04       		.byte	0x4
 3130 01ed E3000000 		.4byte	0xe3
 3131 01f1 0C       		.uleb128 0xc
 3132 01f2 A8000000 		.4byte	.LASF29
 3133 01f6 01       		.byte	0x1
 3134 01f7 4F       		.byte	0x4f
 3135 01f8 2C000000 		.4byte	0x2c
 3136 01fc 00000000 		.4byte	.LFB39
 3137 0200 0A020000 		.4byte	.LFE39-.LFB39
 3138 0204 01       		.uleb128 0x1
 3139 0205 9C       		.byte	0x9c
 3140 0206 9F020000 		.4byte	0x29f
 3141 020a 0B       		.uleb128 0xb
 3142 020b 72020000 		.4byte	.LASF30
 3143 020f 01       		.byte	0x1
 3144 0210 4F       		.byte	0x4f
 3145 0211 DD000000 		.4byte	0xdd
 3146 0215 02       		.uleb128 0x2
 3147 0216 91       		.byte	0x91
 3148 0217 6C       		.sleb128 -20
 3149 0218 0D       		.uleb128 0xd
 3150 0219 62756600 		.ascii	"buf\000"
 3151 021d 01       		.byte	0x1
 3152 021e 4F       		.byte	0x4f
 3153 021f DD000000 		.4byte	0xdd
 3154 0223 02       		.uleb128 0x2
 3155 0224 91       		.byte	0x91
 3156 0225 68       		.sleb128 -24
 3157 0226 0D       		.uleb128 0xd
 3158 0227 6C656E00 		.ascii	"len\000"
 3159 022b 01       		.byte	0x1
 3160 022c 4F       		.byte	0x4f
 3161 022d 2C000000 		.4byte	0x2c
 3162 0231 02       		.uleb128 0x2
 3163 0232 91       		.byte	0x91
 3164 0233 64       		.sleb128 -28
 3165 0234 0B       		.uleb128 0xb
 3166 0235 CD000000 		.4byte	.LASF31
 3167 0239 01       		.byte	0x1
 3168 023a 4F       		.byte	0x4f
 3169 023b B0010000 		.4byte	0x1b0
 3170 023f 02       		.uleb128 0x2
 3171 0240 91       		.byte	0x91
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 71


 3172 0241 63       		.sleb128 -29
 3173 0242 0B       		.uleb128 0xb
 3174 0243 F1020000 		.4byte	.LASF32
 3175 0247 01       		.byte	0x1
 3176 0248 50       		.byte	0x50
 3177 0249 37000000 		.4byte	0x37
 3178 024d 02       		.uleb128 0x2
 3179 024e 91       		.byte	0x91
 3180 024f 00       		.sleb128 0
 3181 0250 0B       		.uleb128 0xb
 3182 0251 18020000 		.4byte	.LASF33
 3183 0255 01       		.byte	0x1
 3184 0256 50       		.byte	0x50
 3185 0257 2C000000 		.4byte	0x2c
 3186 025b 02       		.uleb128 0x2
 3187 025c 91       		.byte	0x91
 3188 025d 04       		.sleb128 4
 3189 025e 0B       		.uleb128 0xb
 3190 025f CC020000 		.4byte	.LASF34
 3191 0263 01       		.byte	0x1
 3192 0264 50       		.byte	0x50
 3193 0265 37000000 		.4byte	0x37
 3194 0269 02       		.uleb128 0x2
 3195 026a 91       		.byte	0x91
 3196 026b 08       		.sleb128 8
 3197 026c 0B       		.uleb128 0xb
 3198 026d 6D000000 		.4byte	.LASF35
 3199 0271 01       		.byte	0x1
 3200 0272 50       		.byte	0x50
 3201 0273 37000000 		.4byte	0x37
 3202 0277 02       		.uleb128 0x2
 3203 0278 91       		.byte	0x91
 3204 0279 0C       		.sleb128 12
 3205 027a 0B       		.uleb128 0xb
 3206 027b E5010000 		.4byte	.LASF36
 3207 027f 01       		.byte	0x1
 3208 0280 51       		.byte	0x51
 3209 0281 37000000 		.4byte	0x37
 3210 0285 02       		.uleb128 0x2
 3211 0286 91       		.byte	0x91
 3212 0287 10       		.sleb128 16
 3213 0288 10       		.uleb128 0x10
 3214 0289 A6010000 		.4byte	.LBB2
 3215 028d 32000000 		.4byte	.LBE2-.LBB2
 3216 0291 0E       		.uleb128 0xe
 3217 0292 6900     		.ascii	"i\000"
 3218 0294 01       		.byte	0x1
 3219 0295 A2       		.byte	0xa2
 3220 0296 2C000000 		.4byte	0x2c
 3221 029a 02       		.uleb128 0x2
 3222 029b 91       		.byte	0x91
 3223 029c 74       		.sleb128 -12
 3224 029d 00       		.byte	0
 3225 029e 00       		.byte	0
 3226 029f 0F       		.uleb128 0xf
 3227 02a0 CE010000 		.4byte	.LASF37
 3228 02a4 01       		.byte	0x1
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 72


 3229 02a5 B4       		.byte	0xb4
 3230 02a6 2C000000 		.4byte	0x2c
 3231 02aa 00000000 		.4byte	.LFB40
 3232 02ae BE000000 		.4byte	.LFE40-.LFB40
 3233 02b2 01       		.uleb128 0x1
 3234 02b3 9C       		.byte	0x9c
 3235 02b4 5F030000 		.4byte	0x35f
 3236 02b8 0B       		.uleb128 0xb
 3237 02b9 72020000 		.4byte	.LASF30
 3238 02bd 01       		.byte	0x1
 3239 02be B4       		.byte	0xb4
 3240 02bf DD000000 		.4byte	0xdd
 3241 02c3 02       		.uleb128 0x2
 3242 02c4 91       		.byte	0x91
 3243 02c5 44       		.sleb128 -60
 3244 02c6 0B       		.uleb128 0xb
 3245 02c7 55000000 		.4byte	.LASF38
 3246 02cb 01       		.byte	0x1
 3247 02cc B4       		.byte	0xb4
 3248 02cd 85000000 		.4byte	0x85
 3249 02d1 02       		.uleb128 0x2
 3250 02d2 91       		.byte	0x91
 3251 02d3 40       		.sleb128 -64
 3252 02d4 0B       		.uleb128 0xb
 3253 02d5 CD000000 		.4byte	.LASF31
 3254 02d9 01       		.byte	0x1
 3255 02da B4       		.byte	0xb4
 3256 02db B0010000 		.4byte	0x1b0
 3257 02df 03       		.uleb128 0x3
 3258 02e0 91       		.byte	0x91
 3259 02e1 BF7F     		.sleb128 -65
 3260 02e3 0B       		.uleb128 0xb
 3261 02e4 F1020000 		.4byte	.LASF32
 3262 02e8 01       		.byte	0x1
 3263 02e9 B5       		.byte	0xb5
 3264 02ea 85000000 		.4byte	0x85
 3265 02ee 03       		.uleb128 0x3
 3266 02ef 91       		.byte	0x91
 3267 02f0 B87F     		.sleb128 -72
 3268 02f2 0B       		.uleb128 0xb
 3269 02f3 18020000 		.4byte	.LASF33
 3270 02f7 01       		.byte	0x1
 3271 02f8 B5       		.byte	0xb5
 3272 02f9 2C000000 		.4byte	0x2c
 3273 02fd 02       		.uleb128 0x2
 3274 02fe 91       		.byte	0x91
 3275 02ff 00       		.sleb128 0
 3276 0300 0B       		.uleb128 0xb
 3277 0301 CC020000 		.4byte	.LASF34
 3278 0305 01       		.byte	0x1
 3279 0306 B5       		.byte	0xb5
 3280 0307 37000000 		.4byte	0x37
 3281 030b 02       		.uleb128 0x2
 3282 030c 91       		.byte	0x91
 3283 030d 04       		.sleb128 4
 3284 030e 0B       		.uleb128 0xb
 3285 030f 6D000000 		.4byte	.LASF35
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 73


 3286 0313 01       		.byte	0x1
 3287 0314 B6       		.byte	0xb6
 3288 0315 37000000 		.4byte	0x37
 3289 0319 02       		.uleb128 0x2
 3290 031a 91       		.byte	0x91
 3291 031b 08       		.sleb128 8
 3292 031c 0B       		.uleb128 0xb
 3293 031d E5010000 		.4byte	.LASF36
 3294 0321 01       		.byte	0x1
 3295 0322 B6       		.byte	0xb6
 3296 0323 37000000 		.4byte	0x37
 3297 0327 02       		.uleb128 0x2
 3298 0328 91       		.byte	0x91
 3299 0329 0C       		.sleb128 12
 3300 032a 0E       		.uleb128 0xe
 3301 032b 62756600 		.ascii	"buf\000"
 3302 032f 01       		.byte	0x1
 3303 0330 B8       		.byte	0xb8
 3304 0331 5F030000 		.4byte	0x35f
 3305 0335 02       		.uleb128 0x2
 3306 0336 91       		.byte	0x91
 3307 0337 48       		.sleb128 -56
 3308 0338 0E       		.uleb128 0xe
 3309 0339 6C656E00 		.ascii	"len\000"
 3310 033d 01       		.byte	0x1
 3311 033e B9       		.byte	0xb9
 3312 033f 2C000000 		.4byte	0x2c
 3313 0343 02       		.uleb128 0x2
 3314 0344 91       		.byte	0x91
 3315 0345 6C       		.sleb128 -20
 3316 0346 10       		.uleb128 0x10
 3317 0347 24000000 		.4byte	.LBB3
 3318 034b 5E000000 		.4byte	.LBE3-.LBB3
 3319 034f 11       		.uleb128 0x11
 3320 0350 EB020000 		.4byte	.LASF39
 3321 0354 01       		.byte	0x1
 3322 0355 C0       		.byte	0xc0
 3323 0356 CD000000 		.4byte	0xcd
 3324 035a 02       		.uleb128 0x2
 3325 035b 91       		.byte	0x91
 3326 035c 6B       		.sleb128 -21
 3327 035d 00       		.byte	0
 3328 035e 00       		.byte	0
 3329 035f 12       		.uleb128 0x12
 3330 0360 CD000000 		.4byte	0xcd
 3331 0364 6F030000 		.4byte	0x36f
 3332 0368 13       		.uleb128 0x13
 3333 0369 D4000000 		.4byte	0xd4
 3334 036d 1F       		.byte	0x1f
 3335 036e 00       		.byte	0
 3336 036f 0F       		.uleb128 0xf
 3337 0370 91020000 		.4byte	.LASF40
 3338 0374 01       		.byte	0x1
 3339 0375 CF       		.byte	0xcf
 3340 0376 2C000000 		.4byte	0x2c
 3341 037a 00000000 		.4byte	.LFB41
 3342 037e D2000000 		.4byte	.LFE41-.LFB41
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 74


 3343 0382 01       		.uleb128 0x1
 3344 0383 9C       		.byte	0x9c
 3345 0384 2E040000 		.4byte	0x42e
 3346 0388 0B       		.uleb128 0xb
 3347 0389 72020000 		.4byte	.LASF30
 3348 038d 01       		.byte	0x1
 3349 038e CF       		.byte	0xcf
 3350 038f DD000000 		.4byte	0xdd
 3351 0393 02       		.uleb128 0x2
 3352 0394 91       		.byte	0x91
 3353 0395 44       		.sleb128 -60
 3354 0396 0B       		.uleb128 0xb
 3355 0397 55000000 		.4byte	.LASF38
 3356 039b 01       		.byte	0x1
 3357 039c CF       		.byte	0xcf
 3358 039d 8C000000 		.4byte	0x8c
 3359 03a1 03       		.uleb128 0x3
 3360 03a2 91       		.byte	0x91
 3361 03a3 B87F     		.sleb128 -72
 3362 03a5 0B       		.uleb128 0xb
 3363 03a6 CD000000 		.4byte	.LASF31
 3364 03aa 01       		.byte	0x1
 3365 03ab D0       		.byte	0xd0
 3366 03ac B0010000 		.4byte	0x1b0
 3367 03b0 02       		.uleb128 0x2
 3368 03b1 91       		.byte	0x91
 3369 03b2 00       		.sleb128 0
 3370 03b3 0B       		.uleb128 0xb
 3371 03b4 F1020000 		.4byte	.LASF32
 3372 03b8 01       		.byte	0x1
 3373 03b9 D0       		.byte	0xd0
 3374 03ba 8C000000 		.4byte	0x8c
 3375 03be 02       		.uleb128 0x2
 3376 03bf 91       		.byte	0x91
 3377 03c0 08       		.sleb128 8
 3378 03c1 0B       		.uleb128 0xb
 3379 03c2 18020000 		.4byte	.LASF33
 3380 03c6 01       		.byte	0x1
 3381 03c7 D0       		.byte	0xd0
 3382 03c8 2C000000 		.4byte	0x2c
 3383 03cc 02       		.uleb128 0x2
 3384 03cd 91       		.byte	0x91
 3385 03ce 10       		.sleb128 16
 3386 03cf 0B       		.uleb128 0xb
 3387 03d0 CC020000 		.4byte	.LASF34
 3388 03d4 01       		.byte	0x1
 3389 03d5 D1       		.byte	0xd1
 3390 03d6 37000000 		.4byte	0x37
 3391 03da 02       		.uleb128 0x2
 3392 03db 91       		.byte	0x91
 3393 03dc 14       		.sleb128 20
 3394 03dd 0B       		.uleb128 0xb
 3395 03de 6D000000 		.4byte	.LASF35
 3396 03e2 01       		.byte	0x1
 3397 03e3 D1       		.byte	0xd1
 3398 03e4 37000000 		.4byte	0x37
 3399 03e8 02       		.uleb128 0x2
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 75


 3400 03e9 91       		.byte	0x91
 3401 03ea 18       		.sleb128 24
 3402 03eb 0B       		.uleb128 0xb
 3403 03ec E5010000 		.4byte	.LASF36
 3404 03f0 01       		.byte	0x1
 3405 03f1 D1       		.byte	0xd1
 3406 03f2 37000000 		.4byte	0x37
 3407 03f6 02       		.uleb128 0x2
 3408 03f7 91       		.byte	0x91
 3409 03f8 1C       		.sleb128 28
 3410 03f9 0E       		.uleb128 0xe
 3411 03fa 62756600 		.ascii	"buf\000"
 3412 03fe 01       		.byte	0x1
 3413 03ff D3       		.byte	0xd3
 3414 0400 5F030000 		.4byte	0x35f
 3415 0404 02       		.uleb128 0x2
 3416 0405 91       		.byte	0x91
 3417 0406 48       		.sleb128 -56
 3418 0407 0E       		.uleb128 0xe
 3419 0408 6C656E00 		.ascii	"len\000"
 3420 040c 01       		.byte	0x1
 3421 040d D4       		.byte	0xd4
 3422 040e 2C000000 		.4byte	0x2c
 3423 0412 02       		.uleb128 0x2
 3424 0413 91       		.byte	0x91
 3425 0414 6C       		.sleb128 -20
 3426 0415 10       		.uleb128 0x10
 3427 0416 22000000 		.4byte	.LBB4
 3428 041a 6E000000 		.4byte	.LBE4-.LBB4
 3429 041e 11       		.uleb128 0x11
 3430 041f EB020000 		.4byte	.LASF39
 3431 0423 01       		.byte	0x1
 3432 0424 DB       		.byte	0xdb
 3433 0425 CD000000 		.4byte	0xcd
 3434 0429 02       		.uleb128 0x2
 3435 042a 91       		.byte	0x91
 3436 042b 6B       		.sleb128 -21
 3437 042c 00       		.byte	0
 3438 042d 00       		.byte	0
 3439 042e 0F       		.uleb128 0xf
 3440 042f B5000000 		.4byte	.LASF41
 3441 0433 01       		.byte	0x1
 3442 0434 EA       		.byte	0xea
 3443 0435 2C000000 		.4byte	0x2c
 3444 0439 00000000 		.4byte	.LFB42
 3445 043d AC030000 		.4byte	.LFE42-.LFB42
 3446 0441 01       		.uleb128 0x1
 3447 0442 9C       		.byte	0x9c
 3448 0443 58050000 		.4byte	0x558
 3449 0447 0B       		.uleb128 0xb
 3450 0448 55000000 		.4byte	.LASF38
 3451 044c 01       		.byte	0x1
 3452 044d EA       		.byte	0xea
 3453 044e C6000000 		.4byte	0xc6
 3454 0452 03       		.uleb128 0x3
 3455 0453 91       		.byte	0x91
 3456 0454 987F     		.sleb128 -104
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 76


 3457 0456 0B       		.uleb128 0xb
 3458 0457 72020000 		.4byte	.LASF30
 3459 045b 01       		.byte	0x1
 3460 045c EA       		.byte	0xea
 3461 045d DD000000 		.4byte	0xdd
 3462 0461 03       		.uleb128 0x3
 3463 0462 91       		.byte	0x91
 3464 0463 947F     		.sleb128 -108
 3465 0465 0B       		.uleb128 0xb
 3466 0466 18020000 		.4byte	.LASF33
 3467 046a 01       		.byte	0x1
 3468 046b EA       		.byte	0xea
 3469 046c 2C000000 		.4byte	0x2c
 3470 0470 03       		.uleb128 0x3
 3471 0471 91       		.byte	0x91
 3472 0472 907F     		.sleb128 -112
 3473 0474 0B       		.uleb128 0xb
 3474 0475 CC020000 		.4byte	.LASF34
 3475 0479 01       		.byte	0x1
 3476 047a EB       		.byte	0xeb
 3477 047b 37000000 		.4byte	0x37
 3478 047f 02       		.uleb128 0x2
 3479 0480 91       		.byte	0x91
 3480 0481 00       		.sleb128 0
 3481 0482 0B       		.uleb128 0xb
 3482 0483 6D000000 		.4byte	.LASF35
 3483 0487 01       		.byte	0x1
 3484 0488 EB       		.byte	0xeb
 3485 0489 37000000 		.4byte	0x37
 3486 048d 02       		.uleb128 0x2
 3487 048e 91       		.byte	0x91
 3488 048f 04       		.sleb128 4
 3489 0490 0B       		.uleb128 0xb
 3490 0491 E5010000 		.4byte	.LASF36
 3491 0495 01       		.byte	0x1
 3492 0496 EB       		.byte	0xeb
 3493 0497 37000000 		.4byte	0x37
 3494 049b 02       		.uleb128 0x2
 3495 049c 91       		.byte	0x91
 3496 049d 08       		.sleb128 8
 3497 049e 0E       		.uleb128 0xe
 3498 049f 62756600 		.ascii	"buf\000"
 3499 04a3 01       		.byte	0x1
 3500 04a4 ED       		.byte	0xed
 3501 04a5 5F030000 		.4byte	0x35f
 3502 04a9 03       		.uleb128 0x3
 3503 04aa 91       		.byte	0x91
 3504 04ab A07F     		.sleb128 -96
 3505 04ad 0E       		.uleb128 0xe
 3506 04ae 6C656E00 		.ascii	"len\000"
 3507 04b2 01       		.byte	0x1
 3508 04b3 EE       		.byte	0xee
 3509 04b4 2C000000 		.4byte	0x2c
 3510 04b8 02       		.uleb128 0x2
 3511 04b9 91       		.byte	0x91
 3512 04ba 6C       		.sleb128 -20
 3513 04bb 11       		.uleb128 0x11
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 77


 3514 04bc 0B000000 		.4byte	.LASF42
 3515 04c0 01       		.byte	0x1
 3516 04c1 EF       		.byte	0xef
 3517 04c2 C6000000 		.4byte	0xc6
 3518 04c6 02       		.uleb128 0x2
 3519 04c7 91       		.byte	0x91
 3520 04c8 50       		.sleb128 -48
 3521 04c9 11       		.uleb128 0x11
 3522 04ca C3000000 		.4byte	.LASF43
 3523 04ce 01       		.byte	0x1
 3524 04cf F2       		.byte	0xf2
 3525 04d0 58050000 		.4byte	0x558
 3526 04d4 02       		.uleb128 0x2
 3527 04d5 91       		.byte	0x91
 3528 04d6 48       		.sleb128 -56
 3529 04d7 11       		.uleb128 0x11
 3530 04d8 F6020000 		.4byte	.LASF44
 3531 04dc 01       		.byte	0x1
 3532 04dd F5       		.byte	0xf5
 3533 04de 6D050000 		.4byte	0x56d
 3534 04e2 05       		.uleb128 0x5
 3535 04e3 03       		.byte	0x3
 3536 04e4 98010000 		.4byte	pow10.7479
 3537 04e8 11       		.uleb128 0x11
 3538 04e9 CD000000 		.4byte	.LASF31
 3539 04ed 01       		.byte	0x1
 3540 04ee FA       		.byte	0xfa
 3541 04ef B0010000 		.4byte	0x1b0
 3542 04f3 02       		.uleb128 0x2
 3543 04f4 91       		.byte	0x91
 3544 04f5 6B       		.sleb128 -21
 3545 04f6 14       		.uleb128 0x14
 3546 04f7 38020000 		.4byte	.LASF45
 3547 04fb 01       		.byte	0x1
 3548 04fc 0C01     		.2byte	0x10c
 3549 04fe 25000000 		.4byte	0x25
 3550 0502 02       		.uleb128 0x2
 3551 0503 91       		.byte	0x91
 3552 0504 64       		.sleb128 -28
 3553 0505 15       		.uleb128 0x15
 3554 0506 746D7000 		.ascii	"tmp\000"
 3555 050a 01       		.byte	0x1
 3556 050b 0D01     		.2byte	0x10d
 3557 050d C6000000 		.4byte	0xc6
 3558 0511 02       		.uleb128 0x2
 3559 0512 91       		.byte	0x91
 3560 0513 40       		.sleb128 -64
 3561 0514 14       		.uleb128 0x14
 3562 0515 50000000 		.4byte	.LASF46
 3563 0519 01       		.byte	0x1
 3564 051a 0E01     		.2byte	0x10e
 3565 051c 85000000 		.4byte	0x85
 3566 0520 02       		.uleb128 0x2
 3567 0521 91       		.byte	0x91
 3568 0522 60       		.sleb128 -32
 3569 0523 16       		.uleb128 0x16
 3570 0524 B2010000 		.4byte	.LBB5
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 78


 3571 0528 76000000 		.4byte	.LBE5-.LBB5
 3572 052c 40050000 		.4byte	0x540
 3573 0530 14       		.uleb128 0x14
 3574 0531 C6020000 		.4byte	.LASF47
 3575 0535 01       		.byte	0x1
 3576 0536 3901     		.2byte	0x139
 3577 0538 37000000 		.4byte	0x37
 3578 053c 02       		.uleb128 0x2
 3579 053d 91       		.byte	0x91
 3580 053e 5C       		.sleb128 -36
 3581 053f 00       		.byte	0
 3582 0540 10       		.uleb128 0x10
 3583 0541 48030000 		.4byte	.LBB6
 3584 0545 32000000 		.4byte	.LBE6-.LBB6
 3585 0549 15       		.uleb128 0x15
 3586 054a 6900     		.ascii	"i\000"
 3587 054c 01       		.byte	0x1
 3588 054d 7C01     		.2byte	0x17c
 3589 054f 2C000000 		.4byte	0x2c
 3590 0553 02       		.uleb128 0x2
 3591 0554 91       		.byte	0x91
 3592 0555 58       		.sleb128 -40
 3593 0556 00       		.byte	0
 3594 0557 00       		.byte	0
 3595 0558 07       		.uleb128 0x7
 3596 0559 C6000000 		.4byte	0xc6
 3597 055d 12       		.uleb128 0x12
 3598 055e 58050000 		.4byte	0x558
 3599 0562 6D050000 		.4byte	0x56d
 3600 0566 13       		.uleb128 0x13
 3601 0567 D4000000 		.4byte	0xd4
 3602 056b 09       		.byte	0x9
 3603 056c 00       		.byte	0
 3604 056d 07       		.uleb128 0x7
 3605 056e 5D050000 		.4byte	0x55d
 3606 0572 17       		.uleb128 0x17
 3607 0573 86020000 		.4byte	.LASF48
 3608 0577 01       		.byte	0x1
 3609 0578 8F01     		.2byte	0x18f
 3610 057a 2C000000 		.4byte	0x2c
 3611 057e 00000000 		.4byte	.LFB43
 3612 0582 5E060000 		.4byte	.LFE43-.LFB43
 3613 0586 01       		.uleb128 0x1
 3614 0587 9C       		.byte	0x9c
 3615 0588 E2060000 		.4byte	0x6e2
 3616 058c 18       		.uleb128 0x18
 3617 058d 72020000 		.4byte	.LASF30
 3618 0591 01       		.byte	0x1
 3619 0592 8F01     		.2byte	0x18f
 3620 0594 DD000000 		.4byte	0xdd
 3621 0598 03       		.uleb128 0x3
 3622 0599 91       		.byte	0x91
 3623 059a AC7F     		.sleb128 -84
 3624 059c 18       		.uleb128 0x18
 3625 059d 00000000 		.4byte	.LASF49
 3626 05a1 01       		.byte	0x1
 3627 05a2 8F01     		.2byte	0x18f
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 79


 3628 05a4 2C000000 		.4byte	0x2c
 3629 05a8 03       		.uleb128 0x3
 3630 05a9 91       		.byte	0x91
 3631 05aa A87F     		.sleb128 -88
 3632 05ac 18       		.uleb128 0x18
 3633 05ad 8E000000 		.4byte	.LASF50
 3634 05b1 01       		.byte	0x1
 3635 05b2 8F01     		.2byte	0x18f
 3636 05b4 E3000000 		.4byte	0xe3
 3637 05b8 03       		.uleb128 0x3
 3638 05b9 91       		.byte	0x91
 3639 05ba A47F     		.sleb128 -92
 3640 05bc 19       		.uleb128 0x19
 3641 05bd 766100   		.ascii	"va\000"
 3642 05c0 01       		.byte	0x1
 3643 05c1 9001     		.2byte	0x190
 3644 05c3 10010000 		.4byte	0x110
 3645 05c7 03       		.uleb128 0x3
 3646 05c8 91       		.byte	0x91
 3647 05c9 A07F     		.sleb128 -96
 3648 05cb 14       		.uleb128 0x14
 3649 05cc E5010000 		.4byte	.LASF36
 3650 05d0 01       		.byte	0x1
 3651 05d1 9201     		.2byte	0x192
 3652 05d3 37000000 		.4byte	0x37
 3653 05d7 02       		.uleb128 0x2
 3654 05d8 91       		.byte	0x91
 3655 05d9 64       		.sleb128 -28
 3656 05da 14       		.uleb128 0x14
 3657 05db 6D000000 		.4byte	.LASF35
 3658 05df 01       		.byte	0x1
 3659 05e0 9201     		.2byte	0x192
 3660 05e2 37000000 		.4byte	0x37
 3661 05e6 02       		.uleb128 0x2
 3662 05e7 91       		.byte	0x91
 3663 05e8 60       		.sleb128 -32
 3664 05e9 14       		.uleb128 0x14
 3665 05ea FC020000 		.4byte	.LASF51
 3666 05ee 01       		.byte	0x1
 3667 05ef 9201     		.2byte	0x192
 3668 05f1 37000000 		.4byte	0x37
 3669 05f5 02       		.uleb128 0x2
 3670 05f6 91       		.byte	0x91
 3671 05f7 5C       		.sleb128 -36
 3672 05f8 15       		.uleb128 0x15
 3673 05f9 6E00     		.ascii	"n\000"
 3674 05fb 01       		.byte	0x1
 3675 05fc 9201     		.2byte	0x192
 3676 05fe 37000000 		.4byte	0x37
 3677 0602 02       		.uleb128 0x2
 3678 0603 91       		.byte	0x91
 3679 0604 58       		.sleb128 -40
 3680 0605 15       		.uleb128 0x15
 3681 0606 69647800 		.ascii	"idx\000"
 3682 060a 01       		.byte	0x1
 3683 060b 9301     		.2byte	0x193
 3684 060d 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 80


 3685 0611 02       		.uleb128 0x2
 3686 0612 91       		.byte	0x91
 3687 0613 54       		.sleb128 -44
 3688 0614 16       		.uleb128 0x16
 3689 0615 00010000 		.4byte	.LBB7
 3690 0619 2A000000 		.4byte	.LBE7-.LBB7
 3691 061d 2F060000 		.4byte	0x62f
 3692 0621 15       		.uleb128 0x15
 3693 0622 7700     		.ascii	"w\000"
 3694 0624 01       		.byte	0x1
 3695 0625 D901     		.2byte	0x1d9
 3696 0627 E2060000 		.4byte	0x6e2
 3697 062b 02       		.uleb128 0x2
 3698 062c 91       		.byte	0x91
 3699 062d 40       		.sleb128 -64
 3700 062e 00       		.byte	0
 3701 062f 16       		.uleb128 0x16
 3702 0630 CE010000 		.4byte	.LBB8
 3703 0634 6C020000 		.4byte	.LBE8-.LBB8
 3704 0638 A2060000 		.4byte	0x6a2
 3705 063c 14       		.uleb128 0x14
 3706 063d F1020000 		.4byte	.LASF32
 3707 0641 01       		.byte	0x1
 3708 0642 0F02     		.2byte	0x20f
 3709 0644 37000000 		.4byte	0x37
 3710 0648 02       		.uleb128 0x2
 3711 0649 91       		.byte	0x91
 3712 064a 50       		.sleb128 -48
 3713 064b 16       		.uleb128 0x16
 3714 064c 56020000 		.4byte	.LBB9
 3715 0650 6E000000 		.4byte	.LBE9-.LBB9
 3716 0654 69060000 		.4byte	0x669
 3717 0658 14       		.uleb128 0x14
 3718 0659 55000000 		.4byte	.LASF38
 3719 065d 01       		.byte	0x1
 3720 065e 3502     		.2byte	0x235
 3721 0660 E7060000 		.4byte	0x6e7
 3722 0664 03       		.uleb128 0x3
 3723 0665 91       		.byte	0x91
 3724 0666 B87F     		.sleb128 -72
 3725 0668 00       		.byte	0
 3726 0669 16       		.uleb128 0x16
 3727 066a CE020000 		.4byte	.LBB10
 3728 066e 48000000 		.4byte	.LBE10-.LBB10
 3729 0672 87060000 		.4byte	0x687
 3730 0676 14       		.uleb128 0x14
 3731 0677 55000000 		.4byte	.LASF38
 3732 067b 01       		.byte	0x1
 3733 067c 4002     		.2byte	0x240
 3734 067e EC060000 		.4byte	0x6ec
 3735 0682 03       		.uleb128 0x3
 3736 0683 91       		.byte	0x91
 3737 0684 B47F     		.sleb128 -76
 3738 0686 00       		.byte	0
 3739 0687 10       		.uleb128 0x10
 3740 0688 18030000 		.4byte	.LBB11
 3741 068c 48000000 		.4byte	.LBE11-.LBB11
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 81


 3742 0690 14       		.uleb128 0x14
 3743 0691 55000000 		.4byte	.LASF38
 3744 0695 01       		.byte	0x1
 3745 0696 4802     		.2byte	0x248
 3746 0698 E2060000 		.4byte	0x6e2
 3747 069c 03       		.uleb128 0x3
 3748 069d 91       		.byte	0x91
 3749 069e B07F     		.sleb128 -80
 3750 06a0 00       		.byte	0
 3751 06a1 00       		.byte	0
 3752 06a2 16       		.uleb128 0x16
 3753 06a3 94040000 		.4byte	.LBB12
 3754 06a7 7A000000 		.4byte	.LBE12-.LBB12
 3755 06ab BD060000 		.4byte	0x6bd
 3756 06af 15       		.uleb128 0x15
 3757 06b0 6C00     		.ascii	"l\000"
 3758 06b2 01       		.byte	0x1
 3759 06b3 7602     		.2byte	0x276
 3760 06b5 2C000000 		.4byte	0x2c
 3761 06b9 02       		.uleb128 0x2
 3762 06ba 91       		.byte	0x91
 3763 06bb 4C       		.sleb128 -52
 3764 06bc 00       		.byte	0
 3765 06bd 10       		.uleb128 0x10
 3766 06be 0E050000 		.4byte	.LBB13
 3767 06c2 C6000000 		.4byte	.LBE13-.LBB13
 3768 06c6 15       		.uleb128 0x15
 3769 06c7 7000     		.ascii	"p\000"
 3770 06c9 01       		.byte	0x1
 3771 06ca 8F02     		.2byte	0x28f
 3772 06cc DD000000 		.4byte	0xdd
 3773 06d0 02       		.uleb128 0x2
 3774 06d1 91       		.byte	0x91
 3775 06d2 48       		.sleb128 -56
 3776 06d3 15       		.uleb128 0x15
 3777 06d4 6C00     		.ascii	"l\000"
 3778 06d6 01       		.byte	0x1
 3779 06d7 9002     		.2byte	0x290
 3780 06d9 2C000000 		.4byte	0x2c
 3781 06dd 02       		.uleb128 0x2
 3782 06de 91       		.byte	0x91
 3783 06df 44       		.sleb128 -60
 3784 06e0 00       		.byte	0
 3785 06e1 00       		.byte	0
 3786 06e2 07       		.uleb128 0x7
 3787 06e3 25000000 		.4byte	0x25
 3788 06e7 07       		.uleb128 0x7
 3789 06e8 3E000000 		.4byte	0x3e
 3790 06ec 07       		.uleb128 0x7
 3791 06ed 7E000000 		.4byte	0x7e
 3792 06f1 1A       		.uleb128 0x1a
 3793 06f2 48020000 		.4byte	.LASF52
 3794 06f6 01       		.byte	0x1
 3795 06f7 D602     		.2byte	0x2d6
 3796 06f9 25000000 		.4byte	0x25
 3797 06fd 00000000 		.4byte	.LFB44
 3798 0701 54000000 		.4byte	.LFE44-.LFB44
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 82


 3799 0705 01       		.uleb128 0x1
 3800 0706 9C       		.byte	0x9c
 3801 0707 49070000 		.4byte	0x749
 3802 070b 18       		.uleb128 0x18
 3803 070c 8E000000 		.4byte	.LASF50
 3804 0710 01       		.byte	0x1
 3805 0711 D602     		.2byte	0x2d6
 3806 0713 E3000000 		.4byte	0xe3
 3807 0717 02       		.uleb128 0x2
 3808 0718 91       		.byte	0x91
 3809 0719 70       		.sleb128 -16
 3810 071a 1B       		.uleb128 0x1b
 3811 071b 15       		.uleb128 0x15
 3812 071c 766100   		.ascii	"va\000"
 3813 071f 01       		.byte	0x1
 3814 0720 D802     		.2byte	0x2d8
 3815 0722 10010000 		.4byte	0x110
 3816 0726 02       		.uleb128 0x2
 3817 0727 91       		.byte	0x91
 3818 0728 60       		.sleb128 -32
 3819 0729 14       		.uleb128 0x14
 3820 072a 72020000 		.4byte	.LASF30
 3821 072e 01       		.byte	0x1
 3822 072f DA02     		.2byte	0x2da
 3823 0731 49070000 		.4byte	0x749
 3824 0735 03       		.uleb128 0x3
 3825 0736 91       		.byte	0x91
 3826 0737 E07E     		.sleb128 -160
 3827 0739 15       		.uleb128 0x15
 3828 073a 72657400 		.ascii	"ret\000"
 3829 073e 01       		.byte	0x1
 3830 073f DB02     		.2byte	0x2db
 3831 0741 2C000000 		.4byte	0x2c
 3832 0745 02       		.uleb128 0x2
 3833 0746 91       		.byte	0x91
 3834 0747 64       		.sleb128 -28
 3835 0748 00       		.byte	0
 3836 0749 12       		.uleb128 0x12
 3837 074a CD000000 		.4byte	0xcd
 3838 074e 59070000 		.4byte	0x759
 3839 0752 13       		.uleb128 0x13
 3840 0753 D4000000 		.4byte	0xd4
 3841 0757 7F       		.byte	0x7f
 3842 0758 00       		.byte	0
 3843 0759 1A       		.uleb128 0x1a
 3844 075a 79020000 		.4byte	.LASF53
 3845 075e 01       		.byte	0x1
 3846 075f E302     		.2byte	0x2e3
 3847 0761 25000000 		.4byte	0x25
 3848 0765 00000000 		.4byte	.LFB45
 3849 0769 34000000 		.4byte	.LFE45-.LFB45
 3850 076d 01       		.uleb128 0x1
 3851 076e 9C       		.byte	0x9c
 3852 076f B0070000 		.4byte	0x7b0
 3853 0773 18       		.uleb128 0x18
 3854 0774 72020000 		.4byte	.LASF30
 3855 0778 01       		.byte	0x1
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 83


 3856 0779 E302     		.2byte	0x2e3
 3857 077b DD000000 		.4byte	0xdd
 3858 077f 02       		.uleb128 0x2
 3859 0780 91       		.byte	0x91
 3860 0781 5C       		.sleb128 -36
 3861 0782 18       		.uleb128 0x18
 3862 0783 8E000000 		.4byte	.LASF50
 3863 0787 01       		.byte	0x1
 3864 0788 E302     		.2byte	0x2e3
 3865 078a E3000000 		.4byte	0xe3
 3866 078e 02       		.uleb128 0x2
 3867 078f 91       		.byte	0x91
 3868 0790 74       		.sleb128 -12
 3869 0791 1B       		.uleb128 0x1b
 3870 0792 15       		.uleb128 0x15
 3871 0793 766100   		.ascii	"va\000"
 3872 0796 01       		.byte	0x1
 3873 0797 E502     		.2byte	0x2e5
 3874 0799 10010000 		.4byte	0x110
 3875 079d 02       		.uleb128 0x2
 3876 079e 91       		.byte	0x91
 3877 079f 60       		.sleb128 -32
 3878 07a0 15       		.uleb128 0x15
 3879 07a1 72657400 		.ascii	"ret\000"
 3880 07a5 01       		.byte	0x1
 3881 07a6 E702     		.2byte	0x2e7
 3882 07a8 2C000000 		.4byte	0x2c
 3883 07ac 02       		.uleb128 0x2
 3884 07ad 91       		.byte	0x91
 3885 07ae 64       		.sleb128 -28
 3886 07af 00       		.byte	0
 3887 07b0 1C       		.uleb128 0x1c
 3888 07b1 80000000 		.4byte	.LASF55
 3889 07b5 01       		.byte	0x1
 3890 07b6 EC02     		.2byte	0x2ec
 3891 07b8 25000000 		.4byte	0x25
 3892 07bc 00000000 		.4byte	.LFB46
 3893 07c0 32000000 		.4byte	.LFE46-.LFB46
 3894 07c4 01       		.uleb128 0x1
 3895 07c5 9C       		.byte	0x9c
 3896 07c6 18       		.uleb128 0x18
 3897 07c7 72020000 		.4byte	.LASF30
 3898 07cb 01       		.byte	0x1
 3899 07cc EC02     		.2byte	0x2ec
 3900 07ce DD000000 		.4byte	0xdd
 3901 07d2 02       		.uleb128 0x2
 3902 07d3 91       		.byte	0x91
 3903 07d4 64       		.sleb128 -28
 3904 07d5 18       		.uleb128 0x18
 3905 07d6 C6020000 		.4byte	.LASF47
 3906 07da 01       		.byte	0x1
 3907 07db EC02     		.2byte	0x2ec
 3908 07dd 2C000000 		.4byte	0x2c
 3909 07e1 02       		.uleb128 0x2
 3910 07e2 91       		.byte	0x91
 3911 07e3 60       		.sleb128 -32
 3912 07e4 18       		.uleb128 0x18
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 84


 3913 07e5 8E000000 		.4byte	.LASF50
 3914 07e9 01       		.byte	0x1
 3915 07ea EC02     		.2byte	0x2ec
 3916 07ec E3000000 		.4byte	0xe3
 3917 07f0 02       		.uleb128 0x2
 3918 07f1 91       		.byte	0x91
 3919 07f2 78       		.sleb128 -8
 3920 07f3 1B       		.uleb128 0x1b
 3921 07f4 15       		.uleb128 0x15
 3922 07f5 766100   		.ascii	"va\000"
 3923 07f8 01       		.byte	0x1
 3924 07f9 EE02     		.2byte	0x2ee
 3925 07fb 10010000 		.4byte	0x110
 3926 07ff 02       		.uleb128 0x2
 3927 0800 91       		.byte	0x91
 3928 0801 68       		.sleb128 -24
 3929 0802 15       		.uleb128 0x15
 3930 0803 72657400 		.ascii	"ret\000"
 3931 0807 01       		.byte	0x1
 3932 0808 F002     		.2byte	0x2f0
 3933 080a 2C000000 		.4byte	0x2c
 3934 080e 02       		.uleb128 0x2
 3935 080f 91       		.byte	0x91
 3936 0810 6C       		.sleb128 -20
 3937 0811 00       		.byte	0
 3938 0812 00       		.byte	0
 3939              		.section	.debug_abbrev,"",%progbits
 3940              	.Ldebug_abbrev0:
 3941 0000 01       		.uleb128 0x1
 3942 0001 11       		.uleb128 0x11
 3943 0002 01       		.byte	0x1
 3944 0003 25       		.uleb128 0x25
 3945 0004 0E       		.uleb128 0xe
 3946 0005 13       		.uleb128 0x13
 3947 0006 0B       		.uleb128 0xb
 3948 0007 03       		.uleb128 0x3
 3949 0008 0E       		.uleb128 0xe
 3950 0009 1B       		.uleb128 0x1b
 3951 000a 0E       		.uleb128 0xe
 3952 000b 55       		.uleb128 0x55
 3953 000c 17       		.uleb128 0x17
 3954 000d 11       		.uleb128 0x11
 3955 000e 01       		.uleb128 0x1
 3956 000f 10       		.uleb128 0x10
 3957 0010 17       		.uleb128 0x17
 3958 0011 00       		.byte	0
 3959 0012 00       		.byte	0
 3960 0013 02       		.uleb128 0x2
 3961 0014 24       		.uleb128 0x24
 3962 0015 00       		.byte	0
 3963 0016 0B       		.uleb128 0xb
 3964 0017 0B       		.uleb128 0xb
 3965 0018 3E       		.uleb128 0x3e
 3966 0019 0B       		.uleb128 0xb
 3967 001a 03       		.uleb128 0x3
 3968 001b 08       		.uleb128 0x8
 3969 001c 00       		.byte	0
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 85


 3970 001d 00       		.byte	0
 3971 001e 03       		.uleb128 0x3
 3972 001f 16       		.uleb128 0x16
 3973 0020 00       		.byte	0
 3974 0021 03       		.uleb128 0x3
 3975 0022 0E       		.uleb128 0xe
 3976 0023 3A       		.uleb128 0x3a
 3977 0024 0B       		.uleb128 0xb
 3978 0025 3B       		.uleb128 0x3b
 3979 0026 0B       		.uleb128 0xb
 3980 0027 49       		.uleb128 0x49
 3981 0028 13       		.uleb128 0x13
 3982 0029 00       		.byte	0
 3983 002a 00       		.byte	0
 3984 002b 04       		.uleb128 0x4
 3985 002c 24       		.uleb128 0x24
 3986 002d 00       		.byte	0
 3987 002e 0B       		.uleb128 0xb
 3988 002f 0B       		.uleb128 0xb
 3989 0030 3E       		.uleb128 0x3e
 3990 0031 0B       		.uleb128 0xb
 3991 0032 03       		.uleb128 0x3
 3992 0033 0E       		.uleb128 0xe
 3993 0034 00       		.byte	0
 3994 0035 00       		.byte	0
 3995 0036 05       		.uleb128 0x5
 3996 0037 0F       		.uleb128 0xf
 3997 0038 00       		.byte	0
 3998 0039 0B       		.uleb128 0xb
 3999 003a 0B       		.uleb128 0xb
 4000 003b 00       		.byte	0
 4001 003c 00       		.byte	0
 4002 003d 06       		.uleb128 0x6
 4003 003e 0F       		.uleb128 0xf
 4004 003f 00       		.byte	0
 4005 0040 0B       		.uleb128 0xb
 4006 0041 0B       		.uleb128 0xb
 4007 0042 49       		.uleb128 0x49
 4008 0043 13       		.uleb128 0x13
 4009 0044 00       		.byte	0
 4010 0045 00       		.byte	0
 4011 0046 07       		.uleb128 0x7
 4012 0047 26       		.uleb128 0x26
 4013 0048 00       		.byte	0
 4014 0049 49       		.uleb128 0x49
 4015 004a 13       		.uleb128 0x13
 4016 004b 00       		.byte	0
 4017 004c 00       		.byte	0
 4018 004d 08       		.uleb128 0x8
 4019 004e 13       		.uleb128 0x13
 4020 004f 01       		.byte	0x1
 4021 0050 03       		.uleb128 0x3
 4022 0051 0E       		.uleb128 0xe
 4023 0052 0B       		.uleb128 0xb
 4024 0053 0B       		.uleb128 0xb
 4025 0054 3A       		.uleb128 0x3a
 4026 0055 0B       		.uleb128 0xb
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 86


 4027 0056 3B       		.uleb128 0x3b
 4028 0057 0B       		.uleb128 0xb
 4029 0058 01       		.uleb128 0x1
 4030 0059 13       		.uleb128 0x13
 4031 005a 00       		.byte	0
 4032 005b 00       		.byte	0
 4033 005c 09       		.uleb128 0x9
 4034 005d 0D       		.uleb128 0xd
 4035 005e 00       		.byte	0
 4036 005f 03       		.uleb128 0x3
 4037 0060 0E       		.uleb128 0xe
 4038 0061 49       		.uleb128 0x49
 4039 0062 13       		.uleb128 0x13
 4040 0063 38       		.uleb128 0x38
 4041 0064 0B       		.uleb128 0xb
 4042 0065 34       		.uleb128 0x34
 4043 0066 19       		.uleb128 0x19
 4044 0067 00       		.byte	0
 4045 0068 00       		.byte	0
 4046 0069 0A       		.uleb128 0xa
 4047 006a 2E       		.uleb128 0x2e
 4048 006b 01       		.byte	0x1
 4049 006c 3F       		.uleb128 0x3f
 4050 006d 19       		.uleb128 0x19
 4051 006e 03       		.uleb128 0x3
 4052 006f 0E       		.uleb128 0xe
 4053 0070 3A       		.uleb128 0x3a
 4054 0071 0B       		.uleb128 0xb
 4055 0072 3B       		.uleb128 0x3b
 4056 0073 0B       		.uleb128 0xb
 4057 0074 27       		.uleb128 0x27
 4058 0075 19       		.uleb128 0x19
 4059 0076 11       		.uleb128 0x11
 4060 0077 01       		.uleb128 0x1
 4061 0078 12       		.uleb128 0x12
 4062 0079 06       		.uleb128 0x6
 4063 007a 40       		.uleb128 0x40
 4064 007b 18       		.uleb128 0x18
 4065 007c 9642     		.uleb128 0x2116
 4066 007e 19       		.uleb128 0x19
 4067 007f 01       		.uleb128 0x1
 4068 0080 13       		.uleb128 0x13
 4069 0081 00       		.byte	0
 4070 0082 00       		.byte	0
 4071 0083 0B       		.uleb128 0xb
 4072 0084 05       		.uleb128 0x5
 4073 0085 00       		.byte	0
 4074 0086 03       		.uleb128 0x3
 4075 0087 0E       		.uleb128 0xe
 4076 0088 3A       		.uleb128 0x3a
 4077 0089 0B       		.uleb128 0xb
 4078 008a 3B       		.uleb128 0x3b
 4079 008b 0B       		.uleb128 0xb
 4080 008c 49       		.uleb128 0x49
 4081 008d 13       		.uleb128 0x13
 4082 008e 02       		.uleb128 0x2
 4083 008f 18       		.uleb128 0x18
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 87


 4084 0090 00       		.byte	0
 4085 0091 00       		.byte	0
 4086 0092 0C       		.uleb128 0xc
 4087 0093 2E       		.uleb128 0x2e
 4088 0094 01       		.byte	0x1
 4089 0095 03       		.uleb128 0x3
 4090 0096 0E       		.uleb128 0xe
 4091 0097 3A       		.uleb128 0x3a
 4092 0098 0B       		.uleb128 0xb
 4093 0099 3B       		.uleb128 0x3b
 4094 009a 0B       		.uleb128 0xb
 4095 009b 27       		.uleb128 0x27
 4096 009c 19       		.uleb128 0x19
 4097 009d 49       		.uleb128 0x49
 4098 009e 13       		.uleb128 0x13
 4099 009f 11       		.uleb128 0x11
 4100 00a0 01       		.uleb128 0x1
 4101 00a1 12       		.uleb128 0x12
 4102 00a2 06       		.uleb128 0x6
 4103 00a3 40       		.uleb128 0x40
 4104 00a4 18       		.uleb128 0x18
 4105 00a5 9742     		.uleb128 0x2117
 4106 00a7 19       		.uleb128 0x19
 4107 00a8 01       		.uleb128 0x1
 4108 00a9 13       		.uleb128 0x13
 4109 00aa 00       		.byte	0
 4110 00ab 00       		.byte	0
 4111 00ac 0D       		.uleb128 0xd
 4112 00ad 05       		.uleb128 0x5
 4113 00ae 00       		.byte	0
 4114 00af 03       		.uleb128 0x3
 4115 00b0 08       		.uleb128 0x8
 4116 00b1 3A       		.uleb128 0x3a
 4117 00b2 0B       		.uleb128 0xb
 4118 00b3 3B       		.uleb128 0x3b
 4119 00b4 0B       		.uleb128 0xb
 4120 00b5 49       		.uleb128 0x49
 4121 00b6 13       		.uleb128 0x13
 4122 00b7 02       		.uleb128 0x2
 4123 00b8 18       		.uleb128 0x18
 4124 00b9 00       		.byte	0
 4125 00ba 00       		.byte	0
 4126 00bb 0E       		.uleb128 0xe
 4127 00bc 34       		.uleb128 0x34
 4128 00bd 00       		.byte	0
 4129 00be 03       		.uleb128 0x3
 4130 00bf 08       		.uleb128 0x8
 4131 00c0 3A       		.uleb128 0x3a
 4132 00c1 0B       		.uleb128 0xb
 4133 00c2 3B       		.uleb128 0x3b
 4134 00c3 0B       		.uleb128 0xb
 4135 00c4 49       		.uleb128 0x49
 4136 00c5 13       		.uleb128 0x13
 4137 00c6 02       		.uleb128 0x2
 4138 00c7 18       		.uleb128 0x18
 4139 00c8 00       		.byte	0
 4140 00c9 00       		.byte	0
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 88


 4141 00ca 0F       		.uleb128 0xf
 4142 00cb 2E       		.uleb128 0x2e
 4143 00cc 01       		.byte	0x1
 4144 00cd 03       		.uleb128 0x3
 4145 00ce 0E       		.uleb128 0xe
 4146 00cf 3A       		.uleb128 0x3a
 4147 00d0 0B       		.uleb128 0xb
 4148 00d1 3B       		.uleb128 0x3b
 4149 00d2 0B       		.uleb128 0xb
 4150 00d3 27       		.uleb128 0x27
 4151 00d4 19       		.uleb128 0x19
 4152 00d5 49       		.uleb128 0x49
 4153 00d6 13       		.uleb128 0x13
 4154 00d7 11       		.uleb128 0x11
 4155 00d8 01       		.uleb128 0x1
 4156 00d9 12       		.uleb128 0x12
 4157 00da 06       		.uleb128 0x6
 4158 00db 40       		.uleb128 0x40
 4159 00dc 18       		.uleb128 0x18
 4160 00dd 9642     		.uleb128 0x2116
 4161 00df 19       		.uleb128 0x19
 4162 00e0 01       		.uleb128 0x1
 4163 00e1 13       		.uleb128 0x13
 4164 00e2 00       		.byte	0
 4165 00e3 00       		.byte	0
 4166 00e4 10       		.uleb128 0x10
 4167 00e5 0B       		.uleb128 0xb
 4168 00e6 01       		.byte	0x1
 4169 00e7 11       		.uleb128 0x11
 4170 00e8 01       		.uleb128 0x1
 4171 00e9 12       		.uleb128 0x12
 4172 00ea 06       		.uleb128 0x6
 4173 00eb 00       		.byte	0
 4174 00ec 00       		.byte	0
 4175 00ed 11       		.uleb128 0x11
 4176 00ee 34       		.uleb128 0x34
 4177 00ef 00       		.byte	0
 4178 00f0 03       		.uleb128 0x3
 4179 00f1 0E       		.uleb128 0xe
 4180 00f2 3A       		.uleb128 0x3a
 4181 00f3 0B       		.uleb128 0xb
 4182 00f4 3B       		.uleb128 0x3b
 4183 00f5 0B       		.uleb128 0xb
 4184 00f6 49       		.uleb128 0x49
 4185 00f7 13       		.uleb128 0x13
 4186 00f8 02       		.uleb128 0x2
 4187 00f9 18       		.uleb128 0x18
 4188 00fa 00       		.byte	0
 4189 00fb 00       		.byte	0
 4190 00fc 12       		.uleb128 0x12
 4191 00fd 01       		.uleb128 0x1
 4192 00fe 01       		.byte	0x1
 4193 00ff 49       		.uleb128 0x49
 4194 0100 13       		.uleb128 0x13
 4195 0101 01       		.uleb128 0x1
 4196 0102 13       		.uleb128 0x13
 4197 0103 00       		.byte	0
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 89


 4198 0104 00       		.byte	0
 4199 0105 13       		.uleb128 0x13
 4200 0106 21       		.uleb128 0x21
 4201 0107 00       		.byte	0
 4202 0108 49       		.uleb128 0x49
 4203 0109 13       		.uleb128 0x13
 4204 010a 2F       		.uleb128 0x2f
 4205 010b 0B       		.uleb128 0xb
 4206 010c 00       		.byte	0
 4207 010d 00       		.byte	0
 4208 010e 14       		.uleb128 0x14
 4209 010f 34       		.uleb128 0x34
 4210 0110 00       		.byte	0
 4211 0111 03       		.uleb128 0x3
 4212 0112 0E       		.uleb128 0xe
 4213 0113 3A       		.uleb128 0x3a
 4214 0114 0B       		.uleb128 0xb
 4215 0115 3B       		.uleb128 0x3b
 4216 0116 05       		.uleb128 0x5
 4217 0117 49       		.uleb128 0x49
 4218 0118 13       		.uleb128 0x13
 4219 0119 02       		.uleb128 0x2
 4220 011a 18       		.uleb128 0x18
 4221 011b 00       		.byte	0
 4222 011c 00       		.byte	0
 4223 011d 15       		.uleb128 0x15
 4224 011e 34       		.uleb128 0x34
 4225 011f 00       		.byte	0
 4226 0120 03       		.uleb128 0x3
 4227 0121 08       		.uleb128 0x8
 4228 0122 3A       		.uleb128 0x3a
 4229 0123 0B       		.uleb128 0xb
 4230 0124 3B       		.uleb128 0x3b
 4231 0125 05       		.uleb128 0x5
 4232 0126 49       		.uleb128 0x49
 4233 0127 13       		.uleb128 0x13
 4234 0128 02       		.uleb128 0x2
 4235 0129 18       		.uleb128 0x18
 4236 012a 00       		.byte	0
 4237 012b 00       		.byte	0
 4238 012c 16       		.uleb128 0x16
 4239 012d 0B       		.uleb128 0xb
 4240 012e 01       		.byte	0x1
 4241 012f 11       		.uleb128 0x11
 4242 0130 01       		.uleb128 0x1
 4243 0131 12       		.uleb128 0x12
 4244 0132 06       		.uleb128 0x6
 4245 0133 01       		.uleb128 0x1
 4246 0134 13       		.uleb128 0x13
 4247 0135 00       		.byte	0
 4248 0136 00       		.byte	0
 4249 0137 17       		.uleb128 0x17
 4250 0138 2E       		.uleb128 0x2e
 4251 0139 01       		.byte	0x1
 4252 013a 03       		.uleb128 0x3
 4253 013b 0E       		.uleb128 0xe
 4254 013c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 90


 4255 013d 0B       		.uleb128 0xb
 4256 013e 3B       		.uleb128 0x3b
 4257 013f 05       		.uleb128 0x5
 4258 0140 27       		.uleb128 0x27
 4259 0141 19       		.uleb128 0x19
 4260 0142 49       		.uleb128 0x49
 4261 0143 13       		.uleb128 0x13
 4262 0144 11       		.uleb128 0x11
 4263 0145 01       		.uleb128 0x1
 4264 0146 12       		.uleb128 0x12
 4265 0147 06       		.uleb128 0x6
 4266 0148 40       		.uleb128 0x40
 4267 0149 18       		.uleb128 0x18
 4268 014a 9642     		.uleb128 0x2116
 4269 014c 19       		.uleb128 0x19
 4270 014d 01       		.uleb128 0x1
 4271 014e 13       		.uleb128 0x13
 4272 014f 00       		.byte	0
 4273 0150 00       		.byte	0
 4274 0151 18       		.uleb128 0x18
 4275 0152 05       		.uleb128 0x5
 4276 0153 00       		.byte	0
 4277 0154 03       		.uleb128 0x3
 4278 0155 0E       		.uleb128 0xe
 4279 0156 3A       		.uleb128 0x3a
 4280 0157 0B       		.uleb128 0xb
 4281 0158 3B       		.uleb128 0x3b
 4282 0159 05       		.uleb128 0x5
 4283 015a 49       		.uleb128 0x49
 4284 015b 13       		.uleb128 0x13
 4285 015c 02       		.uleb128 0x2
 4286 015d 18       		.uleb128 0x18
 4287 015e 00       		.byte	0
 4288 015f 00       		.byte	0
 4289 0160 19       		.uleb128 0x19
 4290 0161 05       		.uleb128 0x5
 4291 0162 00       		.byte	0
 4292 0163 03       		.uleb128 0x3
 4293 0164 08       		.uleb128 0x8
 4294 0165 3A       		.uleb128 0x3a
 4295 0166 0B       		.uleb128 0xb
 4296 0167 3B       		.uleb128 0x3b
 4297 0168 05       		.uleb128 0x5
 4298 0169 49       		.uleb128 0x49
 4299 016a 13       		.uleb128 0x13
 4300 016b 02       		.uleb128 0x2
 4301 016c 18       		.uleb128 0x18
 4302 016d 00       		.byte	0
 4303 016e 00       		.byte	0
 4304 016f 1A       		.uleb128 0x1a
 4305 0170 2E       		.uleb128 0x2e
 4306 0171 01       		.byte	0x1
 4307 0172 3F       		.uleb128 0x3f
 4308 0173 19       		.uleb128 0x19
 4309 0174 03       		.uleb128 0x3
 4310 0175 0E       		.uleb128 0xe
 4311 0176 3A       		.uleb128 0x3a
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 91


 4312 0177 0B       		.uleb128 0xb
 4313 0178 3B       		.uleb128 0x3b
 4314 0179 05       		.uleb128 0x5
 4315 017a 27       		.uleb128 0x27
 4316 017b 19       		.uleb128 0x19
 4317 017c 49       		.uleb128 0x49
 4318 017d 13       		.uleb128 0x13
 4319 017e 11       		.uleb128 0x11
 4320 017f 01       		.uleb128 0x1
 4321 0180 12       		.uleb128 0x12
 4322 0181 06       		.uleb128 0x6
 4323 0182 40       		.uleb128 0x40
 4324 0183 18       		.uleb128 0x18
 4325 0184 9642     		.uleb128 0x2116
 4326 0186 19       		.uleb128 0x19
 4327 0187 01       		.uleb128 0x1
 4328 0188 13       		.uleb128 0x13
 4329 0189 00       		.byte	0
 4330 018a 00       		.byte	0
 4331 018b 1B       		.uleb128 0x1b
 4332 018c 18       		.uleb128 0x18
 4333 018d 00       		.byte	0
 4334 018e 00       		.byte	0
 4335 018f 00       		.byte	0
 4336 0190 1C       		.uleb128 0x1c
 4337 0191 2E       		.uleb128 0x2e
 4338 0192 01       		.byte	0x1
 4339 0193 3F       		.uleb128 0x3f
 4340 0194 19       		.uleb128 0x19
 4341 0195 03       		.uleb128 0x3
 4342 0196 0E       		.uleb128 0xe
 4343 0197 3A       		.uleb128 0x3a
 4344 0198 0B       		.uleb128 0xb
 4345 0199 3B       		.uleb128 0x3b
 4346 019a 05       		.uleb128 0x5
 4347 019b 27       		.uleb128 0x27
 4348 019c 19       		.uleb128 0x19
 4349 019d 49       		.uleb128 0x49
 4350 019e 13       		.uleb128 0x13
 4351 019f 11       		.uleb128 0x11
 4352 01a0 01       		.uleb128 0x1
 4353 01a1 12       		.uleb128 0x12
 4354 01a2 06       		.uleb128 0x6
 4355 01a3 40       		.uleb128 0x40
 4356 01a4 18       		.uleb128 0x18
 4357 01a5 9642     		.uleb128 0x2116
 4358 01a7 19       		.uleb128 0x19
 4359 01a8 00       		.byte	0
 4360 01a9 00       		.byte	0
 4361 01aa 00       		.byte	0
 4362              		.section	.debug_aranges,"",%progbits
 4363 0000 74000000 		.4byte	0x74
 4364 0004 0200     		.2byte	0x2
 4365 0006 00000000 		.4byte	.Ldebug_info0
 4366 000a 04       		.byte	0x4
 4367 000b 00       		.byte	0
 4368 000c 0000     		.2byte	0
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 92


 4369 000e 0000     		.2byte	0
 4370 0010 00000000 		.4byte	.LFB35
 4371 0014 48000000 		.4byte	.LFE35-.LFB35
 4372 0018 00000000 		.4byte	.LFB36
 4373 001c 2A000000 		.4byte	.LFE36-.LFB36
 4374 0020 00000000 		.4byte	.LFB37
 4375 0024 32000000 		.4byte	.LFE37-.LFB37
 4376 0028 00000000 		.4byte	.LFB38
 4377 002c 46000000 		.4byte	.LFE38-.LFB38
 4378 0030 00000000 		.4byte	.LFB39
 4379 0034 0A020000 		.4byte	.LFE39-.LFB39
 4380 0038 00000000 		.4byte	.LFB40
 4381 003c BE000000 		.4byte	.LFE40-.LFB40
 4382 0040 00000000 		.4byte	.LFB41
 4383 0044 D2000000 		.4byte	.LFE41-.LFB41
 4384 0048 00000000 		.4byte	.LFB42
 4385 004c AC030000 		.4byte	.LFE42-.LFB42
 4386 0050 00000000 		.4byte	.LFB43
 4387 0054 5E060000 		.4byte	.LFE43-.LFB43
 4388 0058 00000000 		.4byte	.LFB44
 4389 005c 54000000 		.4byte	.LFE44-.LFB44
 4390 0060 00000000 		.4byte	.LFB45
 4391 0064 34000000 		.4byte	.LFE45-.LFB45
 4392 0068 00000000 		.4byte	.LFB46
 4393 006c 32000000 		.4byte	.LFE46-.LFB46
 4394 0070 00000000 		.4byte	0
 4395 0074 00000000 		.4byte	0
 4396              		.section	.debug_ranges,"",%progbits
 4397              	.Ldebug_ranges0:
 4398 0000 00000000 		.4byte	.LFB35
 4399 0004 48000000 		.4byte	.LFE35
 4400 0008 00000000 		.4byte	.LFB36
 4401 000c 2A000000 		.4byte	.LFE36
 4402 0010 00000000 		.4byte	.LFB37
 4403 0014 32000000 		.4byte	.LFE37
 4404 0018 00000000 		.4byte	.LFB38
 4405 001c 46000000 		.4byte	.LFE38
 4406 0020 00000000 		.4byte	.LFB39
 4407 0024 0A020000 		.4byte	.LFE39
 4408 0028 00000000 		.4byte	.LFB40
 4409 002c BE000000 		.4byte	.LFE40
 4410 0030 00000000 		.4byte	.LFB41
 4411 0034 D2000000 		.4byte	.LFE41
 4412 0038 00000000 		.4byte	.LFB42
 4413 003c AC030000 		.4byte	.LFE42
 4414 0040 00000000 		.4byte	.LFB43
 4415 0044 5E060000 		.4byte	.LFE43
 4416 0048 00000000 		.4byte	.LFB44
 4417 004c 54000000 		.4byte	.LFE44
 4418 0050 00000000 		.4byte	.LFB45
 4419 0054 34000000 		.4byte	.LFE45
 4420 0058 00000000 		.4byte	.LFB46
 4421 005c 32000000 		.4byte	.LFE46
 4422 0060 00000000 		.4byte	0
 4423 0064 00000000 		.4byte	0
 4424              		.section	.debug_line,"",%progbits
 4425              	.Ldebug_line0:
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 93


 4426 0000 9D050000 		.section	.debug_str,"MS",%progbits,1
 4426      0200BD01 
 4426      00000201 
 4426      FB0E0D00 
 4426      01010101 
 4427              	.LASF49:
 4428 0000 62756666 		.ascii	"buffer_len\000"
 4428      65725F6C 
 4428      656E00
 4429              	.LASF42:
 4430 000b 64696666 		.ascii	"diff\000"
 4430      00
 4431              	.LASF7:
 4432 0010 73686F72 		.ascii	"short int\000"
 4432      7420696E 
 4432      7400
 4433              	.LASF4:
 4434 001a 73697A65 		.ascii	"size_t\000"
 4434      5F7400
 4435              	.LASF20:
 4436 0021 73697A65 		.ascii	"sizetype\000"
 4436      74797065 
 4436      00
 4437              	.LASF1:
 4438 002a 6C6F6E67 		.ascii	"long long int\000"
 4438      206C6F6E 
 4438      6720696E 
 4438      7400
 4439              	.LASF23:
 4440 0038 64617461 		.ascii	"data\000"
 4440      00
 4441              	.LASF8:
 4442 003d 5F5F7569 		.ascii	"__uint16_t\000"
 4442      6E743136 
 4442      5F7400
 4443              	.LASF22:
 4444 0048 76615F6C 		.ascii	"va_list\000"
 4444      69737400 
 4445              	.LASF46:
 4446 0050 66726163 		.ascii	"frac\000"
 4446      00
 4447              	.LASF38:
 4448 0055 76616C75 		.ascii	"value\000"
 4448      6500
 4449              	.LASF14:
 4450 005b 75696E74 		.ascii	"uint8_t\000"
 4450      385F7400 
 4451              	.LASF16:
 4452 0063 75696E74 		.ascii	"uintptr_t\000"
 4452      7074725F 
 4452      7400
 4453              	.LASF35:
 4454 006d 77696474 		.ascii	"width\000"
 4454      6800
 4455              	.LASF24:
 4456 0073 6C656E67 		.ascii	"length\000"
 4456      746800
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 94


 4457              	.LASF17:
 4458 007a 666C6F61 		.ascii	"float\000"
 4458      7400
 4459              	.LASF55:
 4460 0080 74696E79 		.ascii	"tiny_snprintf\000"
 4460      5F736E70 
 4460      72696E74 
 4460      6600
 4461              	.LASF50:
 4462 008e 666F726D 		.ascii	"format\000"
 4462      617400
 4463              	.LASF59:
 4464 0095 5F5F7661 		.ascii	"__va_list\000"
 4464      5F6C6973 
 4464      7400
 4465              	.LASF10:
 4466 009f 6C6F6E67 		.ascii	"long int\000"
 4466      20696E74 
 4466      00
 4467              	.LASF29:
 4468 00a8 5F6E746F 		.ascii	"_ntoa_format\000"
 4468      615F666F 
 4468      726D6174 
 4468      00
 4469              	.LASF41:
 4470 00b5 5F66746F 		.ascii	"_ftoa\000"
 4470      6100
 4471              	.LASF25:
 4472 00bb 5F737472 		.ascii	"_strlen\000"
 4472      6C656E00 
 4473              	.LASF43:
 4474 00c3 74687265 		.ascii	"thres_max\000"
 4474      735F6D61 
 4474      7800
 4475              	.LASF31:
 4476 00cd 6E656761 		.ascii	"negative\000"
 4476      74697665 
 4476      00
 4477              	.LASF5:
 4478 00d6 5F5F7569 		.ascii	"__uint8_t\000"
 4478      6E74385F 
 4478      7400
 4479              	.LASF58:
 4480 00e0 433A5C55 		.ascii	"C:\\Users\\munee\\OneDrive\\Documents\\cypress\\CY8"
 4480      73657273 
 4480      5C6D756E 
 4480      65655C4F 
 4480      6E654472 
 4481 010d 435F3134 		.ascii	"C_149KIT\\BLEModule.cydsn\000"
 4481      394B4954 
 4481      5C424C45 
 4481      4D6F6475 
 4481      6C652E63 
 4482              	.LASF56:
 4483 0126 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4483      43313120 
 4483      352E342E 
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 95


 4483      31203230 
 4483      31363036 
 4484 0159 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4484      20726576 
 4484      6973696F 
 4484      6E203233 
 4484      37373135 
 4485 018c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4485      66756E63 
 4485      74696F6E 
 4485      2D736563 
 4485      74696F6E 
 4486              	.LASF2:
 4487 01b4 6C6F6E67 		.ascii	"long double\000"
 4487      20646F75 
 4487      626C6500 
 4488              	.LASF6:
 4489 01c0 756E7369 		.ascii	"unsigned char\000"
 4489      676E6564 
 4489      20636861 
 4489      7200
 4490              	.LASF37:
 4491 01ce 5F6E746F 		.ascii	"_ntoa_long\000"
 4491      615F6C6F 
 4491      6E6700
 4492              	.LASF3:
 4493 01d9 7369676E 		.ascii	"signed char\000"
 4493      65642063 
 4493      68617200 
 4494              	.LASF36:
 4495 01e5 666C6167 		.ascii	"flags\000"
 4495      7300
 4496              	.LASF12:
 4497 01eb 6C6F6E67 		.ascii	"long long unsigned int\000"
 4497      206C6F6E 
 4497      6720756E 
 4497      7369676E 
 4497      65642069 
 4498              	.LASF0:
 4499 0202 756E7369 		.ascii	"unsigned int\000"
 4499      676E6564 
 4499      20696E74 
 4499      00
 4500              	.LASF15:
 4501 020f 75696E74 		.ascii	"uint16_t\000"
 4501      31365F74 
 4501      00
 4502              	.LASF33:
 4503 0218 6D61786C 		.ascii	"maxlen\000"
 4503      656E00
 4504              	.LASF28:
 4505 021f 5F61746F 		.ascii	"_atoi\000"
 4505      6900
 4506              	.LASF9:
 4507 0225 73686F72 		.ascii	"short unsigned int\000"
 4507      7420756E 
 4507      7369676E 
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 96


 4507      65642069 
 4507      6E7400
 4508              	.LASF45:
 4509 0238 77686F6C 		.ascii	"whole\000"
 4509      6500
 4510              	.LASF60:
 4511 023e 5F5F6170 		.ascii	"__ap\000"
 4511      00
 4512              	.LASF19:
 4513 0243 63686172 		.ascii	"char\000"
 4513      00
 4514              	.LASF52:
 4515 0248 74696E79 		.ascii	"tiny_printf\000"
 4515      5F707269 
 4515      6E746600 
 4516              	.LASF27:
 4517 0254 5F426F6F 		.ascii	"_Bool\000"
 4517      6C00
 4518              	.LASF57:
 4519 025a 74696E79 		.ascii	"tiny_printf.c\000"
 4519      5F707269 
 4519      6E74662E 
 4519      6300
 4520              	.LASF26:
 4521 0268 5F69735F 		.ascii	"_is_digit\000"
 4521      64696769 
 4521      7400
 4522              	.LASF30:
 4523 0272 62756666 		.ascii	"buffer\000"
 4523      657200
 4524              	.LASF53:
 4525 0279 74696E79 		.ascii	"tiny_sprintf\000"
 4525      5F737072 
 4525      696E7466 
 4525      00
 4526              	.LASF48:
 4527 0286 5F76736E 		.ascii	"_vsnprintf\000"
 4527      7072696E 
 4527      746600
 4528              	.LASF40:
 4529 0291 5F6E746F 		.ascii	"_ntoa_long_long\000"
 4529      615F6C6F 
 4529      6E675F6C 
 4529      6F6E6700 
 4530              	.LASF11:
 4531 02a1 6C6F6E67 		.ascii	"long unsigned int\000"
 4531      20756E73 
 4531      69676E65 
 4531      6420696E 
 4531      7400
 4532              	.LASF18:
 4533 02b3 646F7562 		.ascii	"double\000"
 4533      6C6500
 4534              	.LASF13:
 4535 02ba 5F5F7569 		.ascii	"__uintptr_t\000"
 4535      6E747074 
 4535      725F7400 
ARM GAS  C:\Users\munee\AppData\Local\Temp\cconzEwp.s 			page 97


 4536              	.LASF47:
 4537 02c6 636F756E 		.ascii	"count\000"
 4537      7400
 4538              	.LASF34:
 4539 02cc 70726563 		.ascii	"prec\000"
 4539      00
 4540              	.LASF21:
 4541 02d1 5F5F676E 		.ascii	"__gnuc_va_list\000"
 4541      75635F76 
 4541      615F6C69 
 4541      737400
 4542              	.LASF54:
 4543 02e0 7075745F 		.ascii	"put_string\000"
 4543      73747269 
 4543      6E6700
 4544              	.LASF39:
 4545 02eb 64696769 		.ascii	"digit\000"
 4545      7400
 4546              	.LASF32:
 4547 02f1 62617365 		.ascii	"base\000"
 4547      00
 4548              	.LASF44:
 4549 02f6 706F7731 		.ascii	"pow10\000"
 4549      3000
 4550              	.LASF51:
 4551 02fc 70726563 		.ascii	"precision\000"
 4551      6973696F 
 4551      6E00
 4552              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
