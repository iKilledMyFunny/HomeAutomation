ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.70
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  89:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  92:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  93:Generated_Source\PSoC4/CyLib.c **** 
  94:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  95:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  96:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  97:Generated_Source\PSoC4/CyLib.c **** *
  98:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  99:Generated_Source\PSoC4/CyLib.c **** *
 100:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
 101:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
 102:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 105:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 106:Generated_Source\PSoC4/CyLib.c **** *
 107:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 109:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 109 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 110:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 110 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 111:Generated_Source\PSoC4/CyLib.c **** 
 112:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 113:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 114:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 115:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 116:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** 
 119:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 120:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 121:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 122:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 123:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 125 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 30000340 		.word	1073938480
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 4


  47              		.cfi_endproc
  48              	.LFE1:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoDisableWcoLock
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoDisableWcoLock, %function
  56              	CySysClkImoDisableWcoLock:
  57              	.LFB4:
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** 
 128:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 129:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 130:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 131:Generated_Source\PSoC4/CyLib.c **** *
 132:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 133:Generated_Source\PSoC4/CyLib.c **** *
 134:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 135:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 138:Generated_Source\PSoC4/CyLib.c **** *
 139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 140:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 141:Generated_Source\PSoC4/CyLib.c **** {
 142:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 143:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 144:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 147:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 148:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 149:Generated_Source\PSoC4/CyLib.c **** 
 150:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 151:Generated_Source\PSoC4/CyLib.c **** }
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 154:Generated_Source\PSoC4/CyLib.c **** 
 155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 160:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 161:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 162:Generated_Source\PSoC4/CyLib.c ****     *
 163:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 164:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 165:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 166:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 167:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 168:Generated_Source\PSoC4/CyLib.c ****     *
 169:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 170:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 171:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 5


 172:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 173:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 174:Generated_Source\PSoC4/CyLib.c ****     *
 175:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 176:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 177:Generated_Source\PSoC4/CyLib.c ****     {
 178:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 179:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 180:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 183:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 185:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 186:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 187:Generated_Source\PSoC4/CyLib.c **** 
 188:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 189:Generated_Source\PSoC4/CyLib.c ****         {
 190:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 191:Generated_Source\PSoC4/CyLib.c **** 
 192:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 193:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 194:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 195:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 196:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 197:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 198:Generated_Source\PSoC4/CyLib.c **** 
 199:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 200:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 201:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 202:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 203:Generated_Source\PSoC4/CyLib.c ****                 {
 204:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 205:Generated_Source\PSoC4/CyLib.c ****                     {
 206:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 207:Generated_Source\PSoC4/CyLib.c ****                         break;
 208:Generated_Source\PSoC4/CyLib.c ****                     }
 209:Generated_Source\PSoC4/CyLib.c ****                 }
 210:Generated_Source\PSoC4/CyLib.c ****             #else
 211:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 212:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 213:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 214:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 215:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 216:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 217:Generated_Source\PSoC4/CyLib.c ****                 #else
 218:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 219:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 220:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 6


 229:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 245:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 248:Generated_Source\PSoC4/CyLib.c ****             }
 249:Generated_Source\PSoC4/CyLib.c ****             else
 250:Generated_Source\PSoC4/CyLib.c ****             {
 251:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 252:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 253:Generated_Source\PSoC4/CyLib.c **** 
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 256:Generated_Source\PSoC4/CyLib.c **** 
 257:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 258:Generated_Source\PSoC4/CyLib.c ****             }
 259:Generated_Source\PSoC4/CyLib.c **** 
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 263:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 264:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 265:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 266:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 267:Generated_Source\PSoC4/CyLib.c **** 
 268:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 269:Generated_Source\PSoC4/CyLib.c ****         }
 270:Generated_Source\PSoC4/CyLib.c ****     }
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c **** 
 273:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 274:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 275:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 276:Generated_Source\PSoC4/CyLib.c ****     *
 277:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 280:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 283:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 284:Generated_Source\PSoC4/CyLib.c ****     *
 285:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 7


 286:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 287:Generated_Source\PSoC4/CyLib.c ****     {
  58              		.loc 1 287 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 288:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  63              		.loc 1 288 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1168     		ldr	r1, [r2]
  66 0004 024B     		ldr	r3, .L5+4
  67 0006 0B40     		ands	r3, r1
  68 0008 1360     		str	r3, [r2]
 289:Generated_Source\PSoC4/CyLib.c ****     }
  69              		.loc 1 289 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 00002240 		.word	1075970048
  76 0010 FFFFFFBF 		.word	-1073741825
  77              		.cfi_endproc
  78              	.LFE4:
  79              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
  80              		.section	.text.CySysClkImoStop,"ax",%progbits
  81              		.align	2
  82              		.global	CySysClkImoStop
  83              		.code	16
  84              		.thumb_func
  85              		.type	CySysClkImoStop, %function
  86              	CySysClkImoStop:
  87              	.LFB2:
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  88              		.loc 1 141 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  96              		.loc 1 143 0
  97 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
  98              	.LVL0:
 150:Generated_Source\PSoC4/CyLib.c **** }
  99              		.loc 1 150 0
 100 0006 034A     		ldr	r2, .L8
 101 0008 1368     		ldr	r3, [r2]
 102 000a 5B00     		lsls	r3, r3, #1
 103 000c 5B08     		lsrs	r3, r3, #1
 104 000e 1360     		str	r3, [r2]
 151:Generated_Source\PSoC4/CyLib.c **** 
 105              		.loc 1 151 0
 106              		@ sp needed
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 8


 107 0010 10BD     		pop	{r4, pc}
 108              	.L9:
 109 0012 C046     		.align	2
 110              	.L8:
 111 0014 30000340 		.word	1073938480
 112              		.cfi_endproc
 113              	.LFE2:
 114              		.size	CySysClkImoStop, .-CySysClkImoStop
 115              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 116              		.align	2
 117              		.global	CySysClkImoGetWcoLock
 118              		.code	16
 119              		.thumb_func
 120              		.type	CySysClkImoGetWcoLock, %function
 121              	CySysClkImoGetWcoLock:
 122              	.LFB5:
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c **** 
 292:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 293:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 294:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 295:Generated_Source\PSoC4/CyLib.c ****     *
 296:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 297:Generated_Source\PSoC4/CyLib.c ****     *
 298:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 299:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 300:Generated_Source\PSoC4/CyLib.c ****     *
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 302:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 303:Generated_Source\PSoC4/CyLib.c ****     *
 304:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 305:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 306:Generated_Source\PSoC4/CyLib.c ****     {
 123              		.loc 1 306 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 307:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 128              		.loc 1 307 0
 129 0000 034B     		ldr	r3, .L12
 130 0002 1868     		ldr	r0, [r3]
 131 0004 8023     		movs	r3, #128
 132 0006 DB05     		lsls	r3, r3, #23
 133 0008 1840     		ands	r0, r3
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 134              		.loc 1 308 0
 135 000a 00D0     		beq	.L11
 136 000c 0120     		movs	r0, #1
 137              	.L11:
 309:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 310:Generated_Source\PSoC4/CyLib.c ****     }
 138              		.loc 1 310 0
 139              		@ sp needed
 140 000e 7047     		bx	lr
 141              	.L13:
 142              		.align	2
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 9


 143              	.L12:
 144 0010 00002240 		.word	1075970048
 145              		.cfi_endproc
 146              	.LFE5:
 147              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 148              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 149              		.align	2
 150              		.global	CySysClkWriteHfclkDirect
 151              		.code	16
 152              		.thumb_func
 153              		.type	CySysClkWriteHfclkDirect, %function
 154              	CySysClkWriteHfclkDirect:
 155              	.LFB6:
 311:Generated_Source\PSoC4/CyLib.c **** 
 312:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** 
 315:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 318:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 319:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 320:Generated_Source\PSoC4/CyLib.c ****     *
 321:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 322:Generated_Source\PSoC4/CyLib.c ****     *
 323:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 324:Generated_Source\PSoC4/CyLib.c ****     *
 325:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 326:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 327:Generated_Source\PSoC4/CyLib.c ****     *
 328:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 329:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 330:Generated_Source\PSoC4/CyLib.c ****     *
 331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 332:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 333:Generated_Source\PSoC4/CyLib.c ****     {
 334:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 335:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 336:Generated_Source\PSoC4/CyLib.c ****             
 337:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 338:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = (CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_RE
 339:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 342:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 343:Generated_Source\PSoC4/CyLib.c **** 
 344:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 345:Generated_Source\PSoC4/CyLib.c ****             {
 346:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 347:Generated_Source\PSoC4/CyLib.c ****                 {
 348:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 349:Generated_Source\PSoC4/CyLib.c ****                     break;
 350:Generated_Source\PSoC4/CyLib.c ****                 }
 351:Generated_Source\PSoC4/CyLib.c ****             }
 352:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 353:Generated_Source\PSoC4/CyLib.c ****         
 354:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 10


 355:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 356:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 357:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 359:Generated_Source\PSoC4/CyLib.c **** 
 360:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 361:Generated_Source\PSoC4/CyLib.c ****            
 362:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 363:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 364:Generated_Source\PSoC4/CyLib.c ****             
 365:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 366:Generated_Source\PSoC4/CyLib.c ****             {
 367:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 368:Generated_Source\PSoC4/CyLib.c ****                 
 369:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 370:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 371:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 372:Generated_Source\PSoC4/CyLib.c ****                 
 373:Generated_Source\PSoC4/CyLib.c ****             }
 374:Generated_Source\PSoC4/CyLib.c ****             else
 375:Generated_Source\PSoC4/CyLib.c ****             {
 376:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 377:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 378:Generated_Source\PSoC4/CyLib.c **** 
 379:Generated_Source\PSoC4/CyLib.c ****             }
 380:Generated_Source\PSoC4/CyLib.c **** 
 381:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 382:Generated_Source\PSoC4/CyLib.c ****             {
 383:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 384:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 385:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 386:Generated_Source\PSoC4/CyLib.c ****             }
 387:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 388:Generated_Source\PSoC4/CyLib.c ****             {
 389:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 390:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 391:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 392:Generated_Source\PSoC4/CyLib.c ****             }
 393:Generated_Source\PSoC4/CyLib.c ****             else
 394:Generated_Source\PSoC4/CyLib.c ****             {
 395:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 396:Generated_Source\PSoC4/CyLib.c ****             }
 397:Generated_Source\PSoC4/CyLib.c ****             
 398:Generated_Source\PSoC4/CyLib.c ****             
 399:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 400:Generated_Source\PSoC4/CyLib.c **** 
 401:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 402:Generated_Source\PSoC4/CyLib.c ****     }
 403:Generated_Source\PSoC4/CyLib.c **** 
 404:Generated_Source\PSoC4/CyLib.c **** 
 405:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 406:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 407:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 408:Generated_Source\PSoC4/CyLib.c ****     *
 409:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 410:Generated_Source\PSoC4/CyLib.c ****     *
 411:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 11


 412:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 413:Generated_Source\PSoC4/CyLib.c ****     *
 414:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 415:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 416:Generated_Source\PSoC4/CyLib.c ****     *
 417:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 418:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 419:Generated_Source\PSoC4/CyLib.c ****     {
 420:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 421:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 422:Generated_Source\PSoC4/CyLib.c ****             
 423:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 424:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = (CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_RE
 425:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 426:Generated_Source\PSoC4/CyLib.c **** 
 427:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 428:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 431:Generated_Source\PSoC4/CyLib.c ****             {
 432:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 433:Generated_Source\PSoC4/CyLib.c ****                 {
 434:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 435:Generated_Source\PSoC4/CyLib.c ****                     break;
 436:Generated_Source\PSoC4/CyLib.c ****                 }
 437:Generated_Source\PSoC4/CyLib.c ****             }           
 438:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 439:Generated_Source\PSoC4/CyLib.c ****         
 440:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 441:Generated_Source\PSoC4/CyLib.c **** 
 442:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 443:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 444:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 445:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 446:Generated_Source\PSoC4/CyLib.c **** 
 447:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 448:Generated_Source\PSoC4/CyLib.c ****             {
 449:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 450:Generated_Source\PSoC4/CyLib.c ****             }
 451:Generated_Source\PSoC4/CyLib.c ****             else
 452:Generated_Source\PSoC4/CyLib.c ****             {
 453:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 454:Generated_Source\PSoC4/CyLib.c ****             }
 455:Generated_Source\PSoC4/CyLib.c ****             
 456:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 457:Generated_Source\PSoC4/CyLib.c ****             
 458:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 459:Generated_Source\PSoC4/CyLib.c ****     }
 460:Generated_Source\PSoC4/CyLib.c **** 
 461:Generated_Source\PSoC4/CyLib.c **** 
 462:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 463:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 464:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 465:Generated_Source\PSoC4/CyLib.c ****     *
 466:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 467:Generated_Source\PSoC4/CyLib.c ****     *
 468:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 12


 469:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 470:Generated_Source\PSoC4/CyLib.c ****     *
 471:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 472:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 473:Generated_Source\PSoC4/CyLib.c ****     *
 474:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 475:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 476:Generated_Source\PSoC4/CyLib.c ****     {
 477:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 478:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 479:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 480:Generated_Source\PSoC4/CyLib.c ****     }
 481:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c **** 
 484:Generated_Source\PSoC4/CyLib.c **** 
 485:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 486:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 487:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 488:Generated_Source\PSoC4/CyLib.c **** *
 489:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 490:Generated_Source\PSoC4/CyLib.c **** *
 491:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 492:Generated_Source\PSoC4/CyLib.c **** *
 493:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 494:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 495:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 496:Generated_Source\PSoC4/CyLib.c **** *
 497:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 498:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 499:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 500:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 501:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 502:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 503:Generated_Source\PSoC4/CyLib.c **** *
 504:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 505:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 508:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 509:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 510:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 511:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 512:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
 513:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 514:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
 515:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 516:Generated_Source\PSoC4/CyLib.c **** *
 517:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 518:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 519:Generated_Source\PSoC4/CyLib.c **** {
 156              		.loc 1 519 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              	.LVL1:
 161 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 13


 162              		.cfi_def_cfa_offset 16
 163              		.cfi_offset 4, -16
 164              		.cfi_offset 5, -12
 165              		.cfi_offset 6, -8
 166              		.cfi_offset 14, -4
 167 0002 0400     		movs	r4, r0
 168              	.LVL2:
 520:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 521:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 522:Generated_Source\PSoC4/CyLib.c ****     
 523:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 524:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 525:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 526:Generated_Source\PSoC4/CyLib.c **** 
 527:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 169              		.loc 1 527 0
 170 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 171              	.LVL3:
 528:Generated_Source\PSoC4/CyLib.c **** 
 529:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 530:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 172              		.loc 1 530 0
 173 0008 062C     		cmp	r4, #6
 174 000a 01D0     		beq	.L15
 175              		.loc 1 530 0 is_stmt 0 discriminator 1
 176 000c 022C     		cmp	r4, #2
 177 000e 25D1     		bne	.L16
 178              	.L15:
 531:Generated_Source\PSoC4/CyLib.c ****     {
 532:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 179              		.loc 1 532 0 is_stmt 1
 180 0010 174A     		ldr	r2, .L19
 181 0012 1368     		ldr	r3, [r2]
 182 0014 0321     		movs	r1, #3
 183 0016 8B43     		bics	r3, r1
 184              	.LVL4:
 533:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 534:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;        
 185              		.loc 1 534 0
 186 0018 1360     		str	r3, [r2]
 535:Generated_Source\PSoC4/CyLib.c ****         
 536:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 537:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 187              		.loc 1 537 0
 188 001a 164D     		ldr	r5, .L19+4
 189 001c 2968     		ldr	r1, [r5]
 190 001e 0123     		movs	r3, #1
 191              	.LVL5:
 192 0020 9943     		bics	r1, r3
 193              	.LVL6:
 538:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 194              		.loc 1 538 0
 195 0022 A208     		lsrs	r2, r4, #2
 196 0024 1340     		ands	r3, r2
 197 0026 0B43     		orrs	r3, r1
 198              	.LVL7:
 539:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 14


 199              		.loc 1 539 0
 200 0028 2B60     		str	r3, [r5]
 540:Generated_Source\PSoC4/CyLib.c ****         
 541:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 542:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 201              		.loc 1 542 0
 202 002a 134A     		ldr	r2, .L19+8
 203 002c 1368     		ldr	r3, [r2]
 204              	.LVL8:
 205 002e 8021     		movs	r1, #128
 206 0030 0906     		lsls	r1, r1, #24
 207 0032 0B43     		orrs	r3, r1
 208 0034 1360     		str	r3, [r2]
 209              	.LVL9:
 543:Generated_Source\PSoC4/CyLib.c ****         
 544:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 210              		.loc 1 544 0
 211 0036 0023     		movs	r3, #0
 212 0038 09E0     		b	.L17
 213              	.LVL10:
 214              	.L18:
 545:Generated_Source\PSoC4/CyLib.c ****         {
 546:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 215              		.loc 1 546 0 discriminator 3
 216 003a 0F4A     		ldr	r2, .L19+8
 217 003c 1168     		ldr	r1, [r2]
 218 003e 0225     		movs	r5, #2
 219 0040 2943     		orrs	r1, r5
 220 0042 1160     		str	r1, [r2]
 547:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 221              		.loc 1 547 0 discriminator 3
 222 0044 1168     		ldr	r1, [r2]
 223 0046 A943     		bics	r1, r5
 224 0048 1160     		str	r1, [r2]
 544:Generated_Source\PSoC4/CyLib.c ****         {
 225              		.loc 1 544 0 discriminator 3
 226 004a 0133     		adds	r3, r3, #1
 227              	.LVL11:
 228 004c DBB2     		uxtb	r3, r3
 229              	.LVL12:
 230              	.L17:
 544:Generated_Source\PSoC4/CyLib.c ****         {
 231              		.loc 1 544 0 is_stmt 0 discriminator 1
 232 004e 042B     		cmp	r3, #4
 233 0050 F3D9     		bls	.L18
 548:Generated_Source\PSoC4/CyLib.c ****         }
 549:Generated_Source\PSoC4/CyLib.c ****         
 550:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 234              		.loc 1 550 0 is_stmt 1
 235 0052 094A     		ldr	r2, .L19+8
 236 0054 1368     		ldr	r3, [r2]
 237              	.LVL13:
 238 0056 5B00     		lsls	r3, r3, #1
 239 0058 5B08     		lsrs	r3, r3, #1
 240 005a 1360     		str	r3, [r2]
 241              	.L16:
 551:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 15


 552:Generated_Source\PSoC4/CyLib.c ****     else
 553:Generated_Source\PSoC4/CyLib.c ****     {
 554:Generated_Source\PSoC4/CyLib.c ****         /* Do nothing */
 555:Generated_Source\PSoC4/CyLib.c ****     }
 556:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 557:Generated_Source\PSoC4/CyLib.c **** 
 558:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 242              		.loc 1 558 0
 243 005c 044A     		ldr	r2, .L19
 244 005e 1368     		ldr	r3, [r2]
 245 0060 0321     		movs	r1, #3
 246 0062 8B43     		bics	r3, r1
 247              	.LVL14:
 559:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 560:Generated_Source\PSoC4/CyLib.c **** 
 561:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 562:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 563:Generated_Source\PSoC4/CyLib.c ****     {
 564:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 565:Generated_Source\PSoC4/CyLib.c ****     }
 566:Generated_Source\PSoC4/CyLib.c ****     else
 567:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 568:Generated_Source\PSoC4/CyLib.c ****     {
 569:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 248              		.loc 1 569 0
 249 0064 0C40     		ands	r4, r1
 250              	.LVL15:
 251 0066 1C43     		orrs	r4, r3
 252              	.LVL16:
 570:Generated_Source\PSoC4/CyLib.c ****     }   
 571:Generated_Source\PSoC4/CyLib.c ****     
 572:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 253              		.loc 1 572 0
 254 0068 1460     		str	r4, [r2]
 573:Generated_Source\PSoC4/CyLib.c ****     
 574:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 255              		.loc 1 574 0
 256 006a FFF7FEFF 		bl	CyExitCriticalSection
 257              	.LVL17:
 575:Generated_Source\PSoC4/CyLib.c **** }
 258              		.loc 1 575 0
 259              		@ sp needed
 260              	.LVL18:
 261 006e 70BD     		pop	{r4, r5, r6, pc}
 262              	.L20:
 263              		.align	2
 264              	.L19:
 265 0070 28000340 		.word	1073938472
 266 0074 00002F40 		.word	1076822016
 267 0078 20002F40 		.word	1076822048
 268              		.cfi_endproc
 269              	.LFE6:
 270              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 271              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 272              		.align	2
 273              		.global	CySysEnablePumpClock
 274              		.code	16
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 16


 275              		.thumb_func
 276              		.type	CySysEnablePumpClock, %function
 277              	CySysEnablePumpClock:
 278              	.LFB7:
 576:Generated_Source\PSoC4/CyLib.c **** 
 577:Generated_Source\PSoC4/CyLib.c **** 
 578:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 579:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 580:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 581:Generated_Source\PSoC4/CyLib.c **** *
 582:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 585:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 586:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 587:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 590:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 591:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 594:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 595:Generated_Source\PSoC4/CyLib.c **** {
 279              		.loc 1 595 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LVL19:
 596:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 597:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 598:Generated_Source\PSoC4/CyLib.c ****         {
 599:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 600:Generated_Source\PSoC4/CyLib.c ****         }
 601:Generated_Source\PSoC4/CyLib.c ****         else
 602:Generated_Source\PSoC4/CyLib.c ****         {
 603:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 604:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 605:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 606:Generated_Source\PSoC4/CyLib.c ****         }
 607:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 608:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 285              		.loc 1 608 0
 286 0000 C307     		lsls	r3, r0, #31
 287 0002 07D5     		bpl	.L22
 609:Generated_Source\PSoC4/CyLib.c ****         {
 610:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 288              		.loc 1 610 0
 289 0004 094A     		ldr	r2, .L24
 290 0006 1168     		ldr	r1, [r2]
 291 0008 094B     		ldr	r3, .L24+4
 292 000a 1B68     		ldr	r3, [r3]
 293 000c 1B01     		lsls	r3, r3, #4
 294 000e 0B43     		orrs	r3, r1
 295 0010 1360     		str	r3, [r2]
 296 0012 0AE0     		b	.L21
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 17


 297              	.L22:
 611:Generated_Source\PSoC4/CyLib.c ****         }
 612:Generated_Source\PSoC4/CyLib.c ****         else
 613:Generated_Source\PSoC4/CyLib.c ****         {
 614:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 298              		.loc 1 614 0
 299 0014 054A     		ldr	r2, .L24
 300 0016 1368     		ldr	r3, [r2]
 301 0018 1B09     		lsrs	r3, r3, #4
 302 001a 0321     		movs	r1, #3
 303 001c 0B40     		ands	r3, r1
 304 001e 0449     		ldr	r1, .L24+4
 305 0020 0B60     		str	r3, [r1]
 615:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 616:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 306              		.loc 1 616 0
 307 0022 1368     		ldr	r3, [r2]
 308 0024 3021     		movs	r1, #48
 309 0026 8B43     		bics	r3, r1
 310 0028 1360     		str	r3, [r2]
 311              	.L21:
 617:Generated_Source\PSoC4/CyLib.c ****         }
 618:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 619:Generated_Source\PSoC4/CyLib.c **** }
 312              		.loc 1 619 0
 313              		@ sp needed
 314 002a 7047     		bx	lr
 315              	.L25:
 316              		.align	2
 317              	.L24:
 318 002c 28000340 		.word	1073938472
 319 0030 00000000 		.word	.LANCHOR0
 320              		.cfi_endproc
 321              	.LFE7:
 322              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 323              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 324              		.align	2
 325              		.global	CySysClkGetSysclkSource
 326              		.code	16
 327              		.thumb_func
 328              		.type	CySysClkGetSysclkSource, %function
 329              	CySysClkGetSysclkSource:
 330              	.LFB8:
 620:Generated_Source\PSoC4/CyLib.c **** 
 621:Generated_Source\PSoC4/CyLib.c **** 
 622:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 623:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 624:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 625:Generated_Source\PSoC4/CyLib.c **** *
 626:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 627:Generated_Source\PSoC4/CyLib.c **** *
 628:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 629:Generated_Source\PSoC4/CyLib.c **** *
 630:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 631:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 632:Generated_Source\PSoC4/CyLib.c **** {
 331              		.loc 1 632 0
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 18


 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335 0000 10B5     		push	{r4, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 4, -8
 338              		.cfi_offset 14, -4
 633:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 634:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 339              		.loc 1 636 0
 340 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 341              	.LVL20:
 637:Generated_Source\PSoC4/CyLib.c **** 
 638:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 639:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 640:Generated_Source\PSoC4/CyLib.c ****     {
 641:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 642:Generated_Source\PSoC4/CyLib.c ****     }
 643:Generated_Source\PSoC4/CyLib.c ****     else
 644:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 645:Generated_Source\PSoC4/CyLib.c ****     {
 646:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 342              		.loc 1 646 0
 343 0006 074B     		ldr	r3, .L27
 344 0008 1B68     		ldr	r3, [r3]
 345 000a 0324     		movs	r4, #3
 346 000c 2200     		movs	r2, r4
 347 000e 1A40     		ands	r2, r3
 348              	.LVL21:
 647:Generated_Source\PSoC4/CyLib.c **** 
 648:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 649:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 349              		.loc 1 649 0
 350 0010 054B     		ldr	r3, .L27+4
 351 0012 1B68     		ldr	r3, [r3]
 352 0014 9B00     		lsls	r3, r3, #2
 353 0016 0134     		adds	r4, r4, #1
 354 0018 1C40     		ands	r4, r3
 355 001a 1443     		orrs	r4, r2
 356              	.LVL22:
 650:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 651:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 652:Generated_Source\PSoC4/CyLib.c ****         
 653:Generated_Source\PSoC4/CyLib.c ****     }
 654:Generated_Source\PSoC4/CyLib.c **** 
 655:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 357              		.loc 1 655 0
 358 001c FFF7FEFF 		bl	CyExitCriticalSection
 359              	.LVL23:
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 658:Generated_Source\PSoC4/CyLib.c **** }
 360              		.loc 1 658 0
 361 0020 2000     		movs	r0, r4
 362              		@ sp needed
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 19


 363              	.LVL24:
 364 0022 10BD     		pop	{r4, pc}
 365              	.L28:
 366              		.align	2
 367              	.L27:
 368 0024 28000340 		.word	1073938472
 369 0028 00002F40 		.word	1076822016
 370              		.cfi_endproc
 371              	.LFE8:
 372              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 373              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 374              		.align	2
 375              		.global	CySysClkWriteSysclkDiv
 376              		.code	16
 377              		.thumb_func
 378              		.type	CySysClkWriteSysclkDiv, %function
 379              	CySysClkWriteSysclkDiv:
 380              	.LFB9:
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c **** 
 661:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 662:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 663:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 664:Generated_Source\PSoC4/CyLib.c **** *
 665:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 666:Generated_Source\PSoC4/CyLib.c **** *
 667:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 668:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 669:Generated_Source\PSoC4/CyLib.c **** *
 670:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 671:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 672:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 673:Generated_Source\PSoC4/CyLib.c **** *
 674:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 675:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 676:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 677:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 678:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 679:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 680:Generated_Source\PSoC4/CyLib.c **** *
 681:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 682:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 683:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 684:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 685:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 686:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 687:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 688:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 689:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 690:Generated_Source\PSoC4/CyLib.c **** *
 691:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 692:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 693:Generated_Source\PSoC4/CyLib.c **** {
 381              		.loc 1 693 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 20


 385              	.LVL25:
 386 0000 10B5     		push	{r4, lr}
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 4, -8
 389              		.cfi_offset 14, -4
 390 0002 0400     		movs	r4, r0
 694:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 695:Generated_Source\PSoC4/CyLib.c **** 
 696:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 391              		.loc 1 696 0
 392 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 393              	.LVL26:
 697:Generated_Source\PSoC4/CyLib.c **** 
 698:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 394              		.loc 1 698 0
 395 0008 A401     		lsls	r4, r4, #6
 396              	.LVL27:
 397 000a FF23     		movs	r3, #255
 398 000c 2340     		ands	r3, r4
 699:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 700:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 399              		.loc 1 700 0
 400 000e 0449     		ldr	r1, .L30
 401 0010 0A68     		ldr	r2, [r1]
 402 0012 C024     		movs	r4, #192
 403 0014 A243     		bics	r2, r4
 699:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 404              		.loc 1 699 0
 405 0016 1343     		orrs	r3, r2
 698:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 406              		.loc 1 698 0
 407 0018 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 702:Generated_Source\PSoC4/CyLib.c **** 
 703:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 408              		.loc 1 703 0
 409 001a FFF7FEFF 		bl	CyExitCriticalSection
 410              	.LVL28:
 704:Generated_Source\PSoC4/CyLib.c **** }
 411              		.loc 1 704 0
 412              		@ sp needed
 413 001e 10BD     		pop	{r4, pc}
 414              	.L31:
 415              		.align	2
 416              	.L30:
 417 0020 28000340 		.word	1073938472
 418              		.cfi_endproc
 419              	.LFE9:
 420              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 421              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 422              		.align	2
 423              		.global	CySysClkWriteHfclkDiv
 424              		.code	16
 425              		.thumb_func
 426              		.type	CySysClkWriteHfclkDiv, %function
 427              	CySysClkWriteHfclkDiv:
 428              	.LFB11:
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 21


 705:Generated_Source\PSoC4/CyLib.c **** 
 706:Generated_Source\PSoC4/CyLib.c **** 
 707:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 708:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 709:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 710:Generated_Source\PSoC4/CyLib.c **** *
 711:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 712:Generated_Source\PSoC4/CyLib.c **** *
 713:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 714:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 715:Generated_Source\PSoC4/CyLib.c **** *
 716:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 717:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 718:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 719:Generated_Source\PSoC4/CyLib.c **** *
 720:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 721:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 722:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 723:Generated_Source\PSoC4/CyLib.c **** *
 724:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 725:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 726:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 727:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 728:Generated_Source\PSoC4/CyLib.c **** *
 729:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 730:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 731:Generated_Source\PSoC4/CyLib.c **** *
 732:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 733:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 734:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 735:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 736:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 737:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 738:Generated_Source\PSoC4/CyLib.c **** *
 739:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 740:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 741:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 742:Generated_Source\PSoC4/CyLib.c **** *
 743:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 744:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 745:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 746:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 747:Generated_Source\PSoC4/CyLib.c **** *
 748:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 749:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 750:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 751:Generated_Source\PSoC4/CyLib.c ****     {
 752:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 753:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 754:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 755:Generated_Source\PSoC4/CyLib.c ****         #else
 756:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 757:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 758:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 759:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 760:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 761:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 22


 762:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 763:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 764:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 765:Generated_Source\PSoC4/CyLib.c **** 
 766:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 767:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 768:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 769:Generated_Source\PSoC4/CyLib.c **** 
 770:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 771:Generated_Source\PSoC4/CyLib.c **** 
 772:Generated_Source\PSoC4/CyLib.c **** 
 773:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 774:Generated_Source\PSoC4/CyLib.c **** 
 775:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 776:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 777:Generated_Source\PSoC4/CyLib.c ****             {
 778:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 779:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 780:Generated_Source\PSoC4/CyLib.c ****             }
 781:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 782:Generated_Source\PSoC4/CyLib.c **** 
 783:Generated_Source\PSoC4/CyLib.c **** 
 784:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 785:Generated_Source\PSoC4/CyLib.c **** 
 786:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 787:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 788:Generated_Source\PSoC4/CyLib.c ****                 {
 789:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 790:Generated_Source\PSoC4/CyLib.c **** 
 791:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 792:Generated_Source\PSoC4/CyLib.c ****                 {
 793:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 794:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 795:Generated_Source\PSoC4/CyLib.c ****                 }
 796:Generated_Source\PSoC4/CyLib.c **** 
 797:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 798:Generated_Source\PSoC4/CyLib.c ****                 }
 799:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 800:Generated_Source\PSoC4/CyLib.c **** 
 801:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 802:Generated_Source\PSoC4/CyLib.c **** 
 803:Generated_Source\PSoC4/CyLib.c **** 
 804:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 805:Generated_Source\PSoC4/CyLib.c **** 
 806:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 807:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 808:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 809:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 810:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 811:Generated_Source\PSoC4/CyLib.c **** 
 812:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 813:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 814:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 815:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 816:Generated_Source\PSoC4/CyLib.c **** 
 817:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 818:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 23


 819:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 820:Generated_Source\PSoC4/CyLib.c **** 
 821:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 824:Generated_Source\PSoC4/CyLib.c ****         {
 825:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 826:Generated_Source\PSoC4/CyLib.c ****             {
 827:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 828:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 829:Generated_Source\PSoC4/CyLib.c ****             }
 830:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 831:Generated_Source\PSoC4/CyLib.c ****             {
 832:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 833:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 834:Generated_Source\PSoC4/CyLib.c ****             }
 835:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 836:Generated_Source\PSoC4/CyLib.c ****             {
 837:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 838:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 839:Generated_Source\PSoC4/CyLib.c ****             }
 840:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 841:Generated_Source\PSoC4/CyLib.c ****             {
 842:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 843:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 844:Generated_Source\PSoC4/CyLib.c ****             }
 845:Generated_Source\PSoC4/CyLib.c ****             else
 846:Generated_Source\PSoC4/CyLib.c ****             {
 847:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 848:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 849:Generated_Source\PSoC4/CyLib.c ****             }
 850:Generated_Source\PSoC4/CyLib.c **** 
 851:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 852:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 853:Generated_Source\PSoC4/CyLib.c **** 
 854:Generated_Source\PSoC4/CyLib.c **** 
 855:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 856:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 857:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 858:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 859:Generated_Source\PSoC4/CyLib.c ****             *
 860:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 861:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 862:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 863:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 864:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 865:Generated_Source\PSoC4/CyLib.c ****             {
 866:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 867:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 868:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 873:Generated_Source\PSoC4/CyLib.c ****             }
 874:Generated_Source\PSoC4/CyLib.c ****             else
 875:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 24


 876:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 877:Generated_Source\PSoC4/CyLib.c ****             }
 878:Generated_Source\PSoC4/CyLib.c **** 
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 881:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 882:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 883:Generated_Source\PSoC4/CyLib.c ****             *
 884:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 885:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 886:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 887:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 888:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 889:Generated_Source\PSoC4/CyLib.c ****             {
 890:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 891:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 892:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 893:Generated_Source\PSoC4/CyLib.c ****             }
 894:Generated_Source\PSoC4/CyLib.c **** 
 895:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 896:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IM
 897:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 898:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 899:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 900:Generated_Source\PSoC4/CyLib.c **** 
 901:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 902:Generated_Source\PSoC4/CyLib.c ****             {
 903:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 904:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 905:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 906:Generated_Source\PSoC4/CyLib.c ****             }
 907:Generated_Source\PSoC4/CyLib.c ****         }
 908:Generated_Source\PSoC4/CyLib.c ****         else
 909:Generated_Source\PSoC4/CyLib.c ****         {
 910:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 911:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 912:Generated_Source\PSoC4/CyLib.c ****         }
 913:Generated_Source\PSoC4/CyLib.c **** 
 914:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 915:Generated_Source\PSoC4/CyLib.c **** 
 916:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 917:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 918:Generated_Source\PSoC4/CyLib.c ****             {
 919:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 920:Generated_Source\PSoC4/CyLib.c ****             }
 921:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 922:Generated_Source\PSoC4/CyLib.c **** 
 923:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 924:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 925:Generated_Source\PSoC4/CyLib.c ****             {
 926:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 927:Generated_Source\PSoC4/CyLib.c ****             }
 928:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 929:Generated_Source\PSoC4/CyLib.c **** 
 930:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 931:Generated_Source\PSoC4/CyLib.c ****     }
 932:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 25


 933:Generated_Source\PSoC4/CyLib.c **** #else
 934:Generated_Source\PSoC4/CyLib.c **** 
 935:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 936:Generated_Source\PSoC4/CyLib.c ****     {
 937:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 938:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 939:Generated_Source\PSoC4/CyLib.c **** 
 940:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 941:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 942:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 943:Generated_Source\PSoC4/CyLib.c ****         
 944:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 945:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 946:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 947:Generated_Source\PSoC4/CyLib.c **** 
 948:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 949:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 950:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 951:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 952:Generated_Source\PSoC4/CyLib.c ****         #else
 953:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 954:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 955:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 956:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 957:Generated_Source\PSoC4/CyLib.c ****         {
 958:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 959:Generated_Source\PSoC4/CyLib.c **** 
 960:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 961:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 962:Generated_Source\PSoC4/CyLib.c ****                 {
 963:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 964:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 965:Generated_Source\PSoC4/CyLib.c ****                 }
 966:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 967:Generated_Source\PSoC4/CyLib.c **** 
 968:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 969:Generated_Source\PSoC4/CyLib.c **** 
 970:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 971:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 972:Generated_Source\PSoC4/CyLib.c ****                     {
 973:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 974:Generated_Source\PSoC4/CyLib.c **** 
 975:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 976:Generated_Source\PSoC4/CyLib.c ****                     {
 977:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 978:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 979:Generated_Source\PSoC4/CyLib.c ****                     }
 980:Generated_Source\PSoC4/CyLib.c **** 
 981:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 982:Generated_Source\PSoC4/CyLib.c ****                     }
 983:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c **** 
 988:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 989:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 26


 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c **** 
 992:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 993:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 994:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 995:Generated_Source\PSoC4/CyLib.c ****                 {
 996:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 997:Generated_Source\PSoC4/CyLib.c ****                 }
 998:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 999:Generated_Source\PSoC4/CyLib.c ****                 {
1000:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1001:Generated_Source\PSoC4/CyLib.c ****                 }
1002:Generated_Source\PSoC4/CyLib.c ****                 else
1003:Generated_Source\PSoC4/CyLib.c ****                 {
1004:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1005:Generated_Source\PSoC4/CyLib.c ****                 }
1006:Generated_Source\PSoC4/CyLib.c ****             #else
1007:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1008:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1009:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1012:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1013:Generated_Source\PSoC4/CyLib.c **** 
1014:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1015:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1016:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1017:Generated_Source\PSoC4/CyLib.c **** 
1018:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1019:Generated_Source\PSoC4/CyLib.c **** 
1020:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1021:Generated_Source\PSoC4/CyLib.c ****             {
1022:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1023:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1024:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1025:Generated_Source\PSoC4/CyLib.c **** 
1026:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1027:Generated_Source\PSoC4/CyLib.c **** 
1028:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1029:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1030:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1031:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1032:Generated_Source\PSoC4/CyLib.c ****             }
1033:Generated_Source\PSoC4/CyLib.c **** 
1034:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1035:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1036:Generated_Source\PSoC4/CyLib.c ****                 {
1037:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1038:Generated_Source\PSoC4/CyLib.c ****                 }
1039:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         
1042:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1043:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1044:Generated_Source\PSoC4/CyLib.c ****                 {
1045:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1046:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 27


1047:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1048:Generated_Source\PSoC4/CyLib.c **** 
1049:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1050:Generated_Source\PSoC4/CyLib.c ****         }
1051:Generated_Source\PSoC4/CyLib.c ****         else
1052:Generated_Source\PSoC4/CyLib.c ****         {
1053:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1054:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1055:Generated_Source\PSoC4/CyLib.c ****         }
1056:Generated_Source\PSoC4/CyLib.c ****     }
1057:Generated_Source\PSoC4/CyLib.c **** 
1058:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1059:Generated_Source\PSoC4/CyLib.c **** 
1060:Generated_Source\PSoC4/CyLib.c **** 
1061:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1062:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1063:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1064:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1065:Generated_Source\PSoC4/CyLib.c ****     *
1066:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1067:Generated_Source\PSoC4/CyLib.c ****     *
1068:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1069:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1070:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1071:Generated_Source\PSoC4/CyLib.c ****     *
1072:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1073:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1074:Generated_Source\PSoC4/CyLib.c ****     *
1075:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1076:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1077:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1078:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1079:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1080:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1081:Generated_Source\PSoC4/CyLib.c ****     *
1082:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1083:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1084:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1085:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1086:Generated_Source\PSoC4/CyLib.c ****     *
1087:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1088:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1089:Generated_Source\PSoC4/CyLib.c ****     {
 429              		.loc 1 1089 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433              	.LVL29:
 434 0000 70B5     		push	{r4, r5, r6, lr}
 435              		.cfi_def_cfa_offset 16
 436              		.cfi_offset 4, -16
 437              		.cfi_offset 5, -12
 438              		.cfi_offset 6, -8
 439              		.cfi_offset 14, -4
 440 0002 0400     		movs	r4, r0
1090:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1091:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 28


1092:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 441              		.loc 1 1092 0
 442 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 443              	.LVL30:
1093:Generated_Source\PSoC4/CyLib.c **** 
1094:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 444              		.loc 1 1094 0
 445 0008 0549     		ldr	r1, .L33
 446 000a 0A68     		ldr	r2, [r1]
 447 000c 0C25     		movs	r5, #12
 448 000e AA43     		bics	r2, r5
1095:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1096:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 449              		.loc 1 1096 0
 450 0010 A300     		lsls	r3, r4, #2
 451 0012 2C00     		movs	r4, r5
 452              	.LVL31:
 453 0014 1C40     		ands	r4, r3
1095:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 454              		.loc 1 1095 0
 455 0016 1443     		orrs	r4, r2
1094:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 456              		.loc 1 1094 0
 457 0018 0C60     		str	r4, [r1]
1097:Generated_Source\PSoC4/CyLib.c **** 
1098:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 458              		.loc 1 1098 0
 459 001a FFF7FEFF 		bl	CyExitCriticalSection
 460              	.LVL32:
1099:Generated_Source\PSoC4/CyLib.c ****     }
 461              		.loc 1 1099 0
 462              		@ sp needed
 463 001e 70BD     		pop	{r4, r5, r6, pc}
 464              	.L34:
 465              		.align	2
 466              	.L33:
 467 0020 28000340 		.word	1073938472
 468              		.cfi_endproc
 469              	.LFE11:
 470              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 471              		.section	.text.CySysClkEcoStop,"ax",%progbits
 472              		.align	2
 473              		.global	CySysClkEcoStop
 474              		.code	16
 475              		.thumb_func
 476              		.type	CySysClkEcoStop, %function
 477              	CySysClkEcoStop:
 478              	.LFB13:
1100:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1101:Generated_Source\PSoC4/CyLib.c **** 
1102:Generated_Source\PSoC4/CyLib.c **** 
1103:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1104:Generated_Source\PSoC4/CyLib.c **** 
1105:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1106:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1107:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1108:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 29


1109:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1110:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1111:Generated_Source\PSoC4/CyLib.c ****     *
1112:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1113:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1114:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1115:Generated_Source\PSoC4/CyLib.c ****     * called.
1116:Generated_Source\PSoC4/CyLib.c ****     *
1117:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1118:Generated_Source\PSoC4/CyLib.c ****     *
1119:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1120:Generated_Source\PSoC4/CyLib.c ****     *
1121:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1122:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1123:Generated_Source\PSoC4/CyLib.c ****     *
1124:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1125:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1126:Generated_Source\PSoC4/CyLib.c ****     *
1127:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1128:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1129:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1130:Generated_Source\PSoC4/CyLib.c ****     *
1131:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1132:Generated_Source\PSoC4/CyLib.c ****     *
1133:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1134:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1135:Generated_Source\PSoC4/CyLib.c ****     {
1136:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1137:Generated_Source\PSoC4/CyLib.c **** 
1138:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1139:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1140:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1141:Generated_Source\PSoC4/CyLib.c **** 
1142:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1143:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1146:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1147:Generated_Source\PSoC4/CyLib.c ****         
1148:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1149:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1150:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1151:Generated_Source\PSoC4/CyLib.c ****             
1152:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1153:Generated_Source\PSoC4/CyLib.c ****             {
1154:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1155:Generated_Source\PSoC4/CyLib.c ****             }
1156:Generated_Source\PSoC4/CyLib.c ****             else
1157:Generated_Source\PSoC4/CyLib.c ****             {
1158:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1159:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1160:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1161:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1162:Generated_Source\PSoC4/CyLib.c ****             
1163:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1164:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1165:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 30


1166:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1167:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1168:Generated_Source\PSoC4/CyLib.c ****                 
1169:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1170:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1171:Generated_Source\PSoC4/CyLib.c ****                 {
1172:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1173:Generated_Source\PSoC4/CyLib.c ****                 }
1174:Generated_Source\PSoC4/CyLib.c ****                 
1175:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1176:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1177:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1178:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1179:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1180:Generated_Source\PSoC4/CyLib.c **** 
1181:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1182:Generated_Source\PSoC4/CyLib.c ****                 {
1183:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1184:Generated_Source\PSoC4/CyLib.c ****                 }
1185:Generated_Source\PSoC4/CyLib.c **** 
1186:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1187:Generated_Source\PSoC4/CyLib.c ****                 {
1188:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1189:Generated_Source\PSoC4/CyLib.c ****                 }
1190:Generated_Source\PSoC4/CyLib.c ****                 
1191:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1192:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1194:Generated_Source\PSoC4/CyLib.c ****                 
1195:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1196:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1197:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1198:Generated_Source\PSoC4/CyLib.c ****                 #else
1199:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1200:Generated_Source\PSoC4/CyLib.c ****                 #endif
1201:Generated_Source\PSoC4/CyLib.c ****                 
1202:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1203:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1204:Generated_Source\PSoC4/CyLib.c ****                 {
1205:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1206:Generated_Source\PSoC4/CyLib.c ****                 }
1207:Generated_Source\PSoC4/CyLib.c ****                 
1208:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1210:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1211:Generated_Source\PSoC4/CyLib.c ****                                             
1212:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1213:Generated_Source\PSoC4/CyLib.c ****                 {
1214:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1215:Generated_Source\PSoC4/CyLib.c ****                 }
1216:Generated_Source\PSoC4/CyLib.c **** 
1217:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1218:Generated_Source\PSoC4/CyLib.c ****                 
1219:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1220:Generated_Source\PSoC4/CyLib.c ****                 
1221:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1222:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 31


1223:Generated_Source\PSoC4/CyLib.c ****                 
1224:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1225:Generated_Source\PSoC4/CyLib.c ****                 {
1226:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1227:Generated_Source\PSoC4/CyLib.c ****                 }
1228:Generated_Source\PSoC4/CyLib.c ****                 
1229:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1230:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1231:Generated_Source\PSoC4/CyLib.c ****                 
1232:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1233:Generated_Source\PSoC4/CyLib.c ****                 {
1234:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1235:Generated_Source\PSoC4/CyLib.c ****                 }
1236:Generated_Source\PSoC4/CyLib.c ****                 
1237:Generated_Source\PSoC4/CyLib.c ****             }
1238:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1239:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1240:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1241:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1242:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1243:Generated_Source\PSoC4/CyLib.c **** 
1244:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1245:Generated_Source\PSoC4/CyLib.c ****         {
1246:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1247:Generated_Source\PSoC4/CyLib.c **** 
1248:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1249:Generated_Source\PSoC4/CyLib.c ****             {
1250:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1251:Generated_Source\PSoC4/CyLib.c **** 
1252:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1253:Generated_Source\PSoC4/CyLib.c ****                 {
1254:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1255:Generated_Source\PSoC4/CyLib.c ****                     break;
1256:Generated_Source\PSoC4/CyLib.c ****                 }
1257:Generated_Source\PSoC4/CyLib.c ****             }
1258:Generated_Source\PSoC4/CyLib.c **** 
1259:Generated_Source\PSoC4/CyLib.c ****         }
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1262:Generated_Source\PSoC4/CyLib.c ****     }
1263:Generated_Source\PSoC4/CyLib.c **** 
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1266:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1267:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1268:Generated_Source\PSoC4/CyLib.c ****     *
1269:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1270:Generated_Source\PSoC4/CyLib.c ****     *
1271:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1272:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1273:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1274:Generated_Source\PSoC4/CyLib.c ****     *
1275:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1276:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1277:Generated_Source\PSoC4/CyLib.c ****     {
 479              		.loc 1 1277 0
 480              		.cfi_startproc
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 32


 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		@ link register save eliminated.
1278:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1279:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1280:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1283:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1284:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1285:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1286:Generated_Source\PSoC4/CyLib.c ****         #else
1287:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
 484              		.loc 1 1287 0
 485 0000 024A     		ldr	r2, .L36
 486 0002 1168     		ldr	r1, [r2]
 487 0004 024B     		ldr	r3, .L36+4
 488 0006 0B40     		ands	r3, r1
 489 0008 1360     		str	r3, [r2]
1288:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1289:Generated_Source\PSoC4/CyLib.c ****     }
 490              		.loc 1 1289 0
 491              		@ sp needed
 492 000a 7047     		bx	lr
 493              	.L37:
 494              		.align	2
 495              	.L36:
 496 000c 08002F40 		.word	1076822024
 497 0010 FEFFFF7F 		.word	2147483646
 498              		.cfi_endproc
 499              	.LFE13:
 500              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 501              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 502              		.align	2
 503              		.global	CySysClkEcoReadStatus
 504              		.code	16
 505              		.thumb_func
 506              		.type	CySysClkEcoReadStatus, %function
 507              	CySysClkEcoReadStatus:
 508              	.LFB14:
1290:Generated_Source\PSoC4/CyLib.c **** 
1291:Generated_Source\PSoC4/CyLib.c **** 
1292:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1293:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1294:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1295:Generated_Source\PSoC4/CyLib.c ****     *
1296:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1297:Generated_Source\PSoC4/CyLib.c ****     *
1298:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1299:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1300:Generated_Source\PSoC4/CyLib.c ****     *
1301:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1302:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1303:Generated_Source\PSoC4/CyLib.c ****     *
1304:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1305:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1306:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 33


1307:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1308:Generated_Source\PSoC4/CyLib.c ****     *
1309:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1310:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1311:Generated_Source\PSoC4/CyLib.c ****     {
 509              		.loc 1 1311 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              		@ link register save eliminated.
1312:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1313:Generated_Source\PSoC4/CyLib.c **** 
1314:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1315:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1316:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1317:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1318:Generated_Source\PSoC4/CyLib.c **** 
1319:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1320:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1321:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1322:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1323:Generated_Source\PSoC4/CyLib.c ****         #else
1324:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
 514              		.loc 1 1324 0
 515 0000 034B     		ldr	r3, .L39
 516 0002 1B68     		ldr	r3, [r3]
 517 0004 0120     		movs	r0, #1
 518 0006 1840     		ands	r0, r3
 519 0008 4342     		rsbs	r3, r0, #0
 520 000a 5841     		adcs	r0, r0, r3
 521 000c C0B2     		uxtb	r0, r0
 522              	.LVL33:
1325:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1326:Generated_Source\PSoC4/CyLib.c **** 
1327:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1328:Generated_Source\PSoC4/CyLib.c ****     }
 523              		.loc 1 1328 0
 524              		@ sp needed
 525 000e 7047     		bx	lr
 526              	.L40:
 527              		.align	2
 528              	.L39:
 529 0010 0C002F40 		.word	1076822028
 530              		.cfi_endproc
 531              	.LFE14:
 532              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 533              		.section	.text.CySysClkConfigureEcoTrim,"ax",%progbits
 534              		.align	2
 535              		.global	CySysClkConfigureEcoTrim
 536              		.code	16
 537              		.thumb_func
 538              		.type	CySysClkConfigureEcoTrim, %function
 539              	CySysClkConfigureEcoTrim:
 540              	.LFB15:
1329:Generated_Source\PSoC4/CyLib.c **** 
1330:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1331:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 34


1332:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1333:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1334:Generated_Source\PSoC4/CyLib.c ****         *
1335:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1336:Generated_Source\PSoC4/CyLib.c ****         *
1337:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1338:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1339:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1340:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1341:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1342:Generated_Source\PSoC4/CyLib.c ****         *
1343:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1344:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1345:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1346:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1347:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1348:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1349:Generated_Source\PSoC4/CyLib.c ****         *
1350:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1351:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1352:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1353:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1354:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1355:Generated_Source\PSoC4/CyLib.c ****         *
1356:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1357:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1358:Generated_Source\PSoC4/CyLib.c ****         {
1359:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1362:Generated_Source\PSoC4/CyLib.c ****             {
1363:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1364:Generated_Source\PSoC4/CyLib.c **** 
1365:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1366:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1367:Generated_Source\PSoC4/CyLib.c **** 
1368:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1369:Generated_Source\PSoC4/CyLib.c ****             }
1370:Generated_Source\PSoC4/CyLib.c ****             else
1371:Generated_Source\PSoC4/CyLib.c ****             {
1372:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1373:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1374:Generated_Source\PSoC4/CyLib.c ****             }
1375:Generated_Source\PSoC4/CyLib.c ****         }
1376:Generated_Source\PSoC4/CyLib.c **** 
1377:Generated_Source\PSoC4/CyLib.c ****     #else
1378:Generated_Source\PSoC4/CyLib.c **** 
1379:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1380:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1381:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1382:Generated_Source\PSoC4/CyLib.c ****         *
1383:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1384:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1387:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1388:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 35


1389:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1390:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1391:Generated_Source\PSoC4/CyLib.c ****         *
1392:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1393:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1394:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1395:Generated_Source\PSoC4/CyLib.c ****         *
1396:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1397:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1398:Generated_Source\PSoC4/CyLib.c ****         *
1399:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1400:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1401:Generated_Source\PSoC4/CyLib.c ****         *
1402:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1403:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1404:Generated_Source\PSoC4/CyLib.c ****         *
1405:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1406:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1409:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1410:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1411:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1412:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1415:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1416:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1417:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1418:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1419:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1420:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1421:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1423:Generated_Source\PSoC4/CyLib.c ****         *
1424:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1426:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1427:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1428:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1429:Generated_Source\PSoC4/CyLib.c ****         *
1430:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1431:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1435:Generated_Source\PSoC4/CyLib.c ****         *
1436:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1437:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1438:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1439:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1440:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1441:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1442:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1443:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1444:Generated_Source\PSoC4/CyLib.c ****         *
1445:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 36


1446:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1447:Generated_Source\PSoC4/CyLib.c ****         {
 541              		.loc 1 1447 0
 542              		.cfi_startproc
 543              		@ args = 4, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              	.LVL34:
 546 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 547              		.cfi_def_cfa_offset 20
 548              		.cfi_offset 4, -20
 549              		.cfi_offset 5, -16
 550              		.cfi_offset 6, -12
 551              		.cfi_offset 7, -8
 552              		.cfi_offset 14, -4
 553 0002 4746     		mov	r7, r8
 554 0004 80B4     		push	{r7}
 555              		.cfi_def_cfa_offset 24
 556              		.cfi_offset 8, -24
 557 0006 0700     		movs	r7, r0
 558 0008 0D00     		movs	r5, r1
 559 000a 1600     		movs	r6, r2
 560 000c 9846     		mov	r8, r3
1448:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1449:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1450:Generated_Source\PSoC4/CyLib.c **** 
1451:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 561              		.loc 1 1451 0
 562 000e FFF7FEFF 		bl	CyEnterCriticalSection
 563              	.LVL35:
1452:Generated_Source\PSoC4/CyLib.c **** 
1453:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
 564              		.loc 1 1453 0
 565 0012 114A     		ldr	r2, .L42
 566 0014 1368     		ldr	r3, [r2]
 567 0016 1F21     		movs	r1, #31
 568 0018 8B43     		bics	r3, r1
 569              	.LVL36:
1454:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
 570              		.loc 1 1454 0
 571 001a 0324     		movs	r4, #3
 572 001c 2740     		ands	r7, r4
 573              	.LVL37:
 574 001e 1F43     		orrs	r7, r3
 575              	.LVL38:
1455:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
 576              		.loc 1 1455 0
 577 0020 A900     		lsls	r1, r5, #2
 578 0022 1C25     		movs	r5, #28
 579              	.LVL39:
 580 0024 0D40     		ands	r5, r1
 581 0026 3D43     		orrs	r5, r7
 582              	.LVL40:
1456:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
 583              		.loc 1 1456 0
 584 0028 1560     		str	r5, [r2]
1457:Generated_Source\PSoC4/CyLib.c **** 
1458:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 37


 585              		.loc 1 1458 0
 586 002a 0C4A     		ldr	r2, .L42+4
 587 002c 1368     		ldr	r3, [r2]
 588 002e 3F21     		movs	r1, #63
 589 0030 8B43     		bics	r3, r1
 590              	.LVL41:
1459:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1460:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1461:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 591              		.loc 1 1461 0
 592 0032 2640     		ands	r6, r4
 593              	.LVL42:
 594 0034 3343     		orrs	r3, r6
 595              	.LVL43:
1462:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 596              		.loc 1 1462 0
 597 0036 4146     		mov	r1, r8
 598 0038 8900     		lsls	r1, r1, #2
 599 003a 0934     		adds	r4, r4, #9
 600 003c 0C40     		ands	r4, r1
 601 003e 1C43     		orrs	r4, r3
 602              	.LVL44:
1463:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 603              		.loc 1 1463 0
 604 0040 069B     		ldr	r3, [sp, #24]
 605 0042 1901     		lsls	r1, r3, #4
 606 0044 3023     		movs	r3, #48
 607 0046 1940     		ands	r1, r3
 608 0048 2300     		movs	r3, r4
 609 004a 0B43     		orrs	r3, r1
 610              	.LVL45:
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
 611              		.loc 1 1465 0
 612 004c 1360     		str	r3, [r2]
1466:Generated_Source\PSoC4/CyLib.c **** 
1467:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 613              		.loc 1 1467 0
 614 004e FFF7FEFF 		bl	CyExitCriticalSection
 615              	.LVL46:
1468:Generated_Source\PSoC4/CyLib.c ****         }
 616              		.loc 1 1468 0
 617              		@ sp needed
 618              	.LVL47:
 619 0052 04BC     		pop	{r2}
 620 0054 9046     		mov	r8, r2
 621 0056 F0BD     		pop	{r4, r5, r6, r7, pc}
 622              	.L43:
 623              		.align	2
 624              	.L42:
 625 0058 00FF2F40 		.word	1076887296
 626 005c 04FF2F40 		.word	1076887300
 627              		.cfi_endproc
 628              	.LFE15:
 629              		.size	CySysClkConfigureEcoTrim, .-CySysClkConfigureEcoTrim
 630              		.global	__aeabi_uidiv
 631              		.section	.text.CySysClkConfigureEcoDrive,"ax",%progbits
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 38


 632              		.align	2
 633              		.global	CySysClkConfigureEcoDrive
 634              		.code	16
 635              		.thumb_func
 636              		.type	CySysClkConfigureEcoDrive, %function
 637              	CySysClkConfigureEcoDrive:
 638              	.LFB16:
1469:Generated_Source\PSoC4/CyLib.c **** 
1470:Generated_Source\PSoC4/CyLib.c **** 
1471:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1472:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1473:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1474:Generated_Source\PSoC4/CyLib.c ****         *
1475:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1476:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1477:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1478:Generated_Source\PSoC4/CyLib.c ****         *
1479:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1480:Generated_Source\PSoC4/CyLib.c ****         *
1481:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1482:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1483:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1484:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1485:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1486:Generated_Source\PSoC4/CyLib.c ****         *
1487:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1488:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1489:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1490:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1491:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1492:Generated_Source\PSoC4/CyLib.c ****         *
1493:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1494:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1495:Generated_Source\PSoC4/CyLib.c ****         *
1496:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1497:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1498:Generated_Source\PSoC4/CyLib.c ****         {
 639              		.loc 1 1498 0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 8
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              	.LVL48:
 644 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 645              		.cfi_def_cfa_offset 20
 646              		.cfi_offset 4, -20
 647              		.cfi_offset 5, -16
 648              		.cfi_offset 6, -12
 649              		.cfi_offset 7, -8
 650              		.cfi_offset 14, -4
 651 0002 5746     		mov	r7, r10
 652 0004 80B4     		push	{r7}
 653              		.cfi_def_cfa_offset 24
 654              		.cfi_offset 10, -24
 655 0006 84B0     		sub	sp, sp, #16
 656              		.cfi_def_cfa_offset 40
 657 0008 0600     		movs	r6, r0
 658 000a 0C00     		movs	r4, r1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 39


 659 000c 1500     		movs	r5, r2
 660 000e 1F00     		movs	r7, r3
 661              	.LVL49:
1499:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1500:Generated_Source\PSoC4/CyLib.c **** 
1501:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1502:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1503:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1504:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1505:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1506:Generated_Source\PSoC4/CyLib.c **** 
1507:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1508:Generated_Source\PSoC4/CyLib.c **** 
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
 662              		.loc 1 1510 0
 663 0010 F423     		movs	r3, #244
 664              	.LVL50:
 665 0012 FF33     		adds	r3, r3, #255
 666 0014 9F42     		cmp	r7, r3
 667 0016 00D8     		bhi	.LCB553
 668 0018 86E0     		b	.L51	@long jump
 669              	.LCB553:
 670              		.loc 1 1510 0 is_stmt 0 discriminator 1
 671 001a 484B     		ldr	r3, .L67
 672 001c 9842     		cmp	r0, r3
 673 001e 00D8     		bhi	.LCB556
 674 0020 84E0     		b	.L52	@long jump
 675              	.LCB556:
1511:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
 676              		.loc 1 1511 0 is_stmt 1
 677 0022 474B     		ldr	r3, .L67+4
 678 0024 9842     		cmp	r0, r3
 679 0026 00D9     		bls	.LCB559
 680 0028 82E0     		b	.L53	@long jump
 681              	.LCB559:
1512:Generated_Source\PSoC4/CyLib.c ****             {
1513:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1514:Generated_Source\PSoC4/CyLib.c ****             }
1515:Generated_Source\PSoC4/CyLib.c ****             else
1516:Generated_Source\PSoC4/CyLib.c ****             {
1517:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1518:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1519:Generated_Source\PSoC4/CyLib.c **** 
1520:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
 682              		.loc 1 1520 0 discriminator 4
 683 002a 464B     		ldr	r3, .L67+8
 684 002c 9F42     		cmp	r7, r3
 685 002e 14D9     		bls	.L54
1521:Generated_Source\PSoC4/CyLib.c ****                 {
1522:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1523:Generated_Source\PSoC4/CyLib.c ****                 }
1524:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
 686              		.loc 1 1524 0
 687 0030 454B     		ldr	r3, .L67+12
 688 0032 9F42     		cmp	r7, r3
 689 0034 14D9     		bls	.L55
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 40


1525:Generated_Source\PSoC4/CyLib.c ****                 {
1526:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1527:Generated_Source\PSoC4/CyLib.c ****                 }
1528:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
 690              		.loc 1 1528 0
 691 0036 454B     		ldr	r3, .L67+16
 692 0038 9F42     		cmp	r7, r3
 693 003a 14D9     		bls	.L56
1529:Generated_Source\PSoC4/CyLib.c ****                 {
1530:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1531:Generated_Source\PSoC4/CyLib.c ****                 }
1532:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
 694              		.loc 1 1532 0
 695 003c 444B     		ldr	r3, .L67+20
 696 003e 9F42     		cmp	r7, r3
 697 0040 14D9     		bls	.L57
1533:Generated_Source\PSoC4/CyLib.c ****                 {
1534:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1535:Generated_Source\PSoC4/CyLib.c ****                 }
1536:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
 698              		.loc 1 1536 0
 699 0042 7D33     		adds	r3, r3, #125
 700 0044 9F42     		cmp	r7, r3
 701 0046 14D9     		bls	.L58
1537:Generated_Source\PSoC4/CyLib.c ****                 {
1538:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1539:Generated_Source\PSoC4/CyLib.c ****                 }
1540:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
 702              		.loc 1 1540 0
 703 0048 424B     		ldr	r3, .L67+24
 704 004a 9F42     		cmp	r7, r3
 705 004c 14D9     		bls	.L59
1541:Generated_Source\PSoC4/CyLib.c ****                 {
1542:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1543:Generated_Source\PSoC4/CyLib.c ****                 }
1544:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
 706              		.loc 1 1544 0
 707 004e 424B     		ldr	r3, .L67+28
 708 0050 9F42     		cmp	r7, r3
 709 0052 14D8     		bhi	.L60
1545:Generated_Source\PSoC4/CyLib.c ****                 {
1546:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
 710              		.loc 1 1546 0
 711 0054 0623     		movs	r3, #6
 712 0056 0393     		str	r3, [sp, #12]
 713 0058 13E0     		b	.L46
 714              	.L54:
1522:Generated_Source\PSoC4/CyLib.c ****                 }
 715              		.loc 1 1522 0
 716 005a 0023     		movs	r3, #0
 717 005c 0393     		str	r3, [sp, #12]
 718 005e 10E0     		b	.L46
 719              	.L55:
1526:Generated_Source\PSoC4/CyLib.c ****                 }
 720              		.loc 1 1526 0
 721 0060 0123     		movs	r3, #1
 722 0062 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 41


 723 0064 0DE0     		b	.L46
 724              	.L56:
1530:Generated_Source\PSoC4/CyLib.c ****                 }
 725              		.loc 1 1530 0
 726 0066 0223     		movs	r3, #2
 727 0068 0393     		str	r3, [sp, #12]
 728 006a 0AE0     		b	.L46
 729              	.L57:
1534:Generated_Source\PSoC4/CyLib.c ****                 }
 730              		.loc 1 1534 0
 731 006c 0323     		movs	r3, #3
 732 006e 0393     		str	r3, [sp, #12]
 733 0070 07E0     		b	.L46
 734              	.L58:
1538:Generated_Source\PSoC4/CyLib.c ****                 }
 735              		.loc 1 1538 0
 736 0072 0423     		movs	r3, #4
 737 0074 0393     		str	r3, [sp, #12]
 738 0076 04E0     		b	.L46
 739              	.L59:
1542:Generated_Source\PSoC4/CyLib.c ****                 }
 740              		.loc 1 1542 0
 741 0078 0523     		movs	r3, #5
 742 007a 0393     		str	r3, [sp, #12]
 743 007c 01E0     		b	.L46
 744              	.L60:
1547:Generated_Source\PSoC4/CyLib.c ****                 }
1548:Generated_Source\PSoC4/CyLib.c ****                 else
1549:Generated_Source\PSoC4/CyLib.c ****                 {
1550:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
 745              		.loc 1 1550 0
 746 007e 0723     		movs	r3, #7
 747 0080 0393     		str	r3, [sp, #12]
 748              	.L46:
 749              	.LVL51:
1551:Generated_Source\PSoC4/CyLib.c ****                 }
1552:Generated_Source\PSoC4/CyLib.c **** 
1553:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1554:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
 750              		.loc 1 1554 0
 751 0082 364B     		ldr	r3, .L67+32
 752 0084 9F42     		cmp	r7, r3
 753 0086 06D8     		bhi	.L61
 754              		.loc 1 1554 0 is_stmt 0 discriminator 1
 755 0088 C821     		movs	r1, #200
 756              	.LVL52:
 757 008a 3800     		movs	r0, r7
 758              	.LVL53:
 759 008c FFF7FEFF 		bl	__aeabi_uidiv
 760              	.LVL54:
 761 0090 831E     		subs	r3, r0, #2
 762 0092 0293     		str	r3, [sp, #8]
 763 0094 01E0     		b	.L47
 764              	.LVL55:
 765              	.L61:
 766              		.loc 1 1554 0
 767 0096 0323     		movs	r3, #3
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 42


 768 0098 0293     		str	r3, [sp, #8]
 769              	.LVL56:
 770              	.L47:
1555:Generated_Source\PSoC4/CyLib.c **** 
1556:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1557:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
 771              		.loc 1 1557 0 is_stmt 1 discriminator 4
 772 009a 7443     		muls	r4, r6
 773              	.LVL57:
 774 009c A000     		lsls	r0, r4, #2
 775 009e 0019     		adds	r0, r0, r4
 776 00a0 0301     		lsls	r3, r0, #4
 777 00a2 181B     		subs	r0, r3, r4
 778 00a4 FA21     		movs	r1, #250
 779 00a6 8900     		lsls	r1, r1, #2
 780 00a8 FFF7FEFF 		bl	__aeabi_uidiv
 781              	.LVL58:
 782 00ac 8246     		mov	r10, r0
 783 00ae 2800     		movs	r0, r5
 784 00b0 6043     		muls	r0, r4
 785 00b2 FA21     		movs	r1, #250
 786 00b4 8900     		lsls	r1, r1, #2
 787 00b6 FFF7FEFF 		bl	__aeabi_uidiv
 788              	.LVL59:
 789 00ba 5346     		mov	r3, r10
 790 00bc 5843     		muls	r0, r3
 791 00be 2849     		ldr	r1, .L67+36
 792 00c0 FFF7FEFF 		bl	__aeabi_uidiv
 793              	.LVL60:
1558:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
 794              		.loc 1 1558 0 discriminator 4
 795 00c4 0328     		cmp	r0, #3
 796 00c6 07D8     		bhi	.L62
1559:Generated_Source\PSoC4/CyLib.c ****                 {
1560:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1561:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1562:Generated_Source\PSoC4/CyLib.c ****                 }
1563:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
 797              		.loc 1 1563 0
 798 00c8 0128     		cmp	r0, #1
 799 00ca 08D8     		bhi	.L63
1564:Generated_Source\PSoC4/CyLib.c ****                 {
1565:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1566:Generated_Source\PSoC4/CyLib.c ****                 }
1567:Generated_Source\PSoC4/CyLib.c ****                 else
1568:Generated_Source\PSoC4/CyLib.c ****                 {
1569:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
 800              		.loc 1 1569 0
 801 00cc 0138     		subs	r0, r0, #1
 802              	.LVL61:
 803 00ce 431E     		subs	r3, r0, #1
 804 00d0 9841     		sbcs	r0, r0, r3
 805              	.LVL62:
 806 00d2 C0B2     		uxtb	r0, r0
 807              	.LVL63:
1499:Generated_Source\PSoC4/CyLib.c **** 
 808              		.loc 1 1499 0
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 43


 809 00d4 0024     		movs	r4, #0
 810 00d6 03E0     		b	.L48
 811              	.LVL64:
 812              	.L62:
1561:Generated_Source\PSoC4/CyLib.c ****                 }
 813              		.loc 1 1561 0
 814 00d8 0020     		movs	r0, #0
 815              	.LVL65:
1560:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
 816              		.loc 1 1560 0
 817 00da 0124     		movs	r4, #1
 818 00dc 00E0     		b	.L48
 819              	.LVL66:
 820              	.L63:
1499:Generated_Source\PSoC4/CyLib.c **** 
 821              		.loc 1 1499 0
 822 00de 0024     		movs	r4, #0
 823              	.LVL67:
 824              	.L48:
1570:Generated_Source\PSoC4/CyLib.c ****                 }
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1573:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
 825              		.loc 1 1573 0
 826 00e0 204B     		ldr	r3, .L67+40
 827 00e2 9E42     		cmp	r6, r3
 828 00e4 07D8     		bhi	.L64
1574:Generated_Source\PSoC4/CyLib.c ****                 {
1575:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1576:Generated_Source\PSoC4/CyLib.c ****                 }
1577:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
 829              		.loc 1 1577 0
 830 00e6 204B     		ldr	r3, .L67+44
 831 00e8 9E42     		cmp	r6, r3
 832 00ea 06D8     		bhi	.L65
1578:Generated_Source\PSoC4/CyLib.c ****                 {
1579:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1580:Generated_Source\PSoC4/CyLib.c ****                 }
1581:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
 833              		.loc 1 1581 0
 834 00ec 1F4B     		ldr	r3, .L67+48
 835 00ee 9E42     		cmp	r6, r3
 836 00f0 05D9     		bls	.L66
1582:Generated_Source\PSoC4/CyLib.c ****                 {
1583:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
 837              		.loc 1 1583 0
 838 00f2 0222     		movs	r2, #2
 839 00f4 04E0     		b	.L49
 840              	.L64:
1575:Generated_Source\PSoC4/CyLib.c ****                 }
 841              		.loc 1 1575 0
 842 00f6 0022     		movs	r2, #0
 843 00f8 02E0     		b	.L49
 844              	.L65:
1579:Generated_Source\PSoC4/CyLib.c ****                 }
 845              		.loc 1 1579 0
 846 00fa 0122     		movs	r2, #1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 44


 847 00fc 00E0     		b	.L49
 848              	.L66:
1584:Generated_Source\PSoC4/CyLib.c ****                 }
1585:Generated_Source\PSoC4/CyLib.c ****                 else
1586:Generated_Source\PSoC4/CyLib.c ****                 {
1587:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
 849              		.loc 1 1587 0
 850 00fe 0322     		movs	r2, #3
 851              	.L49:
 852              	.LVL68:
1588:Generated_Source\PSoC4/CyLib.c ****                 }
1589:Generated_Source\PSoC4/CyLib.c **** 
1590:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1591:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
 853              		.loc 1 1593 0
 854 0100 0090     		str	r0, [sp]
 855 0102 1300     		movs	r3, r2
 856 0104 0399     		ldr	r1, [sp, #12]
 857 0106 0298     		ldr	r0, [sp, #8]
 858              	.LVL69:
 859 0108 FFF7FEFF 		bl	CySysClkConfigureEcoTrim
 860              	.LVL70:
1594:Generated_Source\PSoC4/CyLib.c **** 
1595:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1596:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
 861              		.loc 1 1596 0
 862 010c 012F     		cmp	r7, #1
 863 010e 05D8     		bhi	.L50
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1599:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
 864              		.loc 1 1599 0
 865 0110 174A     		ldr	r2, .L67+52
 866 0112 1168     		ldr	r1, [r2]
 867 0114 0223     		movs	r3, #2
 868 0116 0B43     		orrs	r3, r1
 869 0118 1360     		str	r3, [r2]
 870              	.LVL71:
 871 011a 0AE0     		b	.L45
 872              	.LVL72:
 873              	.L50:
1600:Generated_Source\PSoC4/CyLib.c ****                 }
1601:Generated_Source\PSoC4/CyLib.c ****                 else
1602:Generated_Source\PSoC4/CyLib.c ****                 {
1603:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1604:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1605:Generated_Source\PSoC4/CyLib.c ****                     */
1606:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
 874              		.loc 1 1606 0
 875 011c 144A     		ldr	r2, .L67+52
 876 011e 1368     		ldr	r3, [r2]
 877 0120 0221     		movs	r1, #2
 878 0122 8B43     		bics	r3, r1
 879 0124 1360     		str	r3, [r2]
 880              	.LVL73:
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 45


 881 0126 04E0     		b	.L45
 882              	.LVL74:
 883              	.L51:
1513:Generated_Source\PSoC4/CyLib.c ****             }
 884              		.loc 1 1513 0
 885 0128 0124     		movs	r4, #1
 886 012a 02E0     		b	.L45
 887              	.L52:
 888 012c 0124     		movs	r4, #1
 889 012e 00E0     		b	.L45
 890              	.L53:
 891 0130 0124     		movs	r4, #1
 892              	.LVL75:
 893              	.L45:
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****             }
1609:Generated_Source\PSoC4/CyLib.c **** 
1610:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1611:Generated_Source\PSoC4/CyLib.c ****         }
 894              		.loc 1 1611 0
 895 0132 2000     		movs	r0, r4
 896 0134 04B0     		add	sp, sp, #16
 897              		@ sp needed
 898              	.LVL76:
 899              	.LVL77:
 900              	.LVL78:
 901              	.LVL79:
 902 0136 04BC     		pop	{r2}
 903 0138 9246     		mov	r10, r2
 904 013a F0BD     		pop	{r4, r5, r6, r7, pc}
 905              	.L68:
 906              		.align	2
 907              	.L67:
 908 013c 9F0F0000 		.word	3999
 909 0140 35820000 		.word	33333
 910 0144 57020000 		.word	599
 911 0148 BB020000 		.word	699
 912 014c 1F030000 		.word	799
 913 0150 83030000 		.word	899
 914 0154 7D040000 		.word	1149
 915 0158 FA040000 		.word	1274
 916 015c AF040000 		.word	1199
 917 0160 8074D21A 		.word	450000000
 918 0164 30750000 		.word	30000
 919 0168 C05D0000 		.word	24000
 920 016c 68420000 		.word	17000
 921 0170 08002F40 		.word	1076822024
 922              		.cfi_endproc
 923              	.LFE16:
 924              		.size	CySysClkConfigureEcoDrive, .-CySysClkConfigureEcoDrive
 925              		.section	.text.CySysClkPllStop,"ax",%progbits
 926              		.align	2
 927              		.global	CySysClkPllStop
 928              		.code	16
 929              		.thumb_func
 930              		.type	CySysClkPllStop, %function
 931              	CySysClkPllStop:
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 46


 932              	.LFB19:
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c **** 
1618:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1619:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1620:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1621:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1622:Generated_Source\PSoC4/CyLib.c ****     *
1623:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1624:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1625:Generated_Source\PSoC4/CyLib.c ****     *
1626:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1627:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1628:Generated_Source\PSoC4/CyLib.c ****     *
1629:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1630:Generated_Source\PSoC4/CyLib.c ****     *
1631:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1632:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1633:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1636:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1637:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1638:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1641:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1642:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1643:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1644:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1645:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1646:Generated_Source\PSoC4/CyLib.c ****     *
1647:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1648:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1649:Generated_Source\PSoC4/CyLib.c ****     {
1650:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1651:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1652:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1653:Generated_Source\PSoC4/CyLib.c **** 
1654:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1655:Generated_Source\PSoC4/CyLib.c ****         {
1656:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1659:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1660:Generated_Source\PSoC4/CyLib.c **** 
1661:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1662:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1663:Generated_Source\PSoC4/CyLib.c **** 
1664:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1665:Generated_Source\PSoC4/CyLib.c **** 
1666:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1667:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 47


1668:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1669:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1670:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1671:Generated_Source\PSoC4/CyLib.c **** 
1672:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1673:Generated_Source\PSoC4/CyLib.c ****             {
1674:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1675:Generated_Source\PSoC4/CyLib.c **** 
1676:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1677:Generated_Source\PSoC4/CyLib.c ****                 {
1678:Generated_Source\PSoC4/CyLib.c **** 
1679:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1680:Generated_Source\PSoC4/CyLib.c ****                     {
1681:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1682:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1683:Generated_Source\PSoC4/CyLib.c ****                         break;
1684:Generated_Source\PSoC4/CyLib.c ****                     }
1685:Generated_Source\PSoC4/CyLib.c **** 
1686:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1687:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1688:Generated_Source\PSoC4/CyLib.c ****                 }
1689:Generated_Source\PSoC4/CyLib.c ****             }
1690:Generated_Source\PSoC4/CyLib.c ****         }
1691:Generated_Source\PSoC4/CyLib.c ****         else
1692:Generated_Source\PSoC4/CyLib.c ****         {
1693:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1694:Generated_Source\PSoC4/CyLib.c ****         }
1695:Generated_Source\PSoC4/CyLib.c **** 
1696:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1697:Generated_Source\PSoC4/CyLib.c ****     }
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c **** 
1700:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1701:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1702:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1703:Generated_Source\PSoC4/CyLib.c ****     *
1704:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1705:Generated_Source\PSoC4/CyLib.c ****     *
1706:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1707:Generated_Source\PSoC4/CyLib.c ****     *
1708:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1709:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1710:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1713:Generated_Source\PSoC4/CyLib.c ****     *
1714:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1715:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1716:Generated_Source\PSoC4/CyLib.c ****     {
1717:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1718:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1719:Generated_Source\PSoC4/CyLib.c **** 
1720:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1723:Generated_Source\PSoC4/CyLib.c **** 
1724:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 48


1725:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1726:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1727:Generated_Source\PSoC4/CyLib.c ****         {
1728:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1729:Generated_Source\PSoC4/CyLib.c ****         }
1730:Generated_Source\PSoC4/CyLib.c **** 
1731:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1732:Generated_Source\PSoC4/CyLib.c **** 
1733:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1734:Generated_Source\PSoC4/CyLib.c ****     }
1735:Generated_Source\PSoC4/CyLib.c **** 
1736:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1737:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1738:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1739:Generated_Source\PSoC4/CyLib.c ****     *
1740:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1741:Generated_Source\PSoC4/CyLib.c ****     *
1742:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1743:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1744:Generated_Source\PSoC4/CyLib.c ****     *
1745:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1748:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1749:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1750:Generated_Source\PSoC4/CyLib.c ****     *
1751:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1752:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1753:Generated_Source\PSoC4/CyLib.c ****     {
 933              		.loc 1 1753 0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937              	.LVL80:
 938 0000 70B5     		push	{r4, r5, r6, lr}
 939              		.cfi_def_cfa_offset 16
 940              		.cfi_offset 4, -16
 941              		.cfi_offset 5, -12
 942              		.cfi_offset 6, -8
 943              		.cfi_offset 14, -4
 944 0002 041E     		subs	r4, r0, #0
1754:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1755:Generated_Source\PSoC4/CyLib.c **** 
1756:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
 945              		.loc 1 1756 0
 946 0004 0CD1     		bne	.L69
1757:Generated_Source\PSoC4/CyLib.c ****         {
1758:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 947              		.loc 1 1758 0
 948 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 949              	.LVL81:
1759:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
 950              		.loc 1 1759 0
 951 000a 064A     		ldr	r2, .L71
 952 000c 6100     		lsls	r1, r4, #1
 953 000e 0D19     		adds	r5, r1, r4
 954 0010 AB00     		lsls	r3, r5, #2
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 49


 955 0012 9B58     		ldr	r3, [r3, r2]
 956 0014 9B00     		lsls	r3, r3, #2
 957 0016 9B08     		lsrs	r3, r3, #2
 958 0018 A900     		lsls	r1, r5, #2
 959 001a 8B50     		str	r3, [r1, r2]
1760:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 960              		.loc 1 1760 0
 961 001c FFF7FEFF 		bl	CyExitCriticalSection
 962              	.LVL82:
 963              	.L69:
1761:Generated_Source\PSoC4/CyLib.c ****         }
1762:Generated_Source\PSoC4/CyLib.c ****     }
 964              		.loc 1 1762 0
 965              		@ sp needed
 966              	.LVL83:
 967 0020 70BD     		pop	{r4, r5, r6, pc}
 968              	.L72:
 969 0022 C046     		.align	2
 970              	.L71:
 971 0024 14002F40 		.word	1076822036
 972              		.cfi_endproc
 973              	.LFE19:
 974              		.size	CySysClkPllStop, .-CySysClkPllStop
 975              		.section	.text.CySysClkPllSetBypassMode,"ax",%progbits
 976              		.align	2
 977              		.global	CySysClkPllSetBypassMode
 978              		.code	16
 979              		.thumb_func
 980              		.type	CySysClkPllSetBypassMode, %function
 981              	CySysClkPllSetBypassMode:
 982              	.LFB21:
1763:Generated_Source\PSoC4/CyLib.c **** 
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1766:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1767:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1768:Generated_Source\PSoC4/CyLib.c ****     *
1769:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1770:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1771:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1772:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1773:Generated_Source\PSoC4/CyLib.c ****     *
1774:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1775:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1776:Generated_Source\PSoC4/CyLib.c ****     *
1777:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1778:Generated_Source\PSoC4/CyLib.c ****     *
1779:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1780:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1781:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1784:Generated_Source\PSoC4/CyLib.c ****     * divider.
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1787:Generated_Source\PSoC4/CyLib.c ****     *
1788:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 50


1789:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1790:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1791:Generated_Source\PSoC4/CyLib.c ****     *
1792:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1793:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1794:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1795:Generated_Source\PSoC4/CyLib.c ****     *
1796:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1797:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1798:Generated_Source\PSoC4/CyLib.c ****     {
1799:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1800:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1801:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1802:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1803:Generated_Source\PSoC4/CyLib.c **** 
1804:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1805:Generated_Source\PSoC4/CyLib.c **** 
1806:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1809:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1810:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1811:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1812:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1813:Generated_Source\PSoC4/CyLib.c ****         {
1814:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1815:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1816:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1817:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1818:Generated_Source\PSoC4/CyLib.c **** 
1819:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1820:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1821:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1822:Generated_Source\PSoC4/CyLib.c **** 
1823:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1824:Generated_Source\PSoC4/CyLib.c **** 
1825:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1826:Generated_Source\PSoC4/CyLib.c ****         }
1827:Generated_Source\PSoC4/CyLib.c **** 
1828:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1829:Generated_Source\PSoC4/CyLib.c **** 
1830:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1831:Generated_Source\PSoC4/CyLib.c ****     }
1832:Generated_Source\PSoC4/CyLib.c **** 
1833:Generated_Source\PSoC4/CyLib.c **** 
1834:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1835:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1836:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1837:Generated_Source\PSoC4/CyLib.c ****     *
1838:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1839:Generated_Source\PSoC4/CyLib.c ****     *
1840:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1841:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1842:Generated_Source\PSoC4/CyLib.c ****     *
1843:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1844:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1845:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 51


1846:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1847:Generated_Source\PSoC4/CyLib.c ****     *
1848:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1851:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1852:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1853:Generated_Source\PSoC4/CyLib.c ****     *
1854:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1855:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1856:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1857:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1858:Generated_Source\PSoC4/CyLib.c ****     *
1859:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1860:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1861:Generated_Source\PSoC4/CyLib.c ****     *
1862:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1865:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1866:Generated_Source\PSoC4/CyLib.c ****     {
 983              		.loc 1 1866 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987              	.LVL84:
 988 0000 70B5     		push	{r4, r5, r6, lr}
 989              		.cfi_def_cfa_offset 16
 990              		.cfi_offset 4, -16
 991              		.cfi_offset 5, -12
 992              		.cfi_offset 6, -8
 993              		.cfi_offset 14, -4
 994 0002 0400     		movs	r4, r0
 995 0004 0D00     		movs	r5, r1
1867:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1868:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1869:Generated_Source\PSoC4/CyLib.c **** 
1870:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 996              		.loc 1 1870 0
 997 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 998              	.LVL85:
1871:Generated_Source\PSoC4/CyLib.c **** 
1872:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
 999              		.loc 1 1872 0
 1000 000a 002C     		cmp	r4, #0
 1001 000c 0DD1     		bne	.L74
 1002              		.loc 1 1872 0 is_stmt 0 discriminator 1
 1003 000e 032D     		cmp	r5, #3
 1004 0010 0BD8     		bhi	.L74
1873:Generated_Source\PSoC4/CyLib.c ****         {
1874:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
 1005              		.loc 1 1874 0 is_stmt 1
 1006 0012 074A     		ldr	r2, .L75
 1007 0014 6100     		lsls	r1, r4, #1
 1008 0016 0E19     		adds	r6, r1, r4
 1009 0018 B300     		lsls	r3, r6, #2
 1010 001a 9E58     		ldr	r6, [r3, r2]
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 52


 1011 001c 054B     		ldr	r3, .L75+4
 1012 001e 3340     		ands	r3, r6
 1013              	.LVL86:
1875:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
 1014              		.loc 1 1875 0
 1015 0020 2D05     		lsls	r5, r5, #20
 1016              	.LVL87:
 1017 0022 1D43     		orrs	r5, r3
 1018              	.LVL88:
1876:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
 1019              		.loc 1 1876 0
 1020 0024 0C19     		adds	r4, r1, r4
 1021              	.LVL89:
 1022 0026 A300     		lsls	r3, r4, #2
 1023 0028 9D50     		str	r5, [r3, r2]
 1024              	.LVL90:
 1025              	.L74:
1877:Generated_Source\PSoC4/CyLib.c ****         }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 1026              		.loc 1 1879 0
 1027 002a FFF7FEFF 		bl	CyExitCriticalSection
 1028              	.LVL91:
1880:Generated_Source\PSoC4/CyLib.c ****     }
 1029              		.loc 1 1880 0
 1030              		@ sp needed
 1031 002e 70BD     		pop	{r4, r5, r6, pc}
 1032              	.L76:
 1033              		.align	2
 1034              	.L75:
 1035 0030 14002F40 		.word	1076822036
 1036 0034 FFFFCFFF 		.word	-3145729
 1037              		.cfi_endproc
 1038              	.LFE21:
 1039              		.size	CySysClkPllSetBypassMode, .-CySysClkPllSetBypassMode
 1040              		.section	.text.CySysClkPllGetUnlockStatus,"ax",%progbits
 1041              		.align	2
 1042              		.global	CySysClkPllGetUnlockStatus
 1043              		.code	16
 1044              		.thumb_func
 1045              		.type	CySysClkPllGetUnlockStatus, %function
 1046              	CySysClkPllGetUnlockStatus:
 1047              	.LFB24:
1881:Generated_Source\PSoC4/CyLib.c **** 
1882:Generated_Source\PSoC4/CyLib.c **** 
1883:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1884:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1885:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1886:Generated_Source\PSoC4/CyLib.c ****     *
1887:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1888:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1889:Generated_Source\PSoC4/CyLib.c ****     *
1890:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1891:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1892:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1893:Generated_Source\PSoC4/CyLib.c ****     *
1894:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 53


1895:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1898:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1899:Generated_Source\PSoC4/CyLib.c ****     {
1900:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1901:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1902:Generated_Source\PSoC4/CyLib.c **** 
1903:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1904:Generated_Source\PSoC4/CyLib.c **** 
1905:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1906:Generated_Source\PSoC4/CyLib.c **** 
1907:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1908:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1909:Generated_Source\PSoC4/CyLib.c **** 
1910:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1911:Generated_Source\PSoC4/CyLib.c **** 
1912:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1913:Generated_Source\PSoC4/CyLib.c ****     }
1914:Generated_Source\PSoC4/CyLib.c **** 
1915:Generated_Source\PSoC4/CyLib.c **** 
1916:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1917:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1918:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1921:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1922:Generated_Source\PSoC4/CyLib.c ****     *
1923:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1924:Generated_Source\PSoC4/CyLib.c ****     *
1925:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1926:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1927:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1928:Generated_Source\PSoC4/CyLib.c ****     *
1929:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1930:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1931:Generated_Source\PSoC4/CyLib.c ****     *
1932:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1933:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1934:Generated_Source\PSoC4/CyLib.c ****     {
1935:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1936:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1937:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1938:Generated_Source\PSoC4/CyLib.c **** 
1939:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1940:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1941:Generated_Source\PSoC4/CyLib.c **** 
1942:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1943:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1944:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1945:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1946:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1947:Generated_Source\PSoC4/CyLib.c ****             )
1948:Generated_Source\PSoC4/CyLib.c ****         {
1949:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1950:Generated_Source\PSoC4/CyLib.c ****         }
1951:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 54


1952:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1953:Generated_Source\PSoC4/CyLib.c ****     }
1954:Generated_Source\PSoC4/CyLib.c **** 
1955:Generated_Source\PSoC4/CyLib.c **** 
1956:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1957:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1958:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1959:Generated_Source\PSoC4/CyLib.c ****     *
1960:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1961:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1962:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1963:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1964:Generated_Source\PSoC4/CyLib.c ****     *
1965:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1966:Generated_Source\PSoC4/CyLib.c ****     *
1967:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1968:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1969:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1970:Generated_Source\PSoC4/CyLib.c ****     *
1971:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1972:Generated_Source\PSoC4/CyLib.c ****     *
1973:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1974:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1975:Generated_Source\PSoC4/CyLib.c ****     {
 1048              		.loc 1 1975 0
 1049              		.cfi_startproc
 1050              		@ args = 0, pretend = 0, frame = 0
 1051              		@ frame_needed = 0, uses_anonymous_args = 0
 1052              	.LVL92:
 1053 0000 70B5     		push	{r4, r5, r6, lr}
 1054              		.cfi_def_cfa_offset 16
 1055              		.cfi_offset 4, -16
 1056              		.cfi_offset 5, -12
 1057              		.cfi_offset 6, -8
 1058              		.cfi_offset 14, -4
 1059 0002 0400     		movs	r4, r0
 1060              	.LVL93:
1976:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1977:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1978:Generated_Source\PSoC4/CyLib.c **** 
1979:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 1061              		.loc 1 1979 0
 1062 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1063              	.LVL94:
1980:Generated_Source\PSoC4/CyLib.c **** 
1981:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
 1064              		.loc 1 1981 0
 1065 0008 6100     		lsls	r1, r4, #1
 1066 000a 0A19     		adds	r2, r1, r4
 1067 000c 9300     		lsls	r3, r2, #2
 1068 000e 084A     		ldr	r2, .L78
 1069 0010 9446     		mov	ip, r2
 1070 0012 6344     		add	r3, r3, ip
 1071 0014 9D68     		ldr	r5, [r3, #8]
 1072 0016 1022     		movs	r2, #16
 1073 0018 1540     		ands	r5, r2
 1074              	.LVL95:
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 55


1982:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
 1075              		.loc 1 1982 0
 1076 001a 9B68     		ldr	r3, [r3, #8]
 1077 001c 1A43     		orrs	r2, r3
 1078 001e 0C19     		adds	r4, r1, r4
 1079              	.LVL96:
 1080 0020 A300     		lsls	r3, r4, #2
 1081 0022 6344     		add	r3, r3, ip
 1082 0024 9A60     		str	r2, [r3, #8]
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 1083              		.loc 1 1984 0
 1084 0026 FFF7FEFF 		bl	CyExitCriticalSection
 1085              	.LVL97:
1985:Generated_Source\PSoC4/CyLib.c **** 
1986:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1987:Generated_Source\PSoC4/CyLib.c ****     }
 1086              		.loc 1 1987 0
 1087 002a 2800     		movs	r0, r5
 1088              		@ sp needed
 1089              	.LVL98:
 1090 002c 70BD     		pop	{r4, r5, r6, pc}
 1091              	.L79:
 1092 002e C046     		.align	2
 1093              	.L78:
 1094 0030 14002F40 		.word	1076822036
 1095              		.cfi_endproc
 1096              	.LFE24:
 1097              		.size	CySysClkPllGetUnlockStatus, .-CySysClkPllGetUnlockStatus
 1098              		.section	.text.CySysClkPllSetSource,"ax",%progbits
 1099              		.align	2
 1100              		.global	CySysClkPllSetSource
 1101              		.code	16
 1102              		.thumb_func
 1103              		.type	CySysClkPllSetSource, %function
 1104              	CySysClkPllSetSource:
 1105              	.LFB26:
1988:Generated_Source\PSoC4/CyLib.c **** 
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1991:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1992:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1993:Generated_Source\PSoC4/CyLib.c ****     *
1994:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1995:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1996:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1999:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2000:Generated_Source\PSoC4/CyLib.c ****     *
2001:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
2002:Generated_Source\PSoC4/CyLib.c ****     *
2003:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2004:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2005:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2006:Generated_Source\PSoC4/CyLib.c ****     *
2007:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 56


2008:Generated_Source\PSoC4/CyLib.c ****     *
2009:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2010:Generated_Source\PSoC4/CyLib.c ****     *
2011:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2012:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2013:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2014:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2015:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2016:Generated_Source\PSoC4/CyLib.c ****     *
2017:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2018:Generated_Source\PSoC4/CyLib.c ****     *
2019:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2020:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2021:Generated_Source\PSoC4/CyLib.c ****     *
2022:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2023:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2024:Generated_Source\PSoC4/CyLib.c ****     *
2025:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2026:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2027:Generated_Source\PSoC4/CyLib.c ****     {
2028:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2029:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2032:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2033:Generated_Source\PSoC4/CyLib.c **** 
2034:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2035:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2036:Generated_Source\PSoC4/CyLib.c **** 
2037:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2038:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2039:Generated_Source\PSoC4/CyLib.c **** 
2040:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2041:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2042:Generated_Source\PSoC4/CyLib.c **** 
2043:Generated_Source\PSoC4/CyLib.c **** 
2044:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2045:Generated_Source\PSoC4/CyLib.c **** 
2046:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2047:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2048:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2049:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2050:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2051:Generated_Source\PSoC4/CyLib.c ****         {
2052:Generated_Source\PSoC4/CyLib.c **** 
2053:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2054:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2055:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2058:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2059:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2060:Generated_Source\PSoC4/CyLib.c **** 
2061:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2062:Generated_Source\PSoC4/CyLib.c ****             {
2063:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2064:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 57


2065:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2066:Generated_Source\PSoC4/CyLib.c **** 
2067:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2068:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2071:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2072:Generated_Source\PSoC4/CyLib.c **** 
2073:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2074:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2075:Generated_Source\PSoC4/CyLib.c **** 
2076:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2077:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2078:Generated_Source\PSoC4/CyLib.c ****                     {
2079:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2080:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2081:Generated_Source\PSoC4/CyLib.c ****                         break;
2082:Generated_Source\PSoC4/CyLib.c ****                     }
2083:Generated_Source\PSoC4/CyLib.c ****                 }
2084:Generated_Source\PSoC4/CyLib.c **** 
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2087:Generated_Source\PSoC4/CyLib.c ****                 {
2088:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2089:Generated_Source\PSoC4/CyLib.c ****                     {
2090:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2091:Generated_Source\PSoC4/CyLib.c ****                     }
2092:Generated_Source\PSoC4/CyLib.c ****                 }
2093:Generated_Source\PSoC4/CyLib.c ****             }
2094:Generated_Source\PSoC4/CyLib.c **** 
2095:Generated_Source\PSoC4/CyLib.c ****         }
2096:Generated_Source\PSoC4/CyLib.c **** 
2097:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2098:Generated_Source\PSoC4/CyLib.c ****     }
2099:Generated_Source\PSoC4/CyLib.c **** 
2100:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2101:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2102:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2103:Generated_Source\PSoC4/CyLib.c ****     *
2104:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2105:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2106:Generated_Source\PSoC4/CyLib.c ****     *
2107:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2108:Generated_Source\PSoC4/CyLib.c ****     *
2109:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2110:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2111:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2112:Generated_Source\PSoC4/CyLib.c ****     *
2113:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2114:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2115:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
2116:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2117:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2118:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2119:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2120:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2121:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 58


2122:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2123:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2124:Generated_Source\PSoC4/CyLib.c ****     {
 1106              		.loc 1 2124 0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 0
 1109              		@ frame_needed = 0, uses_anonymous_args = 0
 1110              	.LVL99:
 1111 0000 70B5     		push	{r4, r5, r6, lr}
 1112              		.cfi_def_cfa_offset 16
 1113              		.cfi_offset 4, -16
 1114              		.cfi_offset 5, -12
 1115              		.cfi_offset 6, -8
 1116              		.cfi_offset 14, -4
 1117 0002 0500     		movs	r5, r0
 1118 0004 0C00     		movs	r4, r1
 1119              	.LVL100:
2125:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2126:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2127:Generated_Source\PSoC4/CyLib.c ****         
2128:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2129:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2130:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2131:Generated_Source\PSoC4/CyLib.c **** 
2132:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 1120              		.loc 1 2132 0
 1121 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1122              	.LVL101:
2133:Generated_Source\PSoC4/CyLib.c **** 
2134:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
 1123              		.loc 1 2134 0
 1124 000a 002D     		cmp	r5, #0
 1125 000c 21D1     		bne	.L81
2135:Generated_Source\PSoC4/CyLib.c ****         {
2136:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2137:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2138:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2139:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2140:Generated_Source\PSoC4/CyLib.c ****             #else
2141:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL0_MASK;
 1126              		.loc 1 2141 0
 1127 000e 1249     		ldr	r1, .L84
 1128 0010 0A68     		ldr	r2, [r1]
 1129 0012 0235     		adds	r5, r5, #2
 1130              	.LVL102:
 1131 0014 AA43     		bics	r2, r5
 1132              	.LVL103:
2142:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL0_SHIFT) & CY_SYS_CLK_SELECT_PLL0_MASK);
 1133              		.loc 1 2142 0
 1134 0016 6300     		lsls	r3, r4, #1
 1135 0018 2C00     		movs	r4, r5
 1136              	.LVL104:
 1137 001a 1C40     		ands	r4, r3
 1138 001c 1443     		orrs	r4, r2
 1139              	.LVL105:
2143:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
 1140              		.loc 1 2143 0
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 59


 1141 001e 0C60     		str	r4, [r1]
2144:Generated_Source\PSoC4/CyLib.c ****                 
2145:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2146:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 1142              		.loc 1 2146 0
 1143 0020 0E4A     		ldr	r2, .L84+4
 1144 0022 1368     		ldr	r3, [r2]
 1145 0024 8021     		movs	r1, #128
 1146 0026 0906     		lsls	r1, r1, #24
 1147 0028 0B43     		orrs	r3, r1
 1148 002a 1360     		str	r3, [r2]
2147:Generated_Source\PSoC4/CyLib.c ****                 
2148:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 1149              		.loc 1 2148 0
 1150 002c 0023     		movs	r3, #0
 1151 002e 09E0     		b	.L82
 1152              	.LVL106:
 1153              	.L83:
2149:Generated_Source\PSoC4/CyLib.c ****                 {
2150:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 1154              		.loc 1 2150 0 discriminator 3
 1155 0030 0A4A     		ldr	r2, .L84+4
 1156 0032 1168     		ldr	r1, [r2]
 1157 0034 0224     		movs	r4, #2
 1158 0036 2143     		orrs	r1, r4
 1159 0038 1160     		str	r1, [r2]
2151:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 1160              		.loc 1 2151 0 discriminator 3
 1161 003a 1168     		ldr	r1, [r2]
 1162 003c A143     		bics	r1, r4
 1163 003e 1160     		str	r1, [r2]
2148:Generated_Source\PSoC4/CyLib.c ****                 {
 1164              		.loc 1 2148 0 discriminator 3
 1165 0040 0133     		adds	r3, r3, #1
 1166              	.LVL107:
 1167 0042 DBB2     		uxtb	r3, r3
 1168              	.LVL108:
 1169              	.L82:
2148:Generated_Source\PSoC4/CyLib.c ****                 {
 1170              		.loc 1 2148 0 is_stmt 0 discriminator 1
 1171 0044 042B     		cmp	r3, #4
 1172 0046 F3D9     		bls	.L83
2152:Generated_Source\PSoC4/CyLib.c ****                 }
2153:Generated_Source\PSoC4/CyLib.c ****                 
2154:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 1173              		.loc 1 2154 0 is_stmt 1
 1174 0048 044A     		ldr	r2, .L84+4
 1175 004a 1368     		ldr	r3, [r2]
 1176              	.LVL109:
 1177 004c 5B00     		lsls	r3, r3, #1
 1178 004e 5B08     		lsrs	r3, r3, #1
 1179 0050 1360     		str	r3, [r2]
 1180              	.LVL110:
 1181              	.L81:
2155:Generated_Source\PSoC4/CyLib.c **** 
2156:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2157:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 60


2158:Generated_Source\PSoC4/CyLib.c **** 
2159:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 1182              		.loc 1 2159 0
 1183 0052 FFF7FEFF 		bl	CyExitCriticalSection
 1184              	.LVL111:
2160:Generated_Source\PSoC4/CyLib.c ****     }
 1185              		.loc 1 2160 0
 1186              		@ sp needed
 1187 0056 70BD     		pop	{r4, r5, r6, pc}
 1188              	.L85:
 1189              		.align	2
 1190              	.L84:
 1191 0058 00002F40 		.word	1076822016
 1192 005c 20002F40 		.word	1076822048
 1193              		.cfi_endproc
 1194              	.LFE26:
 1195              		.size	CySysClkPllSetSource, .-CySysClkPllSetSource
 1196              		.section	.text.CySysGetResetReason,"ax",%progbits
 1197              		.align	2
 1198              		.global	CySysGetResetReason
 1199              		.code	16
 1200              		.thumb_func
 1201              		.type	CySysGetResetReason, %function
 1202              	CySysGetResetReason:
 1203              	.LFB28:
2161:Generated_Source\PSoC4/CyLib.c **** 
2162:Generated_Source\PSoC4/CyLib.c ****     
2163:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2164:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2165:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2166:Generated_Source\PSoC4/CyLib.c ****     *
2167:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2168:Generated_Source\PSoC4/CyLib.c ****     *
2169:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2170:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2171:Generated_Source\PSoC4/CyLib.c ****     *
2172:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2173:Generated_Source\PSoC4/CyLib.c ****     *
2174:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2175:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2176:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2179:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2180:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2181:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2182:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2183:Generated_Source\PSoC4/CyLib.c ****     *
2184:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2185:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2186:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2187:Generated_Source\PSoC4/CyLib.c ****     *
2188:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2189:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2190:Generated_Source\PSoC4/CyLib.c ****     {
2191:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2192:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 61


2193:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2194:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c **** 
2197:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2198:Generated_Source\PSoC4/CyLib.c **** 
2199:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2200:Generated_Source\PSoC4/CyLib.c **** 
2201:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2202:Generated_Source\PSoC4/CyLib.c ****         {
2203:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2204:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2205:Generated_Source\PSoC4/CyLib.c **** 
2206:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2207:Generated_Source\PSoC4/CyLib.c **** 
2208:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2209:Generated_Source\PSoC4/CyLib.c ****         }
2210:Generated_Source\PSoC4/CyLib.c **** 
2211:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2214:Generated_Source\PSoC4/CyLib.c ****     }
2215:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2221:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2222:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2223:Generated_Source\PSoC4/CyLib.c ****     *
2224:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2225:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2226:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2227:Generated_Source\PSoC4/CyLib.c ****     *
2228:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2229:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2230:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2231:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2232:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2233:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2234:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2235:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2236:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2237:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2238:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2239:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2240:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2241:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2242:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2243:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2244:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2245:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2246:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2247:Generated_Source\PSoC4/CyLib.c ****     *
2248:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2249:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 62


2250:Generated_Source\PSoC4/CyLib.c ****     {
2251:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2252:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2253:Generated_Source\PSoC4/CyLib.c **** 
2254:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2255:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2256:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2257:Generated_Source\PSoC4/CyLib.c **** 
2258:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2259:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2260:Generated_Source\PSoC4/CyLib.c **** 
2261:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2262:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2263:Generated_Source\PSoC4/CyLib.c **** 
2264:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2265:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2266:Generated_Source\PSoC4/CyLib.c **** 
2267:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2268:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2269:Generated_Source\PSoC4/CyLib.c ****     }
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c **** 
2272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2275:Generated_Source\PSoC4/CyLib.c ****     *
2276:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2277:Generated_Source\PSoC4/CyLib.c ****     *
2278:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2280:Generated_Source\PSoC4/CyLib.c ****     {
2281:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2282:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2283:Generated_Source\PSoC4/CyLib.c ****     }
2284:Generated_Source\PSoC4/CyLib.c **** 
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2287:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2288:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2289:Generated_Source\PSoC4/CyLib.c ****     *
2290:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2291:Generated_Source\PSoC4/CyLib.c ****     *
2292:Generated_Source\PSoC4/CyLib.c ****     * \return
2293:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2294:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2295:Generated_Source\PSoC4/CyLib.c ****     *
2296:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2297:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2298:Generated_Source\PSoC4/CyLib.c ****     {
2299:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2300:Generated_Source\PSoC4/CyLib.c ****     }
2301:Generated_Source\PSoC4/CyLib.c **** 
2302:Generated_Source\PSoC4/CyLib.c **** 
2303:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2304:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2305:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2306:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 63


2307:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2308:Generated_Source\PSoC4/CyLib.c ****     *
2309:Generated_Source\PSoC4/CyLib.c ****     * \return
2310:Generated_Source\PSoC4/CyLib.c ****     *  None
2311:Generated_Source\PSoC4/CyLib.c ****     *
2312:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2314:Generated_Source\PSoC4/CyLib.c ****     {
2315:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2316:Generated_Source\PSoC4/CyLib.c ****     }
2317:Generated_Source\PSoC4/CyLib.c **** 
2318:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2319:Generated_Source\PSoC4/CyLib.c **** 
2320:Generated_Source\PSoC4/CyLib.c **** 
2321:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2322:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2323:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2324:Generated_Source\PSoC4/CyLib.c **** *
2325:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2326:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2327:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2328:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2329:Generated_Source\PSoC4/CyLib.c **** *
2330:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2331:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2332:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2333:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2334:Generated_Source\PSoC4/CyLib.c **** *
2335:Generated_Source\PSoC4/CyLib.c **** * \return
2336:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2337:Generated_Source\PSoC4/CyLib.c **** *
2338:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2339:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2340:Generated_Source\PSoC4/CyLib.c **** {
 1204              		.loc 1 2340 0
 1205              		.cfi_startproc
 1206              		@ args = 0, pretend = 0, frame = 0
 1207              		@ frame_needed = 0, uses_anonymous_args = 0
 1208              		@ link register save eliminated.
 1209              	.LVL112:
 1210 0000 0200     		movs	r2, r0
2341:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2342:Generated_Source\PSoC4/CyLib.c **** 
2343:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 1211              		.loc 1 2343 0
 1212 0002 1920     		movs	r0, #25
 1213              	.LVL113:
 1214 0004 0240     		ands	r2, r0
 1215              	.LVL114:
2344:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 1216              		.loc 1 2344 0
 1217 0006 0249     		ldr	r1, .L87
 1218 0008 0B68     		ldr	r3, [r1]
 1219 000a 1840     		ands	r0, r3
 1220              	.LVL115:
2345:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2346:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 64


 1221              		.loc 1 2346 0
 1222 000c 0A60     		str	r2, [r1]
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2349:Generated_Source\PSoC4/CyLib.c **** }
 1223              		.loc 1 2349 0
 1224              		@ sp needed
 1225 000e 7047     		bx	lr
 1226              	.L88:
 1227              		.align	2
 1228              	.L87:
 1229 0010 54000340 		.word	1073938516
 1230              		.cfi_endproc
 1231              	.LFE28:
 1232              		.size	CySysGetResetReason, .-CySysGetResetReason
 1233              		.section	.text.CyDisableInts,"ax",%progbits
 1234              		.align	2
 1235              		.global	CyDisableInts
 1236              		.code	16
 1237              		.thumb_func
 1238              		.type	CyDisableInts, %function
 1239              	CyDisableInts:
 1240              	.LFB29:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** * \return
2359:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2360:Generated_Source\PSoC4/CyLib.c **** *
2361:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2362:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2363:Generated_Source\PSoC4/CyLib.c **** {
 1241              		.loc 1 2363 0
 1242              		.cfi_startproc
 1243              		@ args = 0, pretend = 0, frame = 0
 1244              		@ frame_needed = 0, uses_anonymous_args = 0
 1245              		@ link register save eliminated.
2364:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2365:Generated_Source\PSoC4/CyLib.c **** 
2366:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2367:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 1246              		.loc 1 2367 0
 1247 0000 024B     		ldr	r3, .L90
 1248 0002 1868     		ldr	r0, [r3]
 1249              	.LVL116:
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2370:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 1250              		.loc 1 2370 0
 1251 0004 0122     		movs	r2, #1
 1252 0006 5242     		rsbs	r2, r2, #0
 1253 0008 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 65


2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2373:Generated_Source\PSoC4/CyLib.c **** }
 1254              		.loc 1 2373 0
 1255              		@ sp needed
 1256 000a 7047     		bx	lr
 1257              	.L91:
 1258              		.align	2
 1259              	.L90:
 1260 000c 80E100E0 		.word	-536813184
 1261              		.cfi_endproc
 1262              	.LFE29:
 1263              		.size	CyDisableInts, .-CyDisableInts
 1264              		.section	.text.CyEnableInts,"ax",%progbits
 1265              		.align	2
 1266              		.global	CyEnableInts
 1267              		.code	16
 1268              		.thumb_func
 1269              		.type	CyEnableInts, %function
 1270              	CyEnableInts:
 1271              	.LFB30:
2374:Generated_Source\PSoC4/CyLib.c **** 
2375:Generated_Source\PSoC4/CyLib.c **** 
2376:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2377:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2378:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2379:Generated_Source\PSoC4/CyLib.c **** *
2380:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2381:Generated_Source\PSoC4/CyLib.c **** *
2382:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2383:Generated_Source\PSoC4/CyLib.c **** *
2384:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2385:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2386:Generated_Source\PSoC4/CyLib.c **** {
 1272              		.loc 1 2386 0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 0
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
 1276              		@ link register save eliminated.
 1277              	.LVL117:
2387:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1278              		.loc 1 2387 0
 1279 0000 014B     		ldr	r3, .L93
 1280 0002 1860     		str	r0, [r3]
2388:Generated_Source\PSoC4/CyLib.c **** }
 1281              		.loc 1 2388 0
 1282              		@ sp needed
 1283 0004 7047     		bx	lr
 1284              	.L94:
 1285 0006 C046     		.align	2
 1286              	.L93:
 1287 0008 00E100E0 		.word	-536813312
 1288              		.cfi_endproc
 1289              	.LFE30:
 1290              		.size	CyEnableInts, .-CyEnableInts
 1291              		.section	.text.CyIntEnable,"ax",%progbits
 1292              		.align	2
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 66


 1293              		.global	CyIntEnable
 1294              		.code	16
 1295              		.thumb_func
 1296              		.type	CyIntEnable, %function
 1297              	CyIntEnable:
 1298              	.LFB37:
2389:Generated_Source\PSoC4/CyLib.c **** 
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2392:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2393:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2394:Generated_Source\PSoC4/CyLib.c **** *
2395:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2396:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2397:Generated_Source\PSoC4/CyLib.c **** *
2398:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2399:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2400:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2401:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2402:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2403:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2404:Generated_Source\PSoC4/CyLib.c **** *
2405:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2406:Generated_Source\PSoC4/CyLib.c **** *
2407:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2408:Generated_Source\PSoC4/CyLib.c **** *
2409:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2411:Generated_Source\PSoC4/CyLib.c **** {
2412:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2413:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2414:Generated_Source\PSoC4/CyLib.c **** 
2415:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2416:Generated_Source\PSoC4/CyLib.c **** 
2417:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2418:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2421:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2422:Generated_Source\PSoC4/CyLib.c **** 
2423:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2424:Generated_Source\PSoC4/CyLib.c **** }
2425:Generated_Source\PSoC4/CyLib.c **** 
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2428:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2429:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2430:Generated_Source\PSoC4/CyLib.c **** *
2431:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2432:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2435:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2436:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2437:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2438:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2439:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 67


2440:Generated_Source\PSoC4/CyLib.c **** *
2441:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2442:Generated_Source\PSoC4/CyLib.c **** *
2443:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2444:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2445:Generated_Source\PSoC4/CyLib.c **** {
2446:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2447:Generated_Source\PSoC4/CyLib.c **** 
2448:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2449:Generated_Source\PSoC4/CyLib.c **** 
2450:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2451:Generated_Source\PSoC4/CyLib.c **** }
2452:Generated_Source\PSoC4/CyLib.c **** 
2453:Generated_Source\PSoC4/CyLib.c **** 
2454:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2455:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2456:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2457:Generated_Source\PSoC4/CyLib.c **** *
2458:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2459:Generated_Source\PSoC4/CyLib.c **** *
2460:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2461:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2462:Generated_Source\PSoC4/CyLib.c **** *
2463:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2464:Generated_Source\PSoC4/CyLib.c **** *
2465:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2466:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2467:Generated_Source\PSoC4/CyLib.c **** {
2468:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2469:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2472:Generated_Source\PSoC4/CyLib.c **** 
2473:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2474:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2477:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2478:Generated_Source\PSoC4/CyLib.c **** 
2479:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2480:Generated_Source\PSoC4/CyLib.c **** }
2481:Generated_Source\PSoC4/CyLib.c **** 
2482:Generated_Source\PSoC4/CyLib.c **** 
2483:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2484:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2485:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2486:Generated_Source\PSoC4/CyLib.c **** *
2487:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2488:Generated_Source\PSoC4/CyLib.c **** *
2489:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2490:Generated_Source\PSoC4/CyLib.c **** *
2491:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2492:Generated_Source\PSoC4/CyLib.c **** *
2493:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2494:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2495:Generated_Source\PSoC4/CyLib.c **** {
2496:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 68


2497:Generated_Source\PSoC4/CyLib.c **** 
2498:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2499:Generated_Source\PSoC4/CyLib.c **** 
2500:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2501:Generated_Source\PSoC4/CyLib.c **** }
2502:Generated_Source\PSoC4/CyLib.c **** 
2503:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2504:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2505:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2506:Generated_Source\PSoC4/CyLib.c **** *
2507:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2508:Generated_Source\PSoC4/CyLib.c **** *
2509:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2510:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2513:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2514:Generated_Source\PSoC4/CyLib.c **** {
2515:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2516:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2517:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2518:Generated_Source\PSoC4/CyLib.c **** 
2519:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2520:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2523:Generated_Source\PSoC4/CyLib.c **** 
2524:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2525:Generated_Source\PSoC4/CyLib.c **** 
2526:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2527:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2528:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2529:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2532:Generated_Source\PSoC4/CyLib.c **** }
2533:Generated_Source\PSoC4/CyLib.c **** 
2534:Generated_Source\PSoC4/CyLib.c **** 
2535:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2536:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2537:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2538:Generated_Source\PSoC4/CyLib.c **** *
2539:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2540:Generated_Source\PSoC4/CyLib.c **** *
2541:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2542:Generated_Source\PSoC4/CyLib.c **** *
2543:Generated_Source\PSoC4/CyLib.c **** * \return
2544:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2545:Generated_Source\PSoC4/CyLib.c **** *
2546:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2547:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2548:Generated_Source\PSoC4/CyLib.c **** {
2549:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2550:Generated_Source\PSoC4/CyLib.c **** 
2551:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2552:Generated_Source\PSoC4/CyLib.c **** 
2553:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 69


2554:Generated_Source\PSoC4/CyLib.c **** 
2555:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2556:Generated_Source\PSoC4/CyLib.c **** }
2557:Generated_Source\PSoC4/CyLib.c **** 
2558:Generated_Source\PSoC4/CyLib.c **** 
2559:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2560:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2561:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2562:Generated_Source\PSoC4/CyLib.c **** *
2563:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2564:Generated_Source\PSoC4/CyLib.c **** *
2565:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2566:Generated_Source\PSoC4/CyLib.c **** *
2567:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2568:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2569:Generated_Source\PSoC4/CyLib.c **** {
 1299              		.loc 1 2569 0
 1300              		.cfi_startproc
 1301              		@ args = 0, pretend = 0, frame = 0
 1302              		@ frame_needed = 0, uses_anonymous_args = 0
 1303              		@ link register save eliminated.
 1304              	.LVL118:
2570:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1305              		.loc 1 2570 0
 1306 0000 1F23     		movs	r3, #31
 1307 0002 1840     		ands	r0, r3
 1308              	.LVL119:
 1309 0004 1E3B     		subs	r3, r3, #30
 1310 0006 8340     		lsls	r3, r3, r0
 1311 0008 014A     		ldr	r2, .L96
 1312 000a 1360     		str	r3, [r2]
2571:Generated_Source\PSoC4/CyLib.c **** }
 1313              		.loc 1 2571 0
 1314              		@ sp needed
 1315 000c 7047     		bx	lr
 1316              	.L97:
 1317 000e C046     		.align	2
 1318              	.L96:
 1319 0010 00E100E0 		.word	-536813312
 1320              		.cfi_endproc
 1321              	.LFE37:
 1322              		.size	CyIntEnable, .-CyIntEnable
 1323              		.section	.text.CyIntGetState,"ax",%progbits
 1324              		.align	2
 1325              		.global	CyIntGetState
 1326              		.code	16
 1327              		.thumb_func
 1328              		.type	CyIntGetState, %function
 1329              	CyIntGetState:
 1330              	.LFB38:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *
2578:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 70


2579:Generated_Source\PSoC4/CyLib.c **** *
2580:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** * \return
2583:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2584:Generated_Source\PSoC4/CyLib.c **** *
2585:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2586:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2587:Generated_Source\PSoC4/CyLib.c **** {
 1331              		.loc 1 2587 0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 0
 1334              		@ frame_needed = 0, uses_anonymous_args = 0
 1335              		@ link register save eliminated.
 1336              	.LVL120:
2588:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2589:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1337              		.loc 1 2589 0
 1338 0000 044B     		ldr	r3, .L99
 1339 0002 1B68     		ldr	r3, [r3]
 1340 0004 1F22     		movs	r2, #31
 1341 0006 1040     		ands	r0, r2
 1342              	.LVL121:
 1343 0008 C340     		lsrs	r3, r3, r0
 1344 000a 1800     		movs	r0, r3
 1345 000c 0123     		movs	r3, #1
 1346 000e 1840     		ands	r0, r3
2590:Generated_Source\PSoC4/CyLib.c **** }
 1347              		.loc 1 2590 0
 1348              		@ sp needed
 1349 0010 7047     		bx	lr
 1350              	.L100:
 1351 0012 C046     		.align	2
 1352              	.L99:
 1353 0014 00E100E0 		.word	-536813312
 1354              		.cfi_endproc
 1355              	.LFE38:
 1356              		.size	CyIntGetState, .-CyIntGetState
 1357              		.section	.text.CyIntDisable,"ax",%progbits
 1358              		.align	2
 1359              		.global	CyIntDisable
 1360              		.code	16
 1361              		.thumb_func
 1362              		.type	CyIntDisable, %function
 1363              	CyIntDisable:
 1364              	.LFB39:
2591:Generated_Source\PSoC4/CyLib.c **** 
2592:Generated_Source\PSoC4/CyLib.c **** 
2593:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2594:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2595:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2596:Generated_Source\PSoC4/CyLib.c **** *
2597:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2598:Generated_Source\PSoC4/CyLib.c **** *
2599:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2600:Generated_Source\PSoC4/CyLib.c **** *
2601:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 71


2602:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2603:Generated_Source\PSoC4/CyLib.c **** {
 1365              		.loc 1 2603 0
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 0
 1368              		@ frame_needed = 0, uses_anonymous_args = 0
 1369              		@ link register save eliminated.
 1370              	.LVL122:
2604:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1371              		.loc 1 2604 0
 1372 0000 1F23     		movs	r3, #31
 1373 0002 1840     		ands	r0, r3
 1374              	.LVL123:
 1375 0004 1E3B     		subs	r3, r3, #30
 1376 0006 8340     		lsls	r3, r3, r0
 1377 0008 014A     		ldr	r2, .L102
 1378 000a 1360     		str	r3, [r2]
2605:Generated_Source\PSoC4/CyLib.c **** }
 1379              		.loc 1 2605 0
 1380              		@ sp needed
 1381 000c 7047     		bx	lr
 1382              	.L103:
 1383 000e C046     		.align	2
 1384              	.L102:
 1385 0010 80E100E0 		.word	-536813184
 1386              		.cfi_endproc
 1387              	.LFE39:
 1388              		.size	CyIntDisable, .-CyIntDisable
 1389              		.section	.text.CyIntSetPending,"ax",%progbits
 1390              		.align	2
 1391              		.global	CyIntSetPending
 1392              		.code	16
 1393              		.thumb_func
 1394              		.type	CyIntSetPending, %function
 1395              	CyIntSetPending:
 1396              	.LFB40:
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2608:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2609:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2610:Generated_Source\PSoC4/CyLib.c **** *
2611:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2612:Generated_Source\PSoC4/CyLib.c **** *
2613:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2614:Generated_Source\PSoC4/CyLib.c **** *
2615:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2616:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2617:Generated_Source\PSoC4/CyLib.c **** {
 1397              		.loc 1 2617 0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 0
 1400              		@ frame_needed = 0, uses_anonymous_args = 0
 1401              		@ link register save eliminated.
 1402              	.LVL124:
2618:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1403              		.loc 1 2618 0
 1404 0000 1F23     		movs	r3, #31
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 72


 1405 0002 1840     		ands	r0, r3
 1406              	.LVL125:
 1407 0004 1E3B     		subs	r3, r3, #30
 1408 0006 8340     		lsls	r3, r3, r0
 1409 0008 014A     		ldr	r2, .L105
 1410 000a 1360     		str	r3, [r2]
2619:Generated_Source\PSoC4/CyLib.c **** }
 1411              		.loc 1 2619 0
 1412              		@ sp needed
 1413 000c 7047     		bx	lr
 1414              	.L106:
 1415 000e C046     		.align	2
 1416              	.L105:
 1417 0010 00E200E0 		.word	-536813056
 1418              		.cfi_endproc
 1419              	.LFE40:
 1420              		.size	CyIntSetPending, .-CyIntSetPending
 1421              		.section	.text.CyIntClearPending,"ax",%progbits
 1422              		.align	2
 1423              		.global	CyIntClearPending
 1424              		.code	16
 1425              		.thumb_func
 1426              		.type	CyIntClearPending, %function
 1427              	CyIntClearPending:
 1428              	.LFB41:
2620:Generated_Source\PSoC4/CyLib.c **** 
2621:Generated_Source\PSoC4/CyLib.c **** 
2622:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2623:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2624:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2625:Generated_Source\PSoC4/CyLib.c **** *
2626:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2627:Generated_Source\PSoC4/CyLib.c **** *
2628:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2629:Generated_Source\PSoC4/CyLib.c **** *
2630:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2631:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2632:Generated_Source\PSoC4/CyLib.c **** {
 1429              		.loc 1 2632 0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433              		@ link register save eliminated.
 1434              	.LVL126:
2633:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1435              		.loc 1 2633 0
 1436 0000 1F23     		movs	r3, #31
 1437 0002 1840     		ands	r0, r3
 1438              	.LVL127:
 1439 0004 1E3B     		subs	r3, r3, #30
 1440 0006 8340     		lsls	r3, r3, r0
 1441 0008 014A     		ldr	r2, .L108
 1442 000a 1360     		str	r3, [r2]
2634:Generated_Source\PSoC4/CyLib.c **** }
 1443              		.loc 1 2634 0
 1444              		@ sp needed
 1445 000c 7047     		bx	lr
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 73


 1446              	.L109:
 1447 000e C046     		.align	2
 1448              	.L108:
 1449 0010 80E200E0 		.word	-536812928
 1450              		.cfi_endproc
 1451              	.LFE41:
 1452              		.size	CyIntClearPending, .-CyIntClearPending
 1453              		.section	.text.CyHalt,"ax",%progbits
 1454              		.align	2
 1455              		.global	CyHalt
 1456              		.code	16
 1457              		.thumb_func
 1458              		.type	CyHalt, %function
 1459              	CyHalt:
 1460              	.LFB42:
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c **** 
2637:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2638:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2639:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2640:Generated_Source\PSoC4/CyLib.c **** *
2641:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2642:Generated_Source\PSoC4/CyLib.c **** *
2643:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2644:Generated_Source\PSoC4/CyLib.c **** *
2645:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2646:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2647:Generated_Source\PSoC4/CyLib.c **** {
 1461              		.loc 1 2647 0
 1462              		.cfi_startproc
 1463              		@ args = 0, pretend = 0, frame = 0
 1464              		@ frame_needed = 0, uses_anonymous_args = 0
 1465              		@ link register save eliminated.
 1466              	.LVL128:
2648:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2649:Generated_Source\PSoC4/CyLib.c ****     {
2650:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2651:Generated_Source\PSoC4/CyLib.c ****     }
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2654:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2655:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2656:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1467              		.loc 1 2656 0
 1468              		.syntax divided
 1469              	@ 2656 "Generated_Source\PSoC4\CyLib.c" 1
 1470 0000 01BE     		    bkpt    1
 1471              	@ 0 "" 2
2657:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2658:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2659:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2660:Generated_Source\PSoC4/CyLib.c **** }
 1472              		.loc 1 2660 0
 1473              		.thumb
 1474              		.syntax unified
 1475              		@ sp needed
 1476 0002 7047     		bx	lr
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 74


 1477              		.cfi_endproc
 1478              	.LFE42:
 1479              		.size	CyHalt, .-CyHalt
 1480              		.section	.text.CySysClkPllGetLockStatus,"ax",%progbits
 1481              		.align	2
 1482              		.global	CySysClkPllGetLockStatus
 1483              		.code	16
 1484              		.thumb_func
 1485              		.type	CySysClkPllGetLockStatus, %function
 1486              	CySysClkPllGetLockStatus:
 1487              	.LFB18:
1716:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1488              		.loc 1 1716 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              	.LVL129:
 1493 0000 70B5     		push	{r4, r5, r6, lr}
 1494              		.cfi_def_cfa_offset 16
 1495              		.cfi_offset 4, -16
 1496              		.cfi_offset 5, -12
 1497              		.cfi_offset 6, -8
 1498              		.cfi_offset 14, -4
 1499 0002 041E     		subs	r4, r0, #0
1720:Generated_Source\PSoC4/CyLib.c **** 
 1500              		.loc 1 1720 0
 1501 0004 02D0     		beq	.L112
1720:Generated_Source\PSoC4/CyLib.c **** 
 1502              		.loc 1 1720 0 is_stmt 0 discriminator 1
 1503 0006 0020     		movs	r0, #0
 1504              	.LVL130:
 1505 0008 FFF7FEFF 		bl	CyHalt
 1506              	.LVL131:
 1507              	.L112:
1722:Generated_Source\PSoC4/CyLib.c **** 
 1508              		.loc 1 1722 0 is_stmt 1
 1509 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1510              	.LVL132:
1725:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
 1511              		.loc 1 1725 0
 1512 0010 6200     		lsls	r2, r4, #1
 1513 0012 1219     		adds	r2, r2, r4
 1514 0014 9300     		lsls	r3, r2, #2
 1515 0016 094A     		ldr	r2, .L114
 1516 0018 9446     		mov	ip, r2
 1517 001a 6344     		add	r3, r3, ip
 1518 001c 5B68     		ldr	r3, [r3, #4]
 1519 001e 0125     		movs	r5, #1
 1520 0020 1D40     		ands	r5, r3
 1521              	.LVL133:
1726:Generated_Source\PSoC4/CyLib.c ****         {
 1522              		.loc 1 1726 0
 1523 0022 06D0     		beq	.L113
1728:Generated_Source\PSoC4/CyLib.c ****         }
 1524              		.loc 1 1728 0
 1525 0024 6300     		lsls	r3, r4, #1
 1526 0026 1C19     		adds	r4, r3, r4
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 75


 1527              	.LVL134:
 1528 0028 A300     		lsls	r3, r4, #2
 1529 002a 6344     		add	r3, r3, ip
 1530 002c 5B68     		ldr	r3, [r3, #4]
 1531 002e 0125     		movs	r5, #1
 1532              	.LVL135:
 1533 0030 1D40     		ands	r5, r3
 1534              	.LVL136:
 1535              	.L113:
1731:Generated_Source\PSoC4/CyLib.c **** 
 1536              		.loc 1 1731 0
 1537 0032 FFF7FEFF 		bl	CyExitCriticalSection
 1538              	.LVL137:
1734:Generated_Source\PSoC4/CyLib.c **** 
 1539              		.loc 1 1734 0
 1540 0036 2800     		movs	r0, r5
 1541              		@ sp needed
 1542              	.LVL138:
 1543 0038 70BD     		pop	{r4, r5, r6, pc}
 1544              	.L115:
 1545 003a C046     		.align	2
 1546              	.L114:
 1547 003c 14002F40 		.word	1076822036
 1548              		.cfi_endproc
 1549              	.LFE18:
 1550              		.size	CySysClkPllGetLockStatus, .-CySysClkPllGetLockStatus
 1551              		.section	.text.CySysClkPllGetBypassMode,"ax",%progbits
 1552              		.align	2
 1553              		.code	16
 1554              		.thumb_func
 1555              		.type	CySysClkPllGetBypassMode, %function
 1556              	CySysClkPllGetBypassMode:
 1557              	.LFB22:
1899:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
 1558              		.loc 1 1899 0
 1559              		.cfi_startproc
 1560              		@ args = 0, pretend = 0, frame = 0
 1561              		@ frame_needed = 0, uses_anonymous_args = 0
 1562              	.LVL139:
 1563 0000 10B5     		push	{r4, lr}
 1564              		.cfi_def_cfa_offset 8
 1565              		.cfi_offset 4, -8
 1566              		.cfi_offset 14, -4
 1567 0002 041E     		subs	r4, r0, #0
1903:Generated_Source\PSoC4/CyLib.c **** 
 1568              		.loc 1 1903 0
 1569 0004 02D0     		beq	.L117
1903:Generated_Source\PSoC4/CyLib.c **** 
 1570              		.loc 1 1903 0 is_stmt 0 discriminator 1
 1571 0006 0020     		movs	r0, #0
 1572              	.LVL140:
 1573 0008 FFF7FEFF 		bl	CyHalt
 1574              	.LVL141:
 1575              	.L117:
1905:Generated_Source\PSoC4/CyLib.c **** 
 1576              		.loc 1 1905 0 is_stmt 1
 1577 000c FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 76


 1578              	.LVL142:
1907:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
 1579              		.loc 1 1907 0
 1580 0010 6300     		lsls	r3, r4, #1
 1581 0012 1C19     		adds	r4, r3, r4
 1582              	.LVL143:
 1583 0014 A300     		lsls	r3, r4, #2
 1584 0016 044A     		ldr	r2, .L118
 1585 0018 9C58     		ldr	r4, [r3, r2]
 1586              	.LVL144:
1908:Generated_Source\PSoC4/CyLib.c **** 
 1587              		.loc 1 1908 0
 1588 001a 240D     		lsrs	r4, r4, #20
 1589              	.LVL145:
 1590 001c 0323     		movs	r3, #3
 1591 001e 1C40     		ands	r4, r3
 1592              	.LVL146:
1910:Generated_Source\PSoC4/CyLib.c **** 
 1593              		.loc 1 1910 0
 1594 0020 FFF7FEFF 		bl	CyExitCriticalSection
 1595              	.LVL147:
1913:Generated_Source\PSoC4/CyLib.c **** 
 1596              		.loc 1 1913 0
 1597 0024 2000     		movs	r0, r4
 1598              		@ sp needed
 1599              	.LVL148:
 1600 0026 10BD     		pop	{r4, pc}
 1601              	.L119:
 1602              		.align	2
 1603              	.L118:
 1604 0028 14002F40 		.word	1076822036
 1605              		.cfi_endproc
 1606              	.LFE22:
 1607              		.size	CySysClkPllGetBypassMode, .-CySysClkPllGetBypassMode
 1608              		.section	.text.CySysClkPllConfigChangeAllowed,"ax",%progbits
 1609              		.align	2
 1610              		.code	16
 1611              		.thumb_func
 1612              		.type	CySysClkPllConfigChangeAllowed, %function
 1613              	CySysClkPllConfigChangeAllowed:
 1614              	.LFB23:
1934:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
 1615              		.loc 1 1934 0
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 0
 1618              		@ frame_needed = 0, uses_anonymous_args = 0
 1619              	.LVL149:
 1620 0000 70B5     		push	{r4, r5, r6, lr}
 1621              		.cfi_def_cfa_offset 16
 1622              		.cfi_offset 4, -16
 1623              		.cfi_offset 5, -12
 1624              		.cfi_offset 6, -8
 1625              		.cfi_offset 14, -4
 1626 0002 0400     		movs	r4, r0
 1627              	.LVL150:
1939:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
 1628              		.loc 1 1939 0
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 77


 1629 0004 FFF7FEFF 		bl	CySysClkGetSysclkSource
 1630              	.LVL151:
 1631 0008 0500     		movs	r5, r0
 1632              	.LVL152:
1940:Generated_Source\PSoC4/CyLib.c **** 
 1633              		.loc 1 1940 0
 1634 000a 2000     		movs	r0, r4
 1635              	.LVL153:
 1636 000c FFF7FEFF 		bl	CySysClkPllGetBypassMode
 1637              	.LVL154:
1942:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
 1638              		.loc 1 1942 0
 1639 0010 0228     		cmp	r0, #2
 1640 0012 05D0     		beq	.L122
1942:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
 1641              		.loc 1 1942 0 is_stmt 0 discriminator 1
 1642 0014 062D     		cmp	r5, #6
 1643 0016 05D0     		beq	.L123
1943:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
 1644              		.loc 1 1943 0 is_stmt 1
 1645 0018 002C     		cmp	r4, #0
 1646 001a 05D0     		beq	.L124
1937:Generated_Source\PSoC4/CyLib.c **** 
 1647              		.loc 1 1937 0
 1648 001c 0420     		movs	r0, #4
 1649              	.LVL155:
 1650 001e 04E0     		b	.L121
 1651              	.LVL156:
 1652              	.L122:
1949:Generated_Source\PSoC4/CyLib.c ****         }
 1653              		.loc 1 1949 0
 1654 0020 0020     		movs	r0, #0
 1655              	.LVL157:
 1656 0022 02E0     		b	.L121
 1657              	.LVL158:
 1658              	.L123:
1937:Generated_Source\PSoC4/CyLib.c **** 
 1659              		.loc 1 1937 0
 1660 0024 0420     		movs	r0, #4
 1661              	.LVL159:
 1662 0026 00E0     		b	.L121
 1663              	.LVL160:
 1664              	.L124:
1949:Generated_Source\PSoC4/CyLib.c ****         }
 1665              		.loc 1 1949 0
 1666 0028 0020     		movs	r0, #0
 1667              	.LVL161:
 1668              	.L121:
1953:Generated_Source\PSoC4/CyLib.c **** 
 1669              		.loc 1 1953 0
 1670              		@ sp needed
 1671              	.LVL162:
 1672              	.LVL163:
 1673 002a 70BD     		pop	{r4, r5, r6, pc}
 1674              		.cfi_endproc
 1675              	.LFE23:
 1676              		.size	CySysClkPllConfigChangeAllowed, .-CySysClkPllConfigChangeAllowed
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 78


 1677              		.section	.text.CySysClkPllSetPQ,"ax",%progbits
 1678              		.align	2
 1679              		.global	CySysClkPllSetPQ
 1680              		.code	16
 1681              		.thumb_func
 1682              		.type	CySysClkPllSetPQ, %function
 1683              	CySysClkPllSetPQ:
 1684              	.LFB20:
1798:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
 1685              		.loc 1 1798 0
 1686              		.cfi_startproc
 1687              		@ args = 0, pretend = 0, frame = 8
 1688              		@ frame_needed = 0, uses_anonymous_args = 0
 1689              	.LVL164:
 1690 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1691              		.cfi_def_cfa_offset 20
 1692              		.cfi_offset 4, -20
 1693              		.cfi_offset 5, -16
 1694              		.cfi_offset 6, -12
 1695              		.cfi_offset 7, -8
 1696              		.cfi_offset 14, -4
 1697 0002 83B0     		sub	sp, sp, #12
 1698              		.cfi_def_cfa_offset 32
 1699 0004 0400     		movs	r4, r0
 1700 0006 0D00     		movs	r5, r1
 1701 0008 1600     		movs	r6, r2
 1702 000a 1F00     		movs	r7, r3
 1703              	.LVL165:
1804:Generated_Source\PSoC4/CyLib.c **** 
 1704              		.loc 1 1804 0
 1705 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1706              	.LVL166:
 1707 0010 0190     		str	r0, [sp, #4]
 1708              	.LVL167:
1806:Generated_Source\PSoC4/CyLib.c **** 
 1709              		.loc 1 1806 0
 1710 0012 2000     		movs	r0, r4
 1711 0014 FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 1712              	.LVL168:
1808:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
 1713              		.loc 1 1808 0
 1714 0018 002C     		cmp	r4, #0
 1715 001a 29D1     		bne	.L127
1808:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
 1716              		.loc 1 1808 0 is_stmt 0 discriminator 1
 1717 001c 032D     		cmp	r5, #3
 1718 001e 29D9     		bls	.L128
1809:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
 1719              		.loc 1 1809 0 is_stmt 1
 1720 0020 0423     		movs	r3, #4
 1721 0022 FF33     		adds	r3, r3, #255
 1722 0024 9D42     		cmp	r5, r3
 1723 0026 27D8     		bhi	.L129
1809:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
 1724              		.loc 1 1809 0 is_stmt 0 discriminator 1
 1725 0028 002E     		cmp	r6, #0
 1726 002a 27D0     		beq	.L130
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 79


1810:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
 1727              		.loc 1 1810 0 is_stmt 1
 1728 002c 402E     		cmp	r6, #64
 1729 002e 27D8     		bhi	.L131
1810:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
 1730              		.loc 1 1810 0 is_stmt 0 discriminator 1
 1731 0030 012F     		cmp	r7, #1
 1732 0032 27D9     		bls	.L132
1811:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
 1733              		.loc 1 1811 0 is_stmt 1
 1734 0034 032F     		cmp	r7, #3
 1735 0036 27D8     		bhi	.L133
1811:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
 1736              		.loc 1 1811 0 is_stmt 0 discriminator 1
 1737 0038 0028     		cmp	r0, #0
 1738 003a 27D1     		bne	.L134
1815:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
 1739              		.loc 1 1815 0 is_stmt 1
 1740 003c 1749     		ldr	r1, .L135
 1741 003e 6000     		lsls	r0, r4, #1
 1742              	.LVL169:
 1743 0040 0219     		adds	r2, r0, r4
 1744 0042 9300     		lsls	r3, r2, #2
 1745 0044 5A58     		ldr	r2, [r3, r1]
 1746 0046 164B     		ldr	r3, .L135+4
 1747 0048 1340     		ands	r3, r2
 1748              	.LVL170:
1819:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
 1749              		.loc 1 1819 0
 1750 004a FF22     		movs	r2, #255
 1751 004c 2A40     		ands	r2, r5
 1752 004e 1343     		orrs	r3, r2
 1753              	.LVL171:
1820:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
 1754              		.loc 1 1820 0
 1755 0050 013E     		subs	r6, r6, #1
 1756              	.LVL172:
 1757 0052 3602     		lsls	r6, r6, #8
 1758              	.LVL173:
 1759 0054 FC22     		movs	r2, #252
 1760 0056 9201     		lsls	r2, r2, #6
 1761 0058 1640     		ands	r6, r2
 1762 005a 3343     		orrs	r3, r6
 1763              	.LVL174:
1821:Generated_Source\PSoC4/CyLib.c **** 
 1764              		.loc 1 1821 0
 1765 005c 3F04     		lsls	r7, r7, #16
 1766              	.LVL175:
 1767 005e E022     		movs	r2, #224
 1768 0060 D202     		lsls	r2, r2, #11
 1769 0062 1740     		ands	r7, r2
 1770 0064 1F43     		orrs	r7, r3
 1771              	.LVL176:
1823:Generated_Source\PSoC4/CyLib.c **** 
 1772              		.loc 1 1823 0
 1773 0066 0419     		adds	r4, r0, r4
 1774              	.LVL177:
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 80


 1775 0068 A300     		lsls	r3, r4, #2
 1776 006a 5F50     		str	r7, [r3, r1]
 1777              	.LVL178:
1825:Generated_Source\PSoC4/CyLib.c ****         }
 1778              		.loc 1 1825 0
 1779 006c 0024     		movs	r4, #0
 1780 006e 0EE0     		b	.L126
 1781              	.LVL179:
 1782              	.L127:
1802:Generated_Source\PSoC4/CyLib.c **** 
 1783              		.loc 1 1802 0
 1784 0070 0124     		movs	r4, #1
 1785              	.LVL180:
 1786 0072 0CE0     		b	.L126
 1787              	.LVL181:
 1788              	.L128:
 1789 0074 0124     		movs	r4, #1
 1790              	.LVL182:
 1791 0076 0AE0     		b	.L126
 1792              	.LVL183:
 1793              	.L129:
 1794 0078 0124     		movs	r4, #1
 1795              	.LVL184:
 1796 007a 08E0     		b	.L126
 1797              	.LVL185:
 1798              	.L130:
 1799 007c 0124     		movs	r4, #1
 1800              	.LVL186:
 1801 007e 06E0     		b	.L126
 1802              	.LVL187:
 1803              	.L131:
 1804 0080 0124     		movs	r4, #1
 1805              	.LVL188:
 1806 0082 04E0     		b	.L126
 1807              	.LVL189:
 1808              	.L132:
 1809 0084 0124     		movs	r4, #1
 1810              	.LVL190:
 1811 0086 02E0     		b	.L126
 1812              	.LVL191:
 1813              	.L133:
 1814 0088 0124     		movs	r4, #1
 1815              	.LVL192:
 1816 008a 00E0     		b	.L126
 1817              	.LVL193:
 1818              	.L134:
 1819 008c 0124     		movs	r4, #1
 1820              	.LVL194:
 1821              	.L126:
1828:Generated_Source\PSoC4/CyLib.c **** 
 1822              		.loc 1 1828 0
 1823 008e 0198     		ldr	r0, [sp, #4]
 1824 0090 FFF7FEFF 		bl	CyExitCriticalSection
 1825              	.LVL195:
1831:Generated_Source\PSoC4/CyLib.c **** 
 1826              		.loc 1 1831 0
 1827 0094 2000     		movs	r0, r4
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 81


 1828 0096 03B0     		add	sp, sp, #12
 1829              		@ sp needed
 1830              	.LVL196:
 1831              	.LVL197:
 1832 0098 F0BD     		pop	{r4, r5, r6, r7, pc}
 1833              	.L136:
 1834 009a C046     		.align	2
 1835              	.L135:
 1836 009c 14002F40 		.word	1076822036
 1837 00a0 00C0F8FF 		.word	-475136
 1838              		.cfi_endproc
 1839              	.LFE20:
 1840              		.size	CySysClkPllSetPQ, .-CySysClkPllSetPQ
 1841              		.section	.text.CySysClkPllSetOutputDivider,"ax",%progbits
 1842              		.align	2
 1843              		.global	CySysClkPllSetOutputDivider
 1844              		.code	16
 1845              		.thumb_func
 1846              		.type	CySysClkPllSetOutputDivider, %function
 1847              	CySysClkPllSetOutputDivider:
 1848              	.LFB27:
2190:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
 1849              		.loc 1 2190 0
 1850              		.cfi_startproc
 1851              		@ args = 0, pretend = 0, frame = 0
 1852              		@ frame_needed = 0, uses_anonymous_args = 0
 1853              	.LVL198:
 1854 0000 70B5     		push	{r4, r5, r6, lr}
 1855              		.cfi_def_cfa_offset 16
 1856              		.cfi_offset 4, -16
 1857              		.cfi_offset 5, -12
 1858              		.cfi_offset 6, -8
 1859              		.cfi_offset 14, -4
 1860 0002 0400     		movs	r4, r0
 1861 0004 0D00     		movs	r5, r1
 1862              	.LVL199:
2197:Generated_Source\PSoC4/CyLib.c **** 
 1863              		.loc 1 2197 0
 1864 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1865              	.LVL200:
 1866 000a 0600     		movs	r6, r0
 1867              	.LVL201:
2199:Generated_Source\PSoC4/CyLib.c **** 
 1868              		.loc 1 2199 0
 1869 000c 2000     		movs	r0, r4
 1870 000e FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 1871              	.LVL202:
2201:Generated_Source\PSoC4/CyLib.c ****         {
 1872              		.loc 1 2201 0
 1873 0012 002C     		cmp	r4, #0
 1874 0014 12D1     		bne	.L139
2201:Generated_Source\PSoC4/CyLib.c ****         {
 1875              		.loc 1 2201 0 is_stmt 0 discriminator 1
 1876 0016 0028     		cmp	r0, #0
 1877 0018 12D1     		bne	.L140
2201:Generated_Source\PSoC4/CyLib.c ****         {
 1878              		.loc 1 2201 0 discriminator 2
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 82


 1879 001a 032D     		cmp	r5, #3
 1880 001c 12D8     		bhi	.L141
2203:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
 1881              		.loc 1 2203 0 is_stmt 1
 1882 001e 0C4A     		ldr	r2, .L142
 1883 0020 6100     		lsls	r1, r4, #1
 1884 0022 0819     		adds	r0, r1, r4
 1885              	.LVL203:
 1886 0024 8300     		lsls	r3, r0, #2
 1887 0026 9858     		ldr	r0, [r3, r2]
 1888 0028 0A4B     		ldr	r3, .L142+4
 1889 002a 0340     		ands	r3, r0
 1890              	.LVL204:
2204:Generated_Source\PSoC4/CyLib.c **** 
 1891              		.loc 1 2204 0
 1892 002c AD07     		lsls	r5, r5, #30
 1893              	.LVL205:
 1894 002e 2D0C     		lsrs	r5, r5, #16
 1895 0030 1D43     		orrs	r5, r3
 1896              	.LVL206:
2206:Generated_Source\PSoC4/CyLib.c **** 
 1897              		.loc 1 2206 0
 1898 0032 0C19     		adds	r4, r1, r4
 1899              	.LVL207:
 1900 0034 A300     		lsls	r3, r4, #2
 1901 0036 9D50     		str	r5, [r3, r2]
 1902              	.LVL208:
2208:Generated_Source\PSoC4/CyLib.c ****         }
 1903              		.loc 1 2208 0
 1904 0038 0024     		movs	r4, #0
 1905 003a 04E0     		b	.L138
 1906              	.LVL209:
 1907              	.L139:
2193:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
 1908              		.loc 1 2193 0
 1909 003c 0124     		movs	r4, #1
 1910              	.LVL210:
 1911 003e 02E0     		b	.L138
 1912              	.LVL211:
 1913              	.L140:
 1914 0040 0124     		movs	r4, #1
 1915              	.LVL212:
 1916 0042 00E0     		b	.L138
 1917              	.LVL213:
 1918              	.L141:
 1919 0044 0124     		movs	r4, #1
 1920              	.LVL214:
 1921              	.L138:
2211:Generated_Source\PSoC4/CyLib.c **** 
 1922              		.loc 1 2211 0
 1923 0046 3000     		movs	r0, r6
 1924 0048 FFF7FEFF 		bl	CyExitCriticalSection
 1925              	.LVL215:
2214:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
 1926              		.loc 1 2214 0
 1927 004c 2000     		movs	r0, r4
 1928              		@ sp needed
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 83


 1929              	.LVL216:
 1930              	.LVL217:
 1931 004e 70BD     		pop	{r4, r5, r6, pc}
 1932              	.L143:
 1933              		.align	2
 1934              	.L142:
 1935 0050 14002F40 		.word	1076822036
 1936 0054 FF3FFFFF 		.word	-49153
 1937              		.cfi_endproc
 1938              	.LFE27:
 1939              		.size	CySysClkPllSetOutputDivider, .-CySysClkPllSetOutputDivider
 1940              		.global	__aeabi_idiv
 1941              		.section	.text.CySysClkPllSetFrequency,"ax",%progbits
 1942              		.align	2
 1943              		.global	CySysClkPllSetFrequency
 1944              		.code	16
 1945              		.thumb_func
 1946              		.type	CySysClkPllSetFrequency, %function
 1947              	CySysClkPllSetFrequency:
 1948              	.LFB25:
2027:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
 1949              		.loc 1 2027 0
 1950              		.cfi_startproc
 1951              		@ args = 4, pretend = 0, frame = 8
 1952              		@ frame_needed = 0, uses_anonymous_args = 0
 1953              	.LVL218:
 1954 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1955              		.cfi_def_cfa_offset 20
 1956              		.cfi_offset 4, -20
 1957              		.cfi_offset 5, -16
 1958              		.cfi_offset 6, -12
 1959              		.cfi_offset 7, -8
 1960              		.cfi_offset 14, -4
 1961 0002 5746     		mov	r7, r10
 1962 0004 4646     		mov	r6, r8
 1963 0006 C0B4     		push	{r6, r7}
 1964              		.cfi_def_cfa_offset 28
 1965              		.cfi_offset 8, -28
 1966              		.cfi_offset 10, -24
 1967 0008 83B0     		sub	sp, sp, #12
 1968              		.cfi_def_cfa_offset 40
 1969 000a 0400     		movs	r4, r0
 1970 000c 0D00     		movs	r5, r1
 1971 000e 1600     		movs	r6, r2
 1972 0010 1F00     		movs	r7, r3
 1973 0012 0193     		str	r3, [sp, #4]
 1974              	.LVL219:
2044:Generated_Source\PSoC4/CyLib.c **** 
 1975              		.loc 1 2044 0
 1976 0014 FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 1977              	.LVL220:
2046:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
 1978              		.loc 1 2046 0
 1979 0018 002C     		cmp	r4, #0
 1980 001a 57D1     		bne	.L152
2046:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
 1981              		.loc 1 2046 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 84


 1982 001c 374B     		ldr	r3, .L162
 1983 001e 9D42     		cmp	r5, r3
 1984 0020 56D9     		bls	.L153
2047:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
 1985              		.loc 1 2047 0 is_stmt 1
 1986 0022 C023     		movs	r3, #192
 1987 0024 1B02     		lsls	r3, r3, #8
 1988 0026 9D42     		cmp	r5, r3
 1989 0028 54D8     		bhi	.L154
2047:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
 1990              		.loc 1 2047 0 is_stmt 0 discriminator 1
 1991 002a 354B     		ldr	r3, .L162+4
 1992 002c 9E42     		cmp	r6, r3
 1993 002e 53D9     		bls	.L155
2048:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
 1994              		.loc 1 2048 0 is_stmt 1
 1995 0030 C023     		movs	r3, #192
 1996 0032 1B02     		lsls	r3, r3, #8
 1997 0034 9E42     		cmp	r6, r3
 1998 0036 51D8     		bhi	.L156
2048:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
 1999              		.loc 1 2048 0 is_stmt 0 discriminator 1
 2000 0038 032F     		cmp	r7, #3
 2001 003a 51D8     		bhi	.L157
2049:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
 2002              		.loc 1 2049 0 is_stmt 1
 2003 003c 0028     		cmp	r0, #0
 2004 003e 51D1     		bne	.L158
2054:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
 2005              		.loc 1 2054 0
 2006 0040 3049     		ldr	r1, .L162+8
 2007 0042 314B     		ldr	r3, .L162+12
 2008 0044 E818     		adds	r0, r5, r3
 2009              	.LVL221:
 2010 0046 FFF7FEFF 		bl	__aeabi_uidiv
 2011              	.LVL222:
 2012 004a 071E     		subs	r7, r0, #0
 2013              	.LVL223:
2055:Generated_Source\PSoC4/CyLib.c **** 
 2014              		.loc 1 2055 0
 2015 004c 00D1     		bne	.L146
 2016 004e 0137     		adds	r7, r7, #1
 2017              	.L146:
 2018              	.LVL224:
2058:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
 2019              		.loc 1 2058 0 discriminator 4
 2020 0050 FA21     		movs	r1, #250
 2021 0052 8900     		lsls	r1, r1, #2
 2022 0054 2800     		movs	r0, r5
 2023 0056 FFF7FEFF 		bl	__aeabi_uidiv
 2024              	.LVL225:
2059:Generated_Source\PSoC4/CyLib.c **** 
 2025              		.loc 1 2059 0 discriminator 4
 2026 005a 8246     		mov	r10, r0
 2027 005c 4028     		cmp	r0, #64
 2028 005e 01D9     		bls	.L147
 2029 0060 4023     		movs	r3, #64
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 85


 2030 0062 9A46     		mov	r10, r3
 2031              	.L147:
 2032              	.LVL226:
2061:Generated_Source\PSoC4/CyLib.c ****             {
 2033              		.loc 1 2061 0 discriminator 4
 2034 0064 5745     		cmp	r7, r10
 2035 0066 1AD9     		bls	.L148
2041:Generated_Source\PSoC4/CyLib.c **** 
 2036              		.loc 1 2041 0
 2037 0068 0120     		movs	r0, #1
 2038 006a 42E0     		b	.L145
 2039              	.LVL227:
 2040              	.L151:
2068:Generated_Source\PSoC4/CyLib.c **** 
 2041              		.loc 1 2068 0
 2042 006c 6B08     		lsrs	r3, r5, #1
 2043 006e 3000     		movs	r0, r6
 2044 0070 7843     		muls	r0, r7
 2045 0072 C018     		adds	r0, r0, r3
 2046 0074 2900     		movs	r1, r5
 2047 0076 FFF7FEFF 		bl	__aeabi_uidiv
 2048              	.LVL228:
 2049 007a 8046     		mov	r8, r0
 2050              	.LVL229:
2071:Generated_Source\PSoC4/CyLib.c **** 
 2051              		.loc 1 2071 0
 2052 007c 6843     		muls	r0, r5
 2053              	.LVL230:
 2054 007e 3900     		movs	r1, r7
 2055 0080 FFF7FEFF 		bl	__aeabi_uidiv
 2056              	.LVL231:
2074:Generated_Source\PSoC4/CyLib.c **** 
 2057              		.loc 1 2074 0
 2058 0084 801B     		subs	r0, r0, r6
 2059              	.LVL232:
 2060 0086 214B     		ldr	r3, .L162+16
 2061 0088 5843     		muls	r0, r3
 2062 008a 3100     		movs	r1, r6
 2063 008c FFF7FEFF 		bl	__aeabi_idiv
 2064              	.LVL233:
2077:Generated_Source\PSoC4/CyLib.c ****                     {
 2065              		.loc 1 2077 0
 2066 0090 0A9A     		ldr	r2, [sp, #40]
 2067 0092 5342     		rsbs	r3, r2, #0
 2068 0094 9842     		cmp	r0, r3
 2069 0096 01DB     		blt	.L149
2077:Generated_Source\PSoC4/CyLib.c ****                     {
 2070              		.loc 1 2077 0 is_stmt 0 discriminator 1
 2071 0098 9042     		cmp	r0, r2
 2072 009a 05DD     		ble	.L150
 2073              	.L149:
2063:Generated_Source\PSoC4/CyLib.c ****                 {
 2074              		.loc 1 2063 0 is_stmt 1 discriminator 2
 2075 009c 0137     		adds	r7, r7, #1
 2076              	.LVL234:
 2077              	.L148:
2063:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 86


 2078              		.loc 1 2063 0 is_stmt 0 discriminator 1
 2079 009e 5745     		cmp	r7, r10
 2080 00a0 E4D9     		bls	.L151
2032:Generated_Source\PSoC4/CyLib.c **** 
 2081              		.loc 1 2032 0 is_stmt 1
 2082 00a2 0023     		movs	r3, #0
 2083 00a4 9846     		mov	r8, r3
2031:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
 2084              		.loc 1 2031 0
 2085 00a6 0027     		movs	r7, #0
 2086              	.LVL235:
 2087              	.L150:
2086:Generated_Source\PSoC4/CyLib.c ****                 {
 2088              		.loc 1 2086 0
 2089 00a8 4346     		mov	r3, r8
 2090 00aa 002B     		cmp	r3, #0
 2091 00ac 1CD0     		beq	.L159
2086:Generated_Source\PSoC4/CyLib.c ****                 {
 2092              		.loc 1 2086 0 is_stmt 0 discriminator 1
 2093 00ae 002F     		cmp	r7, #0
 2094 00b0 1CD0     		beq	.L160
2088:Generated_Source\PSoC4/CyLib.c ****                     {
 2095              		.loc 1 2088 0 is_stmt 1
 2096 00b2 0223     		movs	r3, #2
 2097 00b4 3A00     		movs	r2, r7
 2098 00b6 4146     		mov	r1, r8
 2099 00b8 2000     		movs	r0, r4
 2100 00ba FFF7FEFF 		bl	CySysClkPllSetPQ
 2101              	.LVL236:
 2102 00be 0028     		cmp	r0, #0
 2103 00c0 16D1     		bne	.L161
2090:Generated_Source\PSoC4/CyLib.c ****                     }
 2104              		.loc 1 2090 0
 2105 00c2 0199     		ldr	r1, [sp, #4]
 2106 00c4 2000     		movs	r0, r4
 2107 00c6 FFF7FEFF 		bl	CySysClkPllSetOutputDivider
 2108              	.LVL237:
 2109 00ca 12E0     		b	.L145
 2110              	.LVL238:
 2111              	.L152:
2041:Generated_Source\PSoC4/CyLib.c **** 
 2112              		.loc 1 2041 0
 2113 00cc 0120     		movs	r0, #1
 2114              	.LVL239:
 2115 00ce 10E0     		b	.L145
 2116              	.LVL240:
 2117              	.L153:
 2118 00d0 0120     		movs	r0, #1
 2119              	.LVL241:
 2120 00d2 0EE0     		b	.L145
 2121              	.LVL242:
 2122              	.L154:
 2123 00d4 0120     		movs	r0, #1
 2124              	.LVL243:
 2125 00d6 0CE0     		b	.L145
 2126              	.LVL244:
 2127              	.L155:
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 87


 2128 00d8 0120     		movs	r0, #1
 2129              	.LVL245:
 2130 00da 0AE0     		b	.L145
 2131              	.LVL246:
 2132              	.L156:
 2133 00dc 0120     		movs	r0, #1
 2134              	.LVL247:
 2135 00de 08E0     		b	.L145
 2136              	.LVL248:
 2137              	.L157:
 2138 00e0 0120     		movs	r0, #1
 2139              	.LVL249:
 2140 00e2 06E0     		b	.L145
 2141              	.LVL250:
 2142              	.L158:
 2143 00e4 0120     		movs	r0, #1
 2144              	.LVL251:
 2145 00e6 04E0     		b	.L145
 2146              	.LVL252:
 2147              	.L159:
 2148 00e8 0120     		movs	r0, #1
 2149 00ea 02E0     		b	.L145
 2150              	.L160:
 2151 00ec 0120     		movs	r0, #1
 2152 00ee 00E0     		b	.L145
 2153              	.LVL253:
 2154              	.L161:
 2155 00f0 0120     		movs	r0, #1
 2156              	.LVL254:
 2157              	.L145:
2098:Generated_Source\PSoC4/CyLib.c **** 
 2158              		.loc 1 2098 0
 2159 00f2 03B0     		add	sp, sp, #12
 2160              		@ sp needed
 2161              	.LVL255:
 2162              	.LVL256:
 2163              	.LVL257:
 2164 00f4 0CBC     		pop	{r2, r3}
 2165 00f6 9046     		mov	r8, r2
 2166 00f8 9A46     		mov	r10, r3
 2167 00fa F0BD     		pop	{r4, r5, r6, r7, pc}
 2168              	.L163:
 2169              		.align	2
 2170              	.L162:
 2171 00fc E7030000 		.word	999
 2172 0100 E3570000 		.word	22499
 2173 0104 B80B0000 		.word	3000
 2174 0108 B70B0000 		.word	2999
 2175 010c 40420F00 		.word	1000000
 2176              		.cfi_endproc
 2177              	.LFE25:
 2178              		.size	CySysClkPllSetFrequency, .-CySysClkPllSetFrequency
 2179              		.section	.text.CyIntSetSysVector,"ax",%progbits
 2180              		.align	2
 2181              		.global	CyIntSetSysVector
 2182              		.code	16
 2183              		.thumb_func
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 88


 2184              		.type	CyIntSetSysVector, %function
 2185              	CyIntSetSysVector:
 2186              	.LFB31:
2411:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 2187              		.loc 1 2411 0
 2188              		.cfi_startproc
 2189              		@ args = 0, pretend = 0, frame = 0
 2190              		@ frame_needed = 0, uses_anonymous_args = 0
 2191              	.LVL258:
 2192 0000 70B5     		push	{r4, r5, r6, lr}
 2193              		.cfi_def_cfa_offset 16
 2194              		.cfi_offset 4, -16
 2195              		.cfi_offset 5, -12
 2196              		.cfi_offset 6, -8
 2197              		.cfi_offset 14, -4
 2198 0002 0400     		movs	r4, r0
 2199 0004 0D00     		movs	r5, r1
 2200              	.LVL259:
2415:Generated_Source\PSoC4/CyLib.c **** 
 2201              		.loc 1 2415 0
 2202 0006 0F28     		cmp	r0, #15
 2203 0008 02D9     		bls	.L165
2415:Generated_Source\PSoC4/CyLib.c **** 
 2204              		.loc 1 2415 0 is_stmt 0 discriminator 1
 2205 000a 0020     		movs	r0, #0
 2206              	.LVL260:
 2207 000c FFF7FEFF 		bl	CyHalt
 2208              	.LVL261:
 2209              	.L165:
2418:Generated_Source\PSoC4/CyLib.c **** 
 2210              		.loc 1 2418 0 is_stmt 1
 2211 0010 A400     		lsls	r4, r4, #2
 2212 0012 8023     		movs	r3, #128
 2213 0014 9B05     		lsls	r3, r3, #22
 2214 0016 9C46     		mov	ip, r3
 2215 0018 6444     		add	r4, r4, ip
 2216 001a 2068     		ldr	r0, [r4]
 2217              	.LVL262:
2421:Generated_Source\PSoC4/CyLib.c **** 
 2218              		.loc 1 2421 0
 2219 001c 2560     		str	r5, [r4]
2424:Generated_Source\PSoC4/CyLib.c **** 
 2220              		.loc 1 2424 0
 2221              		@ sp needed
 2222              	.LVL263:
 2223 001e 70BD     		pop	{r4, r5, r6, pc}
 2224              		.cfi_endproc
 2225              	.LFE31:
 2226              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 2227              		.section	.text.CyIntGetSysVector,"ax",%progbits
 2228              		.align	2
 2229              		.global	CyIntGetSysVector
 2230              		.code	16
 2231              		.thumb_func
 2232              		.type	CyIntGetSysVector, %function
 2233              	CyIntGetSysVector:
 2234              	.LFB32:
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 89


2445:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 2235              		.loc 1 2445 0
 2236              		.cfi_startproc
 2237              		@ args = 0, pretend = 0, frame = 0
 2238              		@ frame_needed = 0, uses_anonymous_args = 0
 2239              	.LVL264:
 2240 0000 10B5     		push	{r4, lr}
 2241              		.cfi_def_cfa_offset 8
 2242              		.cfi_offset 4, -8
 2243              		.cfi_offset 14, -4
 2244 0002 0400     		movs	r4, r0
 2245              	.LVL265:
2448:Generated_Source\PSoC4/CyLib.c **** 
 2246              		.loc 1 2448 0
 2247 0004 0F28     		cmp	r0, #15
 2248 0006 02D9     		bls	.L167
2448:Generated_Source\PSoC4/CyLib.c **** 
 2249              		.loc 1 2448 0 is_stmt 0 discriminator 1
 2250 0008 0020     		movs	r0, #0
 2251              	.LVL266:
 2252 000a FFF7FEFF 		bl	CyHalt
 2253              	.LVL267:
 2254              	.L167:
2450:Generated_Source\PSoC4/CyLib.c **** }
 2255              		.loc 1 2450 0 is_stmt 1
 2256 000e A400     		lsls	r4, r4, #2
 2257 0010 8023     		movs	r3, #128
 2258 0012 9B05     		lsls	r3, r3, #22
 2259 0014 9C46     		mov	ip, r3
 2260 0016 6444     		add	r4, r4, ip
 2261 0018 2068     		ldr	r0, [r4]
2451:Generated_Source\PSoC4/CyLib.c **** 
 2262              		.loc 1 2451 0
 2263              		@ sp needed
 2264 001a 10BD     		pop	{r4, pc}
 2265              		.cfi_endproc
 2266              	.LFE32:
 2267              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 2268              		.section	.text.CyIntSetVector,"ax",%progbits
 2269              		.align	2
 2270              		.global	CyIntSetVector
 2271              		.code	16
 2272              		.thumb_func
 2273              		.type	CyIntSetVector, %function
 2274              	CyIntSetVector:
 2275              	.LFB33:
2467:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 2276              		.loc 1 2467 0
 2277              		.cfi_startproc
 2278              		@ args = 0, pretend = 0, frame = 0
 2279              		@ frame_needed = 0, uses_anonymous_args = 0
 2280              	.LVL268:
 2281 0000 70B5     		push	{r4, r5, r6, lr}
 2282              		.cfi_def_cfa_offset 16
 2283              		.cfi_offset 4, -16
 2284              		.cfi_offset 5, -12
 2285              		.cfi_offset 6, -8
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 90


 2286              		.cfi_offset 14, -4
 2287 0002 0400     		movs	r4, r0
 2288 0004 0D00     		movs	r5, r1
 2289              	.LVL269:
2471:Generated_Source\PSoC4/CyLib.c **** 
 2290              		.loc 1 2471 0
 2291 0006 1B28     		cmp	r0, #27
 2292 0008 02D9     		bls	.L169
2471:Generated_Source\PSoC4/CyLib.c **** 
 2293              		.loc 1 2471 0 is_stmt 0 discriminator 1
 2294 000a 0020     		movs	r0, #0
 2295              	.LVL270:
 2296 000c FFF7FEFF 		bl	CyHalt
 2297              	.LVL271:
 2298              	.L169:
2474:Generated_Source\PSoC4/CyLib.c **** 
 2299              		.loc 1 2474 0 is_stmt 1
 2300 0010 1034     		adds	r4, r4, #16
 2301 0012 A400     		lsls	r4, r4, #2
 2302 0014 8023     		movs	r3, #128
 2303 0016 9B05     		lsls	r3, r3, #22
 2304 0018 9C46     		mov	ip, r3
 2305 001a 6444     		add	r4, r4, ip
 2306 001c 2068     		ldr	r0, [r4]
 2307              	.LVL272:
2477:Generated_Source\PSoC4/CyLib.c **** 
 2308              		.loc 1 2477 0
 2309 001e 2560     		str	r5, [r4]
2480:Generated_Source\PSoC4/CyLib.c **** 
 2310              		.loc 1 2480 0
 2311              		@ sp needed
 2312              	.LVL273:
 2313 0020 70BD     		pop	{r4, r5, r6, pc}
 2314              		.cfi_endproc
 2315              	.LFE33:
 2316              		.size	CyIntSetVector, .-CyIntSetVector
 2317 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 2318              		.align	2
 2319              		.global	CyIntGetVector
 2320              		.code	16
 2321              		.thumb_func
 2322              		.type	CyIntGetVector, %function
 2323              	CyIntGetVector:
 2324              	.LFB34:
2495:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 2325              		.loc 1 2495 0
 2326              		.cfi_startproc
 2327              		@ args = 0, pretend = 0, frame = 0
 2328              		@ frame_needed = 0, uses_anonymous_args = 0
 2329              	.LVL274:
 2330 0000 10B5     		push	{r4, lr}
 2331              		.cfi_def_cfa_offset 8
 2332              		.cfi_offset 4, -8
 2333              		.cfi_offset 14, -4
 2334 0002 0400     		movs	r4, r0
 2335              	.LVL275:
2498:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 91


 2336              		.loc 1 2498 0
 2337 0004 1B28     		cmp	r0, #27
 2338 0006 02D9     		bls	.L171
2498:Generated_Source\PSoC4/CyLib.c **** 
 2339              		.loc 1 2498 0 is_stmt 0 discriminator 1
 2340 0008 0020     		movs	r0, #0
 2341              	.LVL276:
 2342 000a FFF7FEFF 		bl	CyHalt
 2343              	.LVL277:
 2344              	.L171:
2500:Generated_Source\PSoC4/CyLib.c **** }
 2345              		.loc 1 2500 0 is_stmt 1
 2346 000e 1034     		adds	r4, r4, #16
 2347 0010 A400     		lsls	r4, r4, #2
 2348 0012 8023     		movs	r3, #128
 2349 0014 9B05     		lsls	r3, r3, #22
 2350 0016 9C46     		mov	ip, r3
 2351 0018 6444     		add	r4, r4, ip
 2352 001a 2068     		ldr	r0, [r4]
2501:Generated_Source\PSoC4/CyLib.c **** 
 2353              		.loc 1 2501 0
 2354              		@ sp needed
 2355 001c 10BD     		pop	{r4, pc}
 2356              		.cfi_endproc
 2357              	.LFE34:
 2358              		.size	CyIntGetVector, .-CyIntGetVector
 2359 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 2360              		.align	2
 2361              		.global	CyIntSetPriority
 2362              		.code	16
 2363              		.thumb_func
 2364              		.type	CyIntSetPriority, %function
 2365              	CyIntSetPriority:
 2366              	.LFB35:
2514:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 2367              		.loc 1 2514 0
 2368              		.cfi_startproc
 2369              		@ args = 0, pretend = 0, frame = 0
 2370              		@ frame_needed = 0, uses_anonymous_args = 0
 2371              	.LVL278:
 2372 0000 70B5     		push	{r4, r5, r6, lr}
 2373              		.cfi_def_cfa_offset 16
 2374              		.cfi_offset 4, -16
 2375              		.cfi_offset 5, -12
 2376              		.cfi_offset 6, -8
 2377              		.cfi_offset 14, -4
 2378 0002 0400     		movs	r4, r0
 2379 0004 0E00     		movs	r6, r1
2519:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 2380              		.loc 1 2519 0
 2381 0006 0329     		cmp	r1, #3
 2382 0008 02D9     		bls	.L173
2519:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 2383              		.loc 1 2519 0 is_stmt 0 discriminator 1
 2384 000a 0020     		movs	r0, #0
 2385              	.LVL279:
 2386 000c FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 92


 2387              	.LVL280:
 2388              	.L173:
2520:Generated_Source\PSoC4/CyLib.c **** 
 2389              		.loc 1 2520 0 is_stmt 1
 2390 0010 1B2C     		cmp	r4, #27
 2391 0012 02D9     		bls	.L174
2520:Generated_Source\PSoC4/CyLib.c **** 
 2392              		.loc 1 2520 0 is_stmt 0 discriminator 1
 2393 0014 0020     		movs	r0, #0
 2394 0016 FFF7FEFF 		bl	CyHalt
 2395              	.LVL281:
 2396              	.L174:
2522:Generated_Source\PSoC4/CyLib.c **** 
 2397              		.loc 1 2522 0 is_stmt 1
 2398 001a 0325     		movs	r5, #3
 2399 001c 2540     		ands	r5, r4
 2400 001e ED00     		lsls	r5, r5, #3
 2401 0020 0635     		adds	r5, r5, #6
 2402              	.LVL282:
2524:Generated_Source\PSoC4/CyLib.c **** 
 2403              		.loc 1 2524 0
 2404 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 2405              	.LVL283:
2526:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 2406              		.loc 1 2526 0
 2407 0026 A408     		lsrs	r4, r4, #2
 2408 0028 A400     		lsls	r4, r4, #2
 2409 002a 074B     		ldr	r3, .L175
 2410 002c 9C46     		mov	ip, r3
 2411 002e 6444     		add	r4, r4, ip
 2412 0030 2168     		ldr	r1, [r4]
 2413              	.LVL284:
2527:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 2414              		.loc 1 2527 0
 2415 0032 0323     		movs	r3, #3
 2416 0034 AB40     		lsls	r3, r3, r5
 2417 0036 9943     		bics	r1, r3
 2418              	.LVL285:
 2419 0038 0B00     		movs	r3, r1
 2420              	.LVL286:
2528:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 2421              		.loc 1 2528 0
 2422 003a 3100     		movs	r1, r6
 2423              	.LVL287:
 2424 003c A940     		lsls	r1, r1, r5
 2425 003e 1943     		orrs	r1, r3
 2426              	.LVL288:
2529:Generated_Source\PSoC4/CyLib.c **** 
 2427              		.loc 1 2529 0
 2428 0040 2160     		str	r1, [r4]
2531:Generated_Source\PSoC4/CyLib.c **** }
 2429              		.loc 1 2531 0
 2430 0042 FFF7FEFF 		bl	CyExitCriticalSection
 2431              	.LVL289:
2532:Generated_Source\PSoC4/CyLib.c **** 
 2432              		.loc 1 2532 0
 2433              		@ sp needed
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 93


 2434              	.LVL290:
 2435 0046 70BD     		pop	{r4, r5, r6, pc}
 2436              	.L176:
 2437              		.align	2
 2438              	.L175:
 2439 0048 00E400E0 		.word	-536812544
 2440              		.cfi_endproc
 2441              	.LFE35:
 2442              		.size	CyIntSetPriority, .-CyIntSetPriority
 2443              		.section	.text.CyIntGetPriority,"ax",%progbits
 2444              		.align	2
 2445              		.global	CyIntGetPriority
 2446              		.code	16
 2447              		.thumb_func
 2448              		.type	CyIntGetPriority, %function
 2449              	CyIntGetPriority:
 2450              	.LFB36:
2548:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 2451              		.loc 1 2548 0
 2452              		.cfi_startproc
 2453              		@ args = 0, pretend = 0, frame = 0
 2454              		@ frame_needed = 0, uses_anonymous_args = 0
 2455              	.LVL291:
 2456 0000 10B5     		push	{r4, lr}
 2457              		.cfi_def_cfa_offset 8
 2458              		.cfi_offset 4, -8
 2459              		.cfi_offset 14, -4
 2460 0002 0400     		movs	r4, r0
2551:Generated_Source\PSoC4/CyLib.c **** 
 2461              		.loc 1 2551 0
 2462 0004 1B28     		cmp	r0, #27
 2463 0006 02D9     		bls	.L178
2551:Generated_Source\PSoC4/CyLib.c **** 
 2464              		.loc 1 2551 0 is_stmt 0 discriminator 1
 2465 0008 0020     		movs	r0, #0
 2466              	.LVL292:
 2467 000a FFF7FEFF 		bl	CyHalt
 2468              	.LVL293:
 2469              	.L178:
2553:Generated_Source\PSoC4/CyLib.c **** 
 2470              		.loc 1 2553 0 is_stmt 1
 2471 000e A308     		lsrs	r3, r4, #2
 2472 0010 9B00     		lsls	r3, r3, #2
 2473 0012 054A     		ldr	r2, .L179
 2474 0014 9446     		mov	ip, r2
 2475 0016 6344     		add	r3, r3, ip
 2476 0018 1868     		ldr	r0, [r3]
 2477 001a 0323     		movs	r3, #3
 2478 001c 1C40     		ands	r4, r3
 2479 001e E400     		lsls	r4, r4, #3
 2480 0020 0634     		adds	r4, r4, #6
 2481 0022 E040     		lsrs	r0, r0, r4
 2482              	.LVL294:
2555:Generated_Source\PSoC4/CyLib.c **** }
 2483              		.loc 1 2555 0
 2484 0024 1840     		ands	r0, r3
 2485              	.LVL295:
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 94


2556:Generated_Source\PSoC4/CyLib.c **** 
 2486              		.loc 1 2556 0
 2487              		@ sp needed
 2488 0026 10BD     		pop	{r4, pc}
 2489              	.L180:
 2490              		.align	2
 2491              	.L179:
 2492 0028 00E400E0 		.word	-536812544
 2493              		.cfi_endproc
 2494              	.LFE36:
 2495              		.size	CyIntGetPriority, .-CyIntGetPriority
 2496              		.section	.text.CySoftwareReset,"ax",%progbits
 2497              		.align	2
 2498              		.global	CySoftwareReset
 2499              		.code	16
 2500              		.thumb_func
 2501              		.type	CySoftwareReset, %function
 2502              	CySoftwareReset:
 2503              	.LFB43:
2661:Generated_Source\PSoC4/CyLib.c **** 
2662:Generated_Source\PSoC4/CyLib.c **** 
2663:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2664:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2665:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2666:Generated_Source\PSoC4/CyLib.c **** *
2667:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2668:Generated_Source\PSoC4/CyLib.c **** *
2669:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2670:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2671:Generated_Source\PSoC4/CyLib.c **** {
 2504              		.loc 1 2671 0
 2505              		.cfi_startproc
 2506              		@ args = 0, pretend = 0, frame = 0
 2507              		@ frame_needed = 0, uses_anonymous_args = 0
 2508              		@ link register save eliminated.
2672:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2673:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2674:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2675:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2676:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 2509              		.loc 1 2676 0
 2510 0000 034A     		ldr	r2, .L182
 2511 0002 1368     		ldr	r3, [r2]
 2512 0004 1B04     		lsls	r3, r3, #16
 2513 0006 1B0C     		lsrs	r3, r3, #16
2677:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 2514              		.loc 1 2677 0
 2515 0008 0249     		ldr	r1, .L182+4
 2516 000a 0B43     		orrs	r3, r1
2676:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 2517              		.loc 1 2676 0
 2518 000c 1360     		str	r3, [r2]
2678:Generated_Source\PSoC4/CyLib.c **** }
 2519              		.loc 1 2678 0
 2520              		@ sp needed
 2521 000e 7047     		bx	lr
 2522              	.L183:
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 95


 2523              		.align	2
 2524              	.L182:
 2525 0010 0CED00E0 		.word	-536810228
 2526 0014 0400FA05 		.word	100270084
 2527              		.cfi_endproc
 2528              	.LFE43:
 2529              		.size	CySoftwareReset, .-CySoftwareReset
 2530              		.section	.text.CyDelay,"ax",%progbits
 2531              		.align	2
 2532              		.global	CyDelay
 2533              		.code	16
 2534              		.thumb_func
 2535              		.type	CyDelay, %function
 2536              	CyDelay:
 2537              	.LFB44:
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c **** 
2681:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2682:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2683:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2684:Generated_Source\PSoC4/CyLib.c **** *
2685:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2688:Generated_Source\PSoC4/CyLib.c **** *
2689:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2690:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2691:Generated_Source\PSoC4/CyLib.c **** {
 2538              		.loc 1 2691 0
 2539              		.cfi_startproc
 2540              		@ args = 0, pretend = 0, frame = 0
 2541              		@ frame_needed = 0, uses_anonymous_args = 0
 2542              	.LVL296:
 2543 0000 10B5     		push	{r4, lr}
 2544              		.cfi_def_cfa_offset 8
 2545              		.cfi_offset 4, -8
 2546              		.cfi_offset 14, -4
 2547 0002 0400     		movs	r4, r0
2692:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 2548              		.loc 1 2692 0
 2549 0004 06E0     		b	.L185
 2550              	.LVL297:
 2551              	.L186:
2693:Generated_Source\PSoC4/CyLib.c ****     {
2694:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2695:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2696:Generated_Source\PSoC4/CyLib.c ****          */
2697:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 2552              		.loc 1 2697 0
 2553 0006 084B     		ldr	r3, .L187
 2554 0008 5868     		ldr	r0, [r3, #4]
 2555 000a FFF7FEFF 		bl	CyDelayCycles
 2556              	.LVL298:
2698:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 2557              		.loc 1 2698 0
 2558 000e 074B     		ldr	r3, .L187+4
 2559 0010 9C46     		mov	ip, r3
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 96


 2560 0012 6444     		add	r4, r4, ip
 2561              	.LVL299:
 2562              	.L185:
2692:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 2563              		.loc 1 2692 0
 2564 0014 8023     		movs	r3, #128
 2565 0016 1B02     		lsls	r3, r3, #8
 2566 0018 9C42     		cmp	r4, r3
 2567 001a F4D8     		bhi	.L186
2699:Generated_Source\PSoC4/CyLib.c ****     }
2700:Generated_Source\PSoC4/CyLib.c **** 
2701:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 2568              		.loc 1 2701 0
 2569 001c 024B     		ldr	r3, .L187
 2570 001e 9868     		ldr	r0, [r3, #8]
 2571 0020 6043     		muls	r0, r4
 2572 0022 FFF7FEFF 		bl	CyDelayCycles
 2573              	.LVL300:
2702:Generated_Source\PSoC4/CyLib.c **** }
 2574              		.loc 1 2702 0
 2575              		@ sp needed
 2576              	.LVL301:
 2577 0026 10BD     		pop	{r4, pc}
 2578              	.L188:
 2579              		.align	2
 2580              	.L187:
 2581 0028 00000000 		.word	.LANCHOR0
 2582 002c 0080FFFF 		.word	-32768
 2583              		.cfi_endproc
 2584              	.LFE44:
 2585              		.size	CyDelay, .-CyDelay
 2586              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 2587              		.align	2
 2588              		.global	CySysClkImoEnableWcoLock
 2589              		.code	16
 2590              		.thumb_func
 2591              		.type	CySysClkImoEnableWcoLock, %function
 2592              	CySysClkImoEnableWcoLock:
 2593              	.LFB3:
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 2594              		.loc 1 177 0
 2595              		.cfi_startproc
 2596              		@ args = 0, pretend = 0, frame = 8
 2597              		@ frame_needed = 0, uses_anonymous_args = 0
 2598 0000 30B5     		push	{r4, r5, lr}
 2599              		.cfi_def_cfa_offset 12
 2600              		.cfi_offset 4, -12
 2601              		.cfi_offset 5, -8
 2602              		.cfi_offset 14, -4
 2603 0002 83B0     		sub	sp, sp, #12
 2604              		.cfi_def_cfa_offset 24
 2605              	.LVL302:
 188:Generated_Source\PSoC4/CyLib.c ****         {
 2606              		.loc 1 188 0
 2607 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 2608              	.LVL303:
 2609 0008 0028     		cmp	r0, #0
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 97


 2610 000a 49D0     		beq	.L189
 190:Generated_Source\PSoC4/CyLib.c **** 
 2611              		.loc 1 190 0
 2612 000c FFF7FEFF 		bl	CyEnterCriticalSection
 2613              	.LVL304:
 2614 0010 0400     		movs	r4, r0
 2615              	.LVL305:
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 2616              		.loc 1 213 0
 2617 0012 244B     		ldr	r3, .L194
 2618 0014 1968     		ldr	r1, [r3]
 2619 0016 8900     		lsls	r1, r1, #2
 2620 0018 1C23     		movs	r3, #28
 2621 001a 1940     		ands	r1, r3
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 2622              		.loc 1 214 0
 2623 001c 1831     		adds	r1, r1, #24
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 2624              		.loc 1 215 0
 2625 001e 224B     		ldr	r3, .L194+4
 2626 0020 1B68     		ldr	r3, [r3]
 2627 0022 9B08     		lsrs	r3, r3, #2
 2628 0024 0322     		movs	r2, #3
 2629 0026 1340     		ands	r3, r2
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 2630              		.loc 1 213 0
 2631 0028 D940     		lsrs	r1, r1, r3
 2632              	.LVL306:
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 2633              		.loc 1 233 0
 2634 002a 204B     		ldr	r3, .L194+8
 2635 002c 1A68     		ldr	r2, [r3]
 2636 002e 204B     		ldr	r3, .L194+12
 2637 0030 1340     		ands	r3, r2
 2638              	.LVL307:
 239:Generated_Source\PSoC4/CyLib.c **** 
 2639              		.loc 1 239 0
 2640 0032 204A     		ldr	r2, .L194+16
 2641 0034 4A43     		muls	r2, r1
 2642 0036 8020     		movs	r0, #128
 2643 0038 C001     		lsls	r0, r0, #7
 2644 003a 8446     		mov	ip, r0
 2645 003c 6244     		add	r2, r2, ip
 2646 003e D20B     		lsrs	r2, r2, #15
 2647 0040 013A     		subs	r2, r2, #1
 2648 0042 5205     		lsls	r2, r2, #21
 2649 0044 520D     		lsrs	r2, r2, #21
 2650 0046 1343     		orrs	r3, r2
 2651              	.LVL308:
 242:Generated_Source\PSoC4/CyLib.c **** 
 2652              		.loc 1 242 0
 2653 0048 A022     		movs	r2, #160
 2654 004a 5203     		lsls	r2, r2, #13
 2655 004c 1A43     		orrs	r2, r3
 2656 004e 1000     		movs	r0, r2
 2657              	.LVL309:
 245:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 98


 2658              		.loc 1 245 0
 2659 0050 1929     		cmp	r1, #25
 2660 0052 02D8     		bhi	.L191
 247:Generated_Source\PSoC4/CyLib.c ****             }
 2661              		.loc 1 247 0
 2662 0054 184A     		ldr	r2, .L194+20
 2663 0056 1343     		orrs	r3, r2
 2664              	.LVL310:
 2665 0058 0CE0     		b	.L192
 2666              	.LVL311:
 2667              	.L191:
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 2668              		.loc 1 251 0
 2669 005a 184B     		ldr	r3, .L194+24
 2670 005c CB18     		adds	r3, r1, r3
 2671 005e 1B78     		ldrb	r3, [r3]
 252:Generated_Source\PSoC4/CyLib.c **** 
 2672              		.loc 1 252 0
 2673 0060 1A39     		subs	r1, r1, #26
 2674              	.LVL312:
 2675 0062 174A     		ldr	r2, .L194+28
 2676 0064 525C     		ldrb	r2, [r2, r1]
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 2677              		.loc 1 251 0
 2678 0066 9A18     		adds	r2, r3, r2
 2679              	.LVL313:
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 2680              		.loc 1 254 0
 2681 0068 FF2A     		cmp	r2, #255
 2682 006a 00D9     		bls	.L193
 2683 006c FF22     		movs	r2, #255
 2684              	.L193:
 2685              	.LVL314:
 257:Generated_Source\PSoC4/CyLib.c ****             }
 2686              		.loc 1 257 0
 2687 006e 9205     		lsls	r2, r2, #22
 2688              	.LVL315:
 2689 0070 0300     		movs	r3, r0
 2690 0072 1343     		orrs	r3, r2
 2691              	.LVL316:
 2692              	.L192:
 260:Generated_Source\PSoC4/CyLib.c **** 
 2693              		.loc 1 260 0
 2694 0074 0D4A     		ldr	r2, .L194+8
 2695 0076 1360     		str	r3, [r2]
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 2696              		.loc 1 262 0
 2697 0078 124D     		ldr	r5, .L194+32
 2698 007a 2B68     		ldr	r3, [r5]
 2699              	.LVL317:
 2700 007c 0193     		str	r3, [sp, #4]
 2701              	.LVL318:
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 2702              		.loc 1 263 0
 2703 007e 3020     		movs	r0, #48
 2704 0080 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 2705              	.LVL319:
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 99


 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 2706              		.loc 1 264 0
 2707 0084 104A     		ldr	r2, .L194+36
 2708 0086 1368     		ldr	r3, [r2]
 2709 0088 8021     		movs	r1, #128
 2710 008a C905     		lsls	r1, r1, #23
 2711 008c 0B43     		orrs	r3, r1
 2712 008e 1360     		str	r3, [r2]
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 2713              		.loc 1 265 0
 2714 0090 1420     		movs	r0, #20
 2715 0092 FFF7FEFF 		bl	CyDelay
 2716              	.LVL320:
 266:Generated_Source\PSoC4/CyLib.c **** 
 2717              		.loc 1 266 0
 2718 0096 019B     		ldr	r3, [sp, #4]
 2719 0098 2B60     		str	r3, [r5]
 268:Generated_Source\PSoC4/CyLib.c ****         }
 2720              		.loc 1 268 0
 2721 009a 2000     		movs	r0, r4
 2722 009c FFF7FEFF 		bl	CyExitCriticalSection
 2723              	.LVL321:
 2724              	.L189:
 270:Generated_Source\PSoC4/CyLib.c **** 
 2725              		.loc 1 270 0
 2726 00a0 03B0     		add	sp, sp, #12
 2727              		@ sp needed
 2728 00a2 30BD     		pop	{r4, r5, pc}
 2729              	.L195:
 2730              		.align	2
 2731              	.L194:
 2732 00a4 080F0340 		.word	1073942280
 2733 00a8 28000340 		.word	1073938472
 2734 00ac 08002240 		.word	1075970056
 2735 00b0 00F800C0 		.word	-1073678336
 2736 00b4 40420F00 		.word	1000000
 2737 00b8 0000D43F 		.word	1070858240
 2738 00bc 4DF3FF0F 		.word	268432205
 2739 00c0 00000000 		.word	.LANCHOR1
 2740 00c4 30001040 		.word	1074790448
 2741 00c8 00002240 		.word	1075970048
 2742              		.cfi_endproc
 2743              	.LFE3:
 2744              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 2745              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 2746              		.align	2
 2747              		.global	CySysClkWriteImoFreq
 2748              		.code	16
 2749              		.thumb_func
 2750              		.type	CySysClkWriteImoFreq, %function
 2751              	CySysClkWriteImoFreq:
 2752              	.LFB10:
 936:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 2753              		.loc 1 936 0
 2754              		.cfi_startproc
 2755              		@ args = 0, pretend = 0, frame = 8
 2756              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 100


 2757              	.LVL322:
 2758 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2759              		.cfi_def_cfa_offset 20
 2760              		.cfi_offset 4, -20
 2761              		.cfi_offset 5, -16
 2762              		.cfi_offset 6, -12
 2763              		.cfi_offset 7, -8
 2764              		.cfi_offset 14, -4
 2765 0002 83B0     		sub	sp, sp, #12
 2766              		.cfi_def_cfa_offset 32
 2767 0004 0400     		movs	r4, r0
 2768              	.LVL323:
 953:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 2769              		.loc 1 953 0
 2770 0006 1828     		cmp	r0, #24
 2771 0008 0BD0     		beq	.L197
 953:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 2772              		.loc 1 953 0 is_stmt 0 discriminator 1
 2773 000a 1C28     		cmp	r0, #28
 2774 000c 09D0     		beq	.L197
 953:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 2775              		.loc 1 953 0 discriminator 2
 2776 000e 2028     		cmp	r0, #32
 2777 0010 07D0     		beq	.L197
 953:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 2778              		.loc 1 953 0 discriminator 3
 2779 0012 2428     		cmp	r0, #36
 2780 0014 05D0     		beq	.L197
 954:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 2781              		.loc 1 954 0 is_stmt 1
 2782 0016 2828     		cmp	r0, #40
 2783 0018 03D0     		beq	.L197
 954:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 2784              		.loc 1 954 0 is_stmt 0 discriminator 1
 2785 001a 2C28     		cmp	r0, #44
 2786 001c 01D0     		beq	.L197
 954:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 2787              		.loc 1 954 0 discriminator 2
 2788 001e 3028     		cmp	r0, #48
 2789 0020 49D1     		bne	.L198
 2790              	.L197:
 958:Generated_Source\PSoC4/CyLib.c **** 
 2791              		.loc 1 958 0 is_stmt 1
 2792 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 2793              	.LVL324:
 2794 0026 0190     		str	r0, [sp, #4]
 2795              	.LVL325:
 961:Generated_Source\PSoC4/CyLib.c ****                 {
 2796              		.loc 1 961 0
 2797 0028 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 2798              	.LVL326:
 2799 002c 0028     		cmp	r0, #0
 2800 002e 03D0     		beq	.L203
 2801              	.LVL327:
 964:Generated_Source\PSoC4/CyLib.c ****                 }
 2802              		.loc 1 964 0
 2803 0030 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 101


 2804              	.LVL328:
 963:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 2805              		.loc 1 963 0
 2806 0034 0126     		movs	r6, #1
 2807 0036 00E0     		b	.L199
 2808              	.LVL329:
 2809              	.L203:
 941:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 2810              		.loc 1 941 0
 2811 0038 0026     		movs	r6, #0
 2812              	.LVL330:
 2813              	.L199:
 989:Generated_Source\PSoC4/CyLib.c **** 
 2814              		.loc 1 989 0
 2815 003a 214A     		ldr	r2, .L204
 2816 003c 1368     		ldr	r3, [r2]
 2817 003e 0721     		movs	r1, #7
 2818 0040 8B43     		bics	r3, r1
 2819 0042 1360     		str	r3, [r2]
 2820              	.LVL331:
1007:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 2821              		.loc 1 1007 0
 2822 0044 1F4B     		ldr	r3, .L204+4
 2823 0046 E318     		adds	r3, r4, r3
 2824 0048 1B78     		ldrb	r3, [r3]
 2825 004a DBB2     		uxtb	r3, r3
 2826              	.LVL332:
1009:Generated_Source\PSoC4/CyLib.c **** 
 2827              		.loc 1 1009 0
 2828 004c 1E4A     		ldr	r2, .L204+8
 2829 004e 1360     		str	r3, [r2]
1012:Generated_Source\PSoC4/CyLib.c **** 
 2830              		.loc 1 1012 0
 2831 0050 1E4A     		ldr	r2, .L204+12
 2832 0052 1368     		ldr	r3, [r2]
 2833              	.LVL333:
 2834 0054 8B43     		bics	r3, r1
 2835 0056 1360     		str	r3, [r2]
 2836              	.LVL334:
1015:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 2837              		.loc 1 1015 0
 2838 0058 1D48     		ldr	r0, .L204+16
 2839 005a 0368     		ldr	r3, [r0]
 2840 005c 7F22     		movs	r2, #127
 2841 005e 9343     		bics	r3, r2
 2842 0060 1900     		movs	r1, r3
1016:Generated_Source\PSoC4/CyLib.c **** 
 2843              		.loc 1 1016 0
 2844 0062 1C4B     		ldr	r3, .L204+20
 2845 0064 E318     		adds	r3, r4, r3
 2846 0066 1B78     		ldrb	r3, [r3]
 2847 0068 1340     		ands	r3, r2
1015:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 2848              		.loc 1 1015 0
 2849 006a 0B43     		orrs	r3, r1
 2850 006c 0360     		str	r3, [r0]
1018:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 102


 2851              		.loc 1 1018 0
 2852 006e 3220     		movs	r0, #50
 2853 0070 FFF7FEFF 		bl	CyDelayCycles
 2854              	.LVL335:
1020:Generated_Source\PSoC4/CyLib.c ****             {
 2855              		.loc 1 1020 0
 2856 0074 182C     		cmp	r4, #24
 2857 0076 16D9     		bls	.L200
1023:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 2858              		.loc 1 1023 0
 2859 0078 114F     		ldr	r7, .L204
 2860 007a 3B68     		ldr	r3, [r7]
 2861 007c 0725     		movs	r5, #7
 2862 007e AB43     		bics	r3, r5
 2863 0080 1A00     		movs	r2, r3
1024:Generated_Source\PSoC4/CyLib.c **** 
 2864              		.loc 1 1024 0
 2865 0082 2300     		movs	r3, r4
 2866 0084 1C3B     		subs	r3, r3, #28
 2867 0086 9B08     		lsrs	r3, r3, #2
 2868 0088 2B40     		ands	r3, r5
1023:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 2869              		.loc 1 1023 0
 2870 008a 1343     		orrs	r3, r2
 2871 008c 3B60     		str	r3, [r7]
1026:Generated_Source\PSoC4/CyLib.c **** 
 2872              		.loc 1 1026 0
 2873 008e 3220     		movs	r0, #50
 2874 0090 FFF7FEFF 		bl	CyDelayCycles
 2875              	.LVL336:
1030:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 2876              		.loc 1 1030 0
 2877 0094 3A68     		ldr	r2, [r7]
 2878 0096 AA43     		bics	r2, r5
1031:Generated_Source\PSoC4/CyLib.c ****             }
 2879              		.loc 1 1031 0
 2880 0098 2300     		movs	r3, r4
 2881 009a 183B     		subs	r3, r3, #24
 2882 009c 9B08     		lsrs	r3, r3, #2
 2883 009e 2C00     		movs	r4, r5
 2884              	.LVL337:
 2885 00a0 1C40     		ands	r4, r3
1030:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 2886              		.loc 1 1030 0
 2887 00a2 1443     		orrs	r4, r2
 2888 00a4 3C60     		str	r4, [r7]
 2889              	.L200:
1035:Generated_Source\PSoC4/CyLib.c ****                 {
 2890              		.loc 1 1035 0
 2891 00a6 012E     		cmp	r6, #1
 2892 00a8 01D1     		bne	.L201
1037:Generated_Source\PSoC4/CyLib.c ****                 }
 2893              		.loc 1 1037 0
 2894 00aa FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 2895              	.LVL338:
 2896              	.L201:
1049:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 103


 2897              		.loc 1 1049 0
 2898 00ae 0198     		ldr	r0, [sp, #4]
 2899 00b0 FFF7FEFF 		bl	CyExitCriticalSection
 2900              	.LVL339:
 2901 00b4 02E0     		b	.L196
 2902              	.LVL340:
 2903              	.L198:
1054:Generated_Source\PSoC4/CyLib.c ****         }
 2904              		.loc 1 1054 0 discriminator 1
 2905 00b6 0020     		movs	r0, #0
 2906              	.LVL341:
 2907 00b8 FFF7FEFF 		bl	CyHalt
 2908              	.LVL342:
 2909              	.L196:
1056:Generated_Source\PSoC4/CyLib.c **** 
 2910              		.loc 1 1056 0
 2911 00bc 03B0     		add	sp, sp, #12
 2912              		@ sp needed
 2913 00be F0BD     		pop	{r4, r5, r6, r7, pc}
 2914              	.L205:
 2915              		.align	2
 2916              	.L204:
 2917 00c0 080F0340 		.word	1073942280
 2918 00c4 4DF3FF0F 		.word	268432205
 2919 00c8 0C0F0340 		.word	1073942284
 2920 00cc 100F0340 		.word	1073942288
 2921 00d0 180F0340 		.word	1073942296
 2922 00d4 34F3FF0F 		.word	268432180
 2923              		.cfi_endproc
 2924              	.LFE10:
 2925              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 2926              		.section	.text.CyDelayUs,"ax",%progbits
 2927              		.align	2
 2928              		.global	CyDelayUs
 2929              		.code	16
 2930              		.thumb_func
 2931              		.type	CyDelayUs, %function
 2932              	CyDelayUs:
 2933              	.LFB45:
2703:Generated_Source\PSoC4/CyLib.c **** 
2704:Generated_Source\PSoC4/CyLib.c **** 
2705:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2706:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2707:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2708:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2709:Generated_Source\PSoC4/CyLib.c **** *
2710:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2711:Generated_Source\PSoC4/CyLib.c **** *
2712:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2713:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2714:Generated_Source\PSoC4/CyLib.c **** {
 2934              		.loc 1 2714 0
 2935              		.cfi_startproc
 2936              		@ args = 0, pretend = 0, frame = 0
 2937              		@ frame_needed = 0, uses_anonymous_args = 0
 2938              	.LVL343:
 2939 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 104


 2940              		.cfi_def_cfa_offset 8
 2941              		.cfi_offset 4, -8
 2942              		.cfi_offset 14, -4
2715:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 2943              		.loc 1 2715 0
 2944 0002 034B     		ldr	r3, .L207
 2945 0004 1B7B     		ldrb	r3, [r3, #12]
 2946 0006 5843     		muls	r0, r3
 2947              	.LVL344:
 2948 0008 FFF7FEFF 		bl	CyDelayCycles
 2949              	.LVL345:
2716:Generated_Source\PSoC4/CyLib.c **** }
 2950              		.loc 1 2716 0
 2951              		@ sp needed
 2952 000c 10BD     		pop	{r4, pc}
 2953              	.L208:
 2954 000e C046     		.align	2
 2955              	.L207:
 2956 0010 00000000 		.word	.LANCHOR0
 2957              		.cfi_endproc
 2958              	.LFE45:
 2959              		.size	CyDelayUs, .-CyDelayUs
 2960              		.section	.text.CySysClkEcoStart,"ax",%progbits
 2961              		.align	2
 2962              		.global	CySysClkEcoStart
 2963              		.code	16
 2964              		.thumb_func
 2965              		.type	CySysClkEcoStart, %function
 2966              	CySysClkEcoStart:
 2967              	.LFB12:
1135:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 2968              		.loc 1 1135 0
 2969              		.cfi_startproc
 2970              		@ args = 0, pretend = 0, frame = 0
 2971              		@ frame_needed = 0, uses_anonymous_args = 0
 2972              	.LVL346:
 2973 0000 70B5     		push	{r4, r5, r6, lr}
 2974              		.cfi_def_cfa_offset 16
 2975              		.cfi_offset 4, -16
 2976              		.cfi_offset 5, -12
 2977              		.cfi_offset 6, -8
 2978              		.cfi_offset 14, -4
 2979 0002 0400     		movs	r4, r0
 2980              	.LVL347:
1239:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 2981              		.loc 1 1239 0
 2982 0004 0F4D     		ldr	r5, .L214
 2983 0006 2B68     		ldr	r3, [r5]
 2984 0008 8022     		movs	r2, #128
 2985 000a 1206     		lsls	r2, r2, #24
 2986 000c 1343     		orrs	r3, r2
 2987 000e 2B60     		str	r3, [r5]
1240:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 2988              		.loc 1 1240 0
 2989 0010 0A20     		movs	r0, #10
 2990              	.LVL348:
 2991 0012 FFF7FEFF 		bl	CyDelayUs
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 105


 2992              	.LVL349:
1241:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
 2993              		.loc 1 1241 0
 2994 0016 2A68     		ldr	r2, [r5]
 2995 0018 0123     		movs	r3, #1
 2996 001a 1343     		orrs	r3, r2
 2997 001c 2B60     		str	r3, [r5]
1244:Generated_Source\PSoC4/CyLib.c ****         {
 2998              		.loc 1 1244 0
 2999 001e 002C     		cmp	r4, #0
 3000 0020 09D1     		bne	.L210
1136:Generated_Source\PSoC4/CyLib.c **** 
 3001              		.loc 1 1136 0
 3002 0022 0020     		movs	r0, #0
 3003 0024 0CE0     		b	.L211
 3004              	.L212:
1250:Generated_Source\PSoC4/CyLib.c **** 
 3005              		.loc 1 1250 0
 3006 0026 0120     		movs	r0, #1
 3007 0028 FFF7FEFF 		bl	CyDelayUs
 3008              	.LVL350:
1252:Generated_Source\PSoC4/CyLib.c ****                 {
 3009              		.loc 1 1252 0
 3010 002c FFF7FEFF 		bl	CySysClkEcoReadStatus
 3011              	.LVL351:
 3012 0030 0028     		cmp	r0, #0
 3013 0032 04D1     		bne	.L213
1248:Generated_Source\PSoC4/CyLib.c ****             {
 3014              		.loc 1 1248 0
 3015 0034 013C     		subs	r4, r4, #1
 3016              	.LVL352:
 3017              	.L210:
1248:Generated_Source\PSoC4/CyLib.c ****             {
 3018              		.loc 1 1248 0 is_stmt 0 discriminator 1
 3019 0036 002C     		cmp	r4, #0
 3020 0038 F5D1     		bne	.L212
1246:Generated_Source\PSoC4/CyLib.c **** 
 3021              		.loc 1 1246 0 is_stmt 1
 3022 003a 1020     		movs	r0, #16
 3023 003c 00E0     		b	.L211
 3024              	.L213:
1254:Generated_Source\PSoC4/CyLib.c ****                     break;
 3025              		.loc 1 1254 0
 3026 003e 0020     		movs	r0, #0
 3027              	.L211:
 3028              	.LVL353:
1262:Generated_Source\PSoC4/CyLib.c **** 
 3029              		.loc 1 1262 0
 3030              		@ sp needed
 3031              	.LVL354:
 3032 0040 70BD     		pop	{r4, r5, r6, pc}
 3033              	.L215:
 3034 0042 C046     		.align	2
 3035              	.L214:
 3036 0044 08002F40 		.word	1076822024
 3037              		.cfi_endproc
 3038              	.LFE12:
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 106


 3039              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 3040              		.section	.text.CySysClkPllStart,"ax",%progbits
 3041              		.align	2
 3042              		.global	CySysClkPllStart
 3043              		.code	16
 3044              		.thumb_func
 3045              		.type	CySysClkPllStart, %function
 3046              	CySysClkPllStart:
 3047              	.LFB17:
1649:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
 3048              		.loc 1 1649 0
 3049              		.cfi_startproc
 3050              		@ args = 0, pretend = 0, frame = 0
 3051              		@ frame_needed = 0, uses_anonymous_args = 0
 3052              	.LVL355:
 3053 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3054              		.cfi_def_cfa_offset 24
 3055              		.cfi_offset 3, -24
 3056              		.cfi_offset 4, -20
 3057              		.cfi_offset 5, -16
 3058              		.cfi_offset 6, -12
 3059              		.cfi_offset 7, -8
 3060              		.cfi_offset 14, -4
 3061 0002 0400     		movs	r4, r0
 3062 0004 0D00     		movs	r5, r1
 3063              	.LVL356:
1654:Generated_Source\PSoC4/CyLib.c ****         {
 3064              		.loc 1 1654 0
 3065 0006 0028     		cmp	r0, #0
 3066 0008 3FD1     		bne	.L221
1654:Generated_Source\PSoC4/CyLib.c ****         {
 3067              		.loc 1 1654 0 is_stmt 0 discriminator 1
 3068 000a 0129     		cmp	r1, #1
 3069 000c 3FD8     		bhi	.L222
1656:Generated_Source\PSoC4/CyLib.c **** 
 3070              		.loc 1 1656 0 is_stmt 1
 3071 000e FFF7FEFF 		bl	CyEnterCriticalSection
 3072              	.LVL357:
1659:Generated_Source\PSoC4/CyLib.c **** 
 3073              		.loc 1 1659 0
 3074 0012 204F     		ldr	r7, .L224
 3075 0014 6600     		lsls	r6, r4, #1
 3076 0016 3219     		adds	r2, r6, r4
 3077 0018 9300     		lsls	r3, r2, #2
 3078 001a DA59     		ldr	r2, [r3, r7]
 3079 001c 1E4B     		ldr	r3, .L224+4
 3080 001e 1340     		ands	r3, r2
 3081 0020 3119     		adds	r1, r6, r4
 3082 0022 8A00     		lsls	r2, r1, #2
 3083 0024 1100     		movs	r1, r2
 3084 0026 D351     		str	r3, [r2, r7]
1662:Generated_Source\PSoC4/CyLib.c **** 
 3085              		.loc 1 1662 0
 3086 0028 CB59     		ldr	r3, [r1, r7]
 3087 002a 8022     		movs	r2, #128
 3088 002c 1206     		lsls	r2, r2, #24
 3089 002e 1343     		orrs	r3, r2
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 107


 3090 0030 3119     		adds	r1, r6, r4
 3091 0032 8A00     		lsls	r2, r1, #2
 3092 0034 D351     		str	r3, [r2, r7]
1664:Generated_Source\PSoC4/CyLib.c **** 
 3093              		.loc 1 1664 0
 3094 0036 FFF7FEFF 		bl	CyExitCriticalSection
 3095              	.LVL358:
1667:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 3096              		.loc 1 1667 0
 3097 003a 0520     		movs	r0, #5
 3098 003c FFF7FEFF 		bl	CyDelayUs
 3099              	.LVL359:
1668:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
 3100              		.loc 1 1668 0
 3101 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 3102              	.LVL360:
1669:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 3103              		.loc 1 1669 0
 3104 0044 3219     		adds	r2, r6, r4
 3105 0046 9300     		lsls	r3, r2, #2
 3106 0048 DB59     		ldr	r3, [r3, r7]
 3107 004a 8022     		movs	r2, #128
 3108 004c D205     		lsls	r2, r2, #23
 3109 004e 1343     		orrs	r3, r2
 3110 0050 3619     		adds	r6, r6, r4
 3111 0052 B200     		lsls	r2, r6, #2
 3112 0054 D351     		str	r3, [r2, r7]
1670:Generated_Source\PSoC4/CyLib.c **** 
 3113              		.loc 1 1670 0
 3114 0056 FFF7FEFF 		bl	CyExitCriticalSection
 3115              	.LVL361:
1672:Generated_Source\PSoC4/CyLib.c ****             {
 3116              		.loc 1 1672 0
 3117 005a 002D     		cmp	r5, #0
 3118 005c 10D1     		bne	.L223
1652:Generated_Source\PSoC4/CyLib.c **** 
 3119              		.loc 1 1652 0
 3120 005e 0020     		movs	r0, #0
 3121 0060 16E0     		b	.L217
 3122              	.LVL362:
 3123              	.L220:
1679:Generated_Source\PSoC4/CyLib.c ****                     {
 3124              		.loc 1 1679 0
 3125 0062 2000     		movs	r0, r4
 3126 0064 FFF7FEFF 		bl	CySysClkPllGetLockStatus
 3127              	.LVL363:
 3128 0068 0028     		cmp	r0, #0
 3129 006a 04D0     		beq	.L219
1682:Generated_Source\PSoC4/CyLib.c ****                         break;
 3130              		.loc 1 1682 0
 3131 006c 2000     		movs	r0, r4
 3132 006e FFF7FEFF 		bl	CySysClkPllGetUnlockStatus
 3133              	.LVL364:
1681:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
 3134              		.loc 1 1681 0
 3135 0072 0020     		movs	r0, #0
1683:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 108


 3136              		.loc 1 1683 0
 3137 0074 0CE0     		b	.L217
 3138              	.L219:
1686:Generated_Source\PSoC4/CyLib.c ****                     counts--;
 3139              		.loc 1 1686 0
 3140 0076 0120     		movs	r0, #1
 3141 0078 FFF7FEFF 		bl	CyDelayUs
 3142              	.LVL365:
1687:Generated_Source\PSoC4/CyLib.c ****                 }
 3143              		.loc 1 1687 0
 3144 007c 013D     		subs	r5, r5, #1
 3145              	.LVL366:
 3146 007e 00E0     		b	.L218
 3147              	.LVL367:
 3148              	.L223:
 3149 0080 FF25     		movs	r5, #255
 3150              	.LVL368:
 3151              	.L218:
1676:Generated_Source\PSoC4/CyLib.c ****                 {
 3152              		.loc 1 1676 0
 3153 0082 002D     		cmp	r5, #0
 3154 0084 EDD1     		bne	.L220
1674:Generated_Source\PSoC4/CyLib.c **** 
 3155              		.loc 1 1674 0
 3156 0086 1020     		movs	r0, #16
 3157 0088 02E0     		b	.L217
 3158              	.LVL369:
 3159              	.L221:
1693:Generated_Source\PSoC4/CyLib.c ****         }
 3160              		.loc 1 1693 0
 3161 008a 0120     		movs	r0, #1
 3162              	.LVL370:
 3163 008c 00E0     		b	.L217
 3164              	.LVL371:
 3165              	.L222:
 3166 008e 0120     		movs	r0, #1
 3167              	.LVL372:
 3168              	.L217:
1697:Generated_Source\PSoC4/CyLib.c **** 
 3169              		.loc 1 1697 0
 3170              		@ sp needed
 3171              	.LVL373:
 3172 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3173              	.L225:
 3174 0092 C046     		.align	2
 3175              	.L224:
 3176 0094 14002F40 		.word	1076822036
 3177 0098 FFFFFFBF 		.word	-1073741825
 3178              		.cfi_endproc
 3179              	.LFE17:
 3180              		.size	CySysClkPllStart, .-CySysClkPllStart
 3181              		.section	.text.CyDelayFreq,"ax",%progbits
 3182              		.align	2
 3183              		.global	CyDelayFreq
 3184              		.code	16
 3185              		.thumb_func
 3186              		.type	CyDelayFreq, %function
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 109


 3187              	CyDelayFreq:
 3188              	.LFB46:
2717:Generated_Source\PSoC4/CyLib.c **** 
2718:Generated_Source\PSoC4/CyLib.c **** 
2719:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2720:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2721:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2722:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2723:Generated_Source\PSoC4/CyLib.c **** *
2724:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2725:Generated_Source\PSoC4/CyLib.c **** *
2726:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2727:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2728:Generated_Source\PSoC4/CyLib.c **** {
 3189              		.loc 1 2728 0
 3190              		.cfi_startproc
 3191              		@ args = 0, pretend = 0, frame = 0
 3192              		@ frame_needed = 0, uses_anonymous_args = 0
 3193              	.LVL374:
 3194 0000 70B5     		push	{r4, r5, r6, lr}
 3195              		.cfi_def_cfa_offset 16
 3196              		.cfi_offset 4, -16
 3197              		.cfi_offset 5, -12
 3198              		.cfi_offset 6, -8
 3199              		.cfi_offset 14, -4
2729:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 3200              		.loc 1 2729 0
 3201 0002 0028     		cmp	r0, #0
 3202 0004 02D0     		beq	.L227
2730:Generated_Source\PSoC4/CyLib.c ****     {
2731:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 3203              		.loc 1 2731 0
 3204 0006 0C4B     		ldr	r3, .L229
 3205 0008 1861     		str	r0, [r3, #16]
 3206 000a 02E0     		b	.L228
 3207              	.L227:
2732:Generated_Source\PSoC4/CyLib.c ****     }
2733:Generated_Source\PSoC4/CyLib.c ****     else
2734:Generated_Source\PSoC4/CyLib.c ****     {
2735:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 3208              		.loc 1 2735 0
 3209 000c 0B4A     		ldr	r2, .L229+4
 3210 000e 0A4B     		ldr	r3, .L229
 3211 0010 1A61     		str	r2, [r3, #16]
 3212              	.L228:
2736:Generated_Source\PSoC4/CyLib.c ****     }
2737:Generated_Source\PSoC4/CyLib.c **** 
2738:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 3213              		.loc 1 2738 0
 3214 0012 094C     		ldr	r4, .L229
 3215 0014 2569     		ldr	r5, [r4, #16]
 3216 0016 0A4B     		ldr	r3, .L229+8
 3217 0018 E818     		adds	r0, r5, r3
 3218              	.LVL375:
 3219 001a 0A49     		ldr	r1, .L229+12
 3220 001c FFF7FEFF 		bl	__aeabi_uidiv
 3221              	.LVL376:
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 110


 3222 0020 2073     		strb	r0, [r4, #12]
2739:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 3223              		.loc 1 2739 0
 3224 0022 094B     		ldr	r3, .L229+16
 3225 0024 E818     		adds	r0, r5, r3
 3226 0026 FA21     		movs	r1, #250
 3227 0028 8900     		lsls	r1, r1, #2
 3228 002a FFF7FEFF 		bl	__aeabi_uidiv
 3229              	.LVL377:
 3230 002e A060     		str	r0, [r4, #8]
2740:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 3231              		.loc 1 2740 0
 3232 0030 C003     		lsls	r0, r0, #15
 3233 0032 6060     		str	r0, [r4, #4]
2741:Generated_Source\PSoC4/CyLib.c **** }
 3234              		.loc 1 2741 0
 3235              		@ sp needed
 3236 0034 70BD     		pop	{r4, r5, r6, pc}
 3237              	.L230:
 3238 0036 C046     		.align	2
 3239              	.L229:
 3240 0038 00000000 		.word	.LANCHOR0
 3241 003c 00366E01 		.word	24000000
 3242 0040 3F420F00 		.word	999999
 3243 0044 40420F00 		.word	1000000
 3244 0048 E7030000 		.word	999
 3245              		.cfi_endproc
 3246              	.LFE46:
 3247              		.size	CyDelayFreq, .-CyDelayFreq
 3248              		.section	.text.CySysTickStop,"ax",%progbits
 3249              		.align	2
 3250              		.global	CySysTickStop
 3251              		.code	16
 3252              		.thumb_func
 3253              		.type	CySysTickStop, %function
 3254              	CySysTickStop:
 3255              	.LFB50:
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** 
2744:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2745:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2746:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2747:Generated_Source\PSoC4/CyLib.c **** *
2748:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2749:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2752:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2753:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2754:Generated_Source\PSoC4/CyLib.c **** *
2755:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2756:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2757:Generated_Source\PSoC4/CyLib.c **** *
2758:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2759:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2760:Generated_Source\PSoC4/CyLib.c **** {
2761:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 111


2762:Generated_Source\PSoC4/CyLib.c ****     {
2763:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2764:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2765:Generated_Source\PSoC4/CyLib.c ****     }
2766:Generated_Source\PSoC4/CyLib.c **** 
2767:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2768:Generated_Source\PSoC4/CyLib.c **** }
2769:Generated_Source\PSoC4/CyLib.c **** 
2770:Generated_Source\PSoC4/CyLib.c **** 
2771:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2772:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2773:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2774:Generated_Source\PSoC4/CyLib.c **** *
2775:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2776:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2777:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2778:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2781:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2782:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2783:Generated_Source\PSoC4/CyLib.c **** *
2784:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2785:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2786:Generated_Source\PSoC4/CyLib.c **** *
2787:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2788:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2789:Generated_Source\PSoC4/CyLib.c **** {
2790:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2793:Generated_Source\PSoC4/CyLib.c ****     {
2794:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2795:Generated_Source\PSoC4/CyLib.c ****     }
2796:Generated_Source\PSoC4/CyLib.c **** 
2797:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2798:Generated_Source\PSoC4/CyLib.c **** 
2799:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2800:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2801:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2802:Generated_Source\PSoC4/CyLib.c **** 
2803:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2804:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2805:Generated_Source\PSoC4/CyLib.c **** }
2806:Generated_Source\PSoC4/CyLib.c **** 
2807:Generated_Source\PSoC4/CyLib.c **** 
2808:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2809:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2810:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2811:Generated_Source\PSoC4/CyLib.c **** *
2812:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2813:Generated_Source\PSoC4/CyLib.c **** *
2814:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2815:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2816:Generated_Source\PSoC4/CyLib.c **** *
2817:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 112


2819:Generated_Source\PSoC4/CyLib.c **** {
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2821:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2822:Generated_Source\PSoC4/CyLib.c **** }
2823:Generated_Source\PSoC4/CyLib.c **** 
2824:Generated_Source\PSoC4/CyLib.c **** 
2825:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2827:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2828:Generated_Source\PSoC4/CyLib.c **** *
2829:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2830:Generated_Source\PSoC4/CyLib.c **** *
2831:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2832:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2833:Generated_Source\PSoC4/CyLib.c **** *
2834:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2835:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2836:Generated_Source\PSoC4/CyLib.c **** {
 3256              		.loc 1 2836 0
 3257              		.cfi_startproc
 3258              		@ args = 0, pretend = 0, frame = 0
 3259              		@ frame_needed = 0, uses_anonymous_args = 0
 3260              		@ link register save eliminated.
2837:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 3261              		.loc 1 2837 0
 3262 0000 024A     		ldr	r2, .L232
 3263 0002 1368     		ldr	r3, [r2]
 3264 0004 0121     		movs	r1, #1
 3265 0006 8B43     		bics	r3, r1
 3266 0008 1360     		str	r3, [r2]
2838:Generated_Source\PSoC4/CyLib.c **** }
 3267              		.loc 1 2838 0
 3268              		@ sp needed
 3269 000a 7047     		bx	lr
 3270              	.L233:
 3271              		.align	2
 3272              	.L232:
 3273 000c 10E000E0 		.word	-536813552
 3274              		.cfi_endproc
 3275              	.LFE50:
 3276              		.size	CySysTickStop, .-CySysTickStop
 3277              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 3278              		.align	2
 3279              		.global	CySysTickEnableInterrupt
 3280              		.code	16
 3281              		.thumb_func
 3282              		.type	CySysTickEnableInterrupt, %function
 3283              	CySysTickEnableInterrupt:
 3284              	.LFB51:
2839:Generated_Source\PSoC4/CyLib.c **** 
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2842:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2843:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2844:Generated_Source\PSoC4/CyLib.c **** *
2845:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2846:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 113


2847:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2848:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2849:Generated_Source\PSoC4/CyLib.c **** *
2850:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2851:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2852:Generated_Source\PSoC4/CyLib.c **** {
 3285              		.loc 1 2852 0
 3286              		.cfi_startproc
 3287              		@ args = 0, pretend = 0, frame = 0
 3288              		@ frame_needed = 0, uses_anonymous_args = 0
 3289              		@ link register save eliminated.
2853:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 3290              		.loc 1 2853 0
 3291 0000 024A     		ldr	r2, .L235
 3292 0002 1168     		ldr	r1, [r2]
 3293 0004 0223     		movs	r3, #2
 3294 0006 0B43     		orrs	r3, r1
 3295 0008 1360     		str	r3, [r2]
2854:Generated_Source\PSoC4/CyLib.c **** }
 3296              		.loc 1 2854 0
 3297              		@ sp needed
 3298 000a 7047     		bx	lr
 3299              	.L236:
 3300              		.align	2
 3301              	.L235:
 3302 000c 10E000E0 		.word	-536813552
 3303              		.cfi_endproc
 3304              	.LFE51:
 3305              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 3306              		.section	.text.CySysTickEnable,"ax",%progbits
 3307              		.align	2
 3308              		.global	CySysTickEnable
 3309              		.code	16
 3310              		.thumb_func
 3311              		.type	CySysTickEnable, %function
 3312              	CySysTickEnable:
 3313              	.LFB49:
2819:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 3314              		.loc 1 2819 0
 3315              		.cfi_startproc
 3316              		@ args = 0, pretend = 0, frame = 0
 3317              		@ frame_needed = 0, uses_anonymous_args = 0
 3318 0000 10B5     		push	{r4, lr}
 3319              		.cfi_def_cfa_offset 8
 3320              		.cfi_offset 4, -8
 3321              		.cfi_offset 14, -4
2820:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 3322              		.loc 1 2820 0
 3323 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 3324              	.LVL378:
2821:Generated_Source\PSoC4/CyLib.c **** }
 3325              		.loc 1 2821 0
 3326 0006 034A     		ldr	r2, .L238
 3327 0008 1168     		ldr	r1, [r2]
 3328 000a 0123     		movs	r3, #1
 3329 000c 0B43     		orrs	r3, r1
 3330 000e 1360     		str	r3, [r2]
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 114


2822:Generated_Source\PSoC4/CyLib.c **** 
 3331              		.loc 1 2822 0
 3332              		@ sp needed
 3333 0010 10BD     		pop	{r4, pc}
 3334              	.L239:
 3335 0012 C046     		.align	2
 3336              	.L238:
 3337 0014 10E000E0 		.word	-536813552
 3338              		.cfi_endproc
 3339              	.LFE49:
 3340              		.size	CySysTickEnable, .-CySysTickEnable
 3341              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 3342              		.align	2
 3343              		.global	CySysTickDisableInterrupt
 3344              		.code	16
 3345              		.thumb_func
 3346              		.type	CySysTickDisableInterrupt, %function
 3347              	CySysTickDisableInterrupt:
 3348              	.LFB52:
2855:Generated_Source\PSoC4/CyLib.c **** 
2856:Generated_Source\PSoC4/CyLib.c **** 
2857:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2858:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2859:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2862:Generated_Source\PSoC4/CyLib.c **** *
2863:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2864:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2865:Generated_Source\PSoC4/CyLib.c **** *
2866:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2867:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2868:Generated_Source\PSoC4/CyLib.c **** {
 3349              		.loc 1 2868 0
 3350              		.cfi_startproc
 3351              		@ args = 0, pretend = 0, frame = 0
 3352              		@ frame_needed = 0, uses_anonymous_args = 0
 3353              		@ link register save eliminated.
2869:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 3354              		.loc 1 2869 0
 3355 0000 024A     		ldr	r2, .L241
 3356 0002 1368     		ldr	r3, [r2]
 3357 0004 0221     		movs	r1, #2
 3358 0006 8B43     		bics	r3, r1
 3359 0008 1360     		str	r3, [r2]
2870:Generated_Source\PSoC4/CyLib.c **** }
 3360              		.loc 1 2870 0
 3361              		@ sp needed
 3362 000a 7047     		bx	lr
 3363              	.L242:
 3364              		.align	2
 3365              	.L241:
 3366 000c 10E000E0 		.word	-536813552
 3367              		.cfi_endproc
 3368              	.LFE52:
 3369              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 3370              		.section	.text.CySysTickSetReload,"ax",%progbits
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 115


 3371              		.align	2
 3372              		.global	CySysTickSetReload
 3373              		.code	16
 3374              		.thumb_func
 3375              		.type	CySysTickSetReload, %function
 3376              	CySysTickSetReload:
 3377              	.LFB53:
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** 
2873:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2874:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2875:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2876:Generated_Source\PSoC4/CyLib.c **** *
2877:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2878:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2879:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2880:Generated_Source\PSoC4/CyLib.c **** *
2881:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2882:Generated_Source\PSoC4/CyLib.c **** *
2883:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2884:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2885:Generated_Source\PSoC4/CyLib.c **** {
 3378              		.loc 1 2885 0
 3379              		.cfi_startproc
 3380              		@ args = 0, pretend = 0, frame = 0
 3381              		@ frame_needed = 0, uses_anonymous_args = 0
 3382              		@ link register save eliminated.
 3383              	.LVL379:
2886:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 3384              		.loc 1 2886 0
 3385 0000 0002     		lsls	r0, r0, #8
 3386              	.LVL380:
 3387 0002 000A     		lsrs	r0, r0, #8
 3388 0004 014B     		ldr	r3, .L244
 3389 0006 1860     		str	r0, [r3]
2887:Generated_Source\PSoC4/CyLib.c **** }
 3390              		.loc 1 2887 0
 3391              		@ sp needed
 3392 0008 7047     		bx	lr
 3393              	.L245:
 3394 000a C046     		.align	2
 3395              	.L244:
 3396 000c 14E000E0 		.word	-536813548
 3397              		.cfi_endproc
 3398              	.LFE53:
 3399              		.size	CySysTickSetReload, .-CySysTickSetReload
 3400              		.section	.text.CySysTickGetReload,"ax",%progbits
 3401              		.align	2
 3402              		.global	CySysTickGetReload
 3403              		.code	16
 3404              		.thumb_func
 3405              		.type	CySysTickGetReload, %function
 3406              	CySysTickGetReload:
 3407              	.LFB54:
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 116


2891:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2892:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2893:Generated_Source\PSoC4/CyLib.c **** *
2894:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2895:Generated_Source\PSoC4/CyLib.c **** *
2896:Generated_Source\PSoC4/CyLib.c **** * \return
2897:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2900:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2901:Generated_Source\PSoC4/CyLib.c **** {
 3408              		.loc 1 2901 0
 3409              		.cfi_startproc
 3410              		@ args = 0, pretend = 0, frame = 0
 3411              		@ frame_needed = 0, uses_anonymous_args = 0
 3412              		@ link register save eliminated.
2902:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 3413              		.loc 1 2902 0
 3414 0000 024B     		ldr	r3, .L247
 3415 0002 1868     		ldr	r0, [r3]
 3416 0004 0002     		lsls	r0, r0, #8
 3417 0006 000A     		lsrs	r0, r0, #8
2903:Generated_Source\PSoC4/CyLib.c **** }
 3418              		.loc 1 2903 0
 3419              		@ sp needed
 3420 0008 7047     		bx	lr
 3421              	.L248:
 3422 000a C046     		.align	2
 3423              	.L247:
 3424 000c 14E000E0 		.word	-536813548
 3425              		.cfi_endproc
 3426              	.LFE54:
 3427              		.size	CySysTickGetReload, .-CySysTickGetReload
 3428              		.section	.text.CySysTickGetValue,"ax",%progbits
 3429              		.align	2
 3430              		.global	CySysTickGetValue
 3431              		.code	16
 3432              		.thumb_func
 3433              		.type	CySysTickGetValue, %function
 3434              	CySysTickGetValue:
 3435              	.LFB55:
2904:Generated_Source\PSoC4/CyLib.c **** 
2905:Generated_Source\PSoC4/CyLib.c **** 
2906:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2907:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2908:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2911:Generated_Source\PSoC4/CyLib.c **** *
2912:Generated_Source\PSoC4/CyLib.c **** * \return
2913:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2914:Generated_Source\PSoC4/CyLib.c **** *
2915:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2916:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2917:Generated_Source\PSoC4/CyLib.c **** {
 3436              		.loc 1 2917 0
 3437              		.cfi_startproc
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 117


 3438              		@ args = 0, pretend = 0, frame = 0
 3439              		@ frame_needed = 0, uses_anonymous_args = 0
 3440              		@ link register save eliminated.
2918:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 3441              		.loc 1 2918 0
 3442 0000 024B     		ldr	r3, .L250
 3443 0002 1868     		ldr	r0, [r3]
 3444 0004 0002     		lsls	r0, r0, #8
 3445 0006 000A     		lsrs	r0, r0, #8
2919:Generated_Source\PSoC4/CyLib.c **** }
 3446              		.loc 1 2919 0
 3447              		@ sp needed
 3448 0008 7047     		bx	lr
 3449              	.L251:
 3450 000a C046     		.align	2
 3451              	.L250:
 3452 000c 18E000E0 		.word	-536813544
 3453              		.cfi_endproc
 3454              	.LFE55:
 3455              		.size	CySysTickGetValue, .-CySysTickGetValue
 3456              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 3457              		.align	2
 3458              		.global	CySysTickSetClockSource
 3459              		.code	16
 3460              		.thumb_func
 3461              		.type	CySysTickSetClockSource, %function
 3462              	CySysTickSetClockSource:
 3463              	.LFB56:
2920:Generated_Source\PSoC4/CyLib.c **** 
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2923:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2925:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c ****     *
2927:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2928:Generated_Source\PSoC4/CyLib.c ****     *
2929:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2930:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2931:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2932:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2933:Generated_Source\PSoC4/CyLib.c ****     *
2934:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2935:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2936:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2937:Generated_Source\PSoC4/CyLib.c ****     *
2938:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2939:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2940:Generated_Source\PSoC4/CyLib.c ****     *
2941:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2942:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2943:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2944:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2945:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2946:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2947:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2948:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 118


2949:Generated_Source\PSoC4/CyLib.c ****     {
 3464              		.loc 1 2949 0
 3465              		.cfi_startproc
 3466              		@ args = 0, pretend = 0, frame = 0
 3467              		@ frame_needed = 0, uses_anonymous_args = 0
 3468              		@ link register save eliminated.
 3469              	.LVL381:
2950:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 3470              		.loc 1 2950 0
 3471 0000 0128     		cmp	r0, #1
 3472 0002 05D1     		bne	.L253
2951:Generated_Source\PSoC4/CyLib.c ****         {
2952:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 3473              		.loc 1 2952 0
 3474 0004 054A     		ldr	r2, .L255
 3475 0006 1168     		ldr	r1, [r2]
 3476 0008 0423     		movs	r3, #4
 3477 000a 0B43     		orrs	r3, r1
 3478 000c 1360     		str	r3, [r2]
 3479 000e 04E0     		b	.L252
 3480              	.L253:
2953:Generated_Source\PSoC4/CyLib.c ****         }
2954:Generated_Source\PSoC4/CyLib.c ****         else
2955:Generated_Source\PSoC4/CyLib.c ****         {
2956:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 3481              		.loc 1 2956 0
 3482 0010 024A     		ldr	r2, .L255
 3483 0012 1368     		ldr	r3, [r2]
 3484 0014 0421     		movs	r1, #4
 3485 0016 8B43     		bics	r3, r1
 3486 0018 1360     		str	r3, [r2]
 3487              	.L252:
2957:Generated_Source\PSoC4/CyLib.c ****         }
2958:Generated_Source\PSoC4/CyLib.c ****     }
 3488              		.loc 1 2958 0
 3489              		@ sp needed
 3490 001a 7047     		bx	lr
 3491              	.L256:
 3492              		.align	2
 3493              	.L255:
 3494 001c 10E000E0 		.word	-536813552
 3495              		.cfi_endproc
 3496              	.LFE56:
 3497              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 3498              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 3499              		.align	2
 3500              		.global	CySysTickGetClockSource
 3501              		.code	16
 3502              		.thumb_func
 3503              		.type	CySysTickGetClockSource, %function
 3504              	CySysTickGetClockSource:
 3505              	.LFB57:
2959:Generated_Source\PSoC4/CyLib.c **** 
2960:Generated_Source\PSoC4/CyLib.c ****     
2961:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2962:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2963:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 119


2964:Generated_Source\PSoC4/CyLib.c ****     *
2965:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2966:Generated_Source\PSoC4/CyLib.c ****     *
2967:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2968:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2969:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2970:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2971:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2972:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2973:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2974:Generated_Source\PSoC4/CyLib.c ****     {
 3506              		.loc 1 2974 0
 3507              		.cfi_startproc
 3508              		@ args = 0, pretend = 0, frame = 0
 3509              		@ frame_needed = 0, uses_anonymous_args = 0
 3510              		@ link register save eliminated.
2975:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 3511              		.loc 1 2975 0
 3512 0000 024B     		ldr	r3, .L258
 3513 0002 1868     		ldr	r0, [r3]
 3514 0004 8008     		lsrs	r0, r0, #2
 3515 0006 0123     		movs	r3, #1
 3516 0008 1840     		ands	r0, r3
2976:Generated_Source\PSoC4/CyLib.c ****     }
 3517              		.loc 1 2976 0
 3518              		@ sp needed
 3519 000a 7047     		bx	lr
 3520              	.L259:
 3521              		.align	2
 3522              	.L258:
 3523 000c 10E000E0 		.word	-536813552
 3524              		.cfi_endproc
 3525              	.LFE57:
 3526              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 3527              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 3528              		.align	2
 3529              		.global	CySysTickGetCountFlag
 3530              		.code	16
 3531              		.thumb_func
 3532              		.type	CySysTickGetCountFlag, %function
 3533              	CySysTickGetCountFlag:
 3534              	.LFB58:
2977:Generated_Source\PSoC4/CyLib.c ****     
2978:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2979:Generated_Source\PSoC4/CyLib.c **** 
2980:Generated_Source\PSoC4/CyLib.c **** 
2981:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2982:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2983:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2984:Generated_Source\PSoC4/CyLib.c **** *
2985:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2986:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2987:Generated_Source\PSoC4/CyLib.c **** *
2988:Generated_Source\PSoC4/CyLib.c **** * \return
2989:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2990:Generated_Source\PSoC4/CyLib.c **** *
2991:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 120


2992:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2993:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2994:Generated_Source\PSoC4/CyLib.c **** *
2995:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2996:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2997:Generated_Source\PSoC4/CyLib.c **** {
 3535              		.loc 1 2997 0
 3536              		.cfi_startproc
 3537              		@ args = 0, pretend = 0, frame = 0
 3538              		@ frame_needed = 0, uses_anonymous_args = 0
 3539              		@ link register save eliminated.
2998:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 3540              		.loc 1 2998 0
 3541 0000 024B     		ldr	r3, .L261
 3542 0002 1868     		ldr	r0, [r3]
 3543 0004 000C     		lsrs	r0, r0, #16
 3544 0006 0123     		movs	r3, #1
 3545 0008 1840     		ands	r0, r3
2999:Generated_Source\PSoC4/CyLib.c **** }
 3546              		.loc 1 2999 0
 3547              		@ sp needed
 3548 000a 7047     		bx	lr
 3549              	.L262:
 3550              		.align	2
 3551              	.L261:
 3552 000c 10E000E0 		.word	-536813552
 3553              		.cfi_endproc
 3554              	.LFE58:
 3555              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 3556              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 3557              		.align	2
 3558              		.code	16
 3559              		.thumb_func
 3560              		.type	CySysTickServiceCallbacks, %function
 3561              	CySysTickServiceCallbacks:
 3562              	.LFB62:
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c **** 
3002:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3003:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3004:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3005:Generated_Source\PSoC4/CyLib.c **** *
3006:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3007:Generated_Source\PSoC4/CyLib.c **** *
3008:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3009:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3010:Generated_Source\PSoC4/CyLib.c **** {
3011:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3012:Generated_Source\PSoC4/CyLib.c **** }
3013:Generated_Source\PSoC4/CyLib.c **** 
3014:Generated_Source\PSoC4/CyLib.c **** 
3015:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3016:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3017:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3018:Generated_Source\PSoC4/CyLib.c **** *
3019:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3020:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 121


3021:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3022:Generated_Source\PSoC4/CyLib.c **** *
3023:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3024:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3025:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3026:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3027:Generated_Source\PSoC4/CyLib.c **** *  functions.
3028:Generated_Source\PSoC4/CyLib.c **** *
3029:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3030:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3031:Generated_Source\PSoC4/CyLib.c **** *
3032:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3033:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3034:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3035:Generated_Source\PSoC4/CyLib.c **** *
3036:Generated_Source\PSoC4/CyLib.c **** * \return
3037:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3038:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3039:Generated_Source\PSoC4/CyLib.c **** *
3040:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3041:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3042:Generated_Source\PSoC4/CyLib.c **** *
3043:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3044:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3045:Generated_Source\PSoC4/CyLib.c **** {
3046:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3047:Generated_Source\PSoC4/CyLib.c **** 
3048:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3049:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3050:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3051:Generated_Source\PSoC4/CyLib.c **** }
3052:Generated_Source\PSoC4/CyLib.c **** 
3053:Generated_Source\PSoC4/CyLib.c **** 
3054:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3055:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3056:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3059:Generated_Source\PSoC4/CyLib.c **** *
3060:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3061:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3062:Generated_Source\PSoC4/CyLib.c **** *
3063:Generated_Source\PSoC4/CyLib.c **** * \return
3064:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3065:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3066:Generated_Source\PSoC4/CyLib.c **** *
3067:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3068:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3069:Generated_Source\PSoC4/CyLib.c **** {
3070:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3071:Generated_Source\PSoC4/CyLib.c **** }
3072:Generated_Source\PSoC4/CyLib.c **** 
3073:Generated_Source\PSoC4/CyLib.c **** 
3074:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3075:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3076:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3077:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 122


3078:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3081:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3082:Generated_Source\PSoC4/CyLib.c **** {
 3563              		.loc 1 3082 0
 3564              		.cfi_startproc
 3565              		@ args = 0, pretend = 0, frame = 0
 3566              		@ frame_needed = 0, uses_anonymous_args = 0
 3567 0000 10B5     		push	{r4, lr}
 3568              		.cfi_def_cfa_offset 8
 3569              		.cfi_offset 4, -8
 3570              		.cfi_offset 14, -4
3083:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3084:Generated_Source\PSoC4/CyLib.c **** 
3085:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3086:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 3571              		.loc 1 3086 0
 3572 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 3573              	.LVL382:
 3574 0006 0128     		cmp	r0, #1
 3575 0008 0BD1     		bne	.L263
 3576 000a 07E0     		b	.L268
 3577              	.LVL383:
 3578              	.L267:
3087:Generated_Source\PSoC4/CyLib.c ****     {
3088:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3089:Generated_Source\PSoC4/CyLib.c ****         {
3090:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 3579              		.loc 1 3090 0
 3580 000c A300     		lsls	r3, r4, #2
 3581 000e 054A     		ldr	r2, .L269
 3582 0010 9B58     		ldr	r3, [r3, r2]
 3583 0012 002B     		cmp	r3, #0
 3584 0014 00D0     		beq	.L266
3091:Generated_Source\PSoC4/CyLib.c ****             {
3092:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 3585              		.loc 1 3092 0
 3586 0016 9847     		blx	r3
 3587              	.LVL384:
 3588              	.L266:
3088:Generated_Source\PSoC4/CyLib.c ****         {
 3589              		.loc 1 3088 0 discriminator 2
 3590 0018 0134     		adds	r4, r4, #1
 3591              	.LVL385:
 3592 001a 00E0     		b	.L264
 3593              	.LVL386:
 3594              	.L268:
 3595 001c 0024     		movs	r4, #0
 3596              	.L264:
 3597              	.LVL387:
3088:Generated_Source\PSoC4/CyLib.c ****         {
 3598              		.loc 1 3088 0 is_stmt 0 discriminator 1
 3599 001e 042C     		cmp	r4, #4
 3600 0020 F4D9     		bls	.L267
 3601              	.LVL388:
 3602              	.L263:
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 123


3093:Generated_Source\PSoC4/CyLib.c ****             }
3094:Generated_Source\PSoC4/CyLib.c ****         }
3095:Generated_Source\PSoC4/CyLib.c ****     }
3096:Generated_Source\PSoC4/CyLib.c **** }
 3603              		.loc 1 3096 0 is_stmt 1
 3604              		@ sp needed
 3605 0022 10BD     		pop	{r4, pc}
 3606              	.L270:
 3607              		.align	2
 3608              	.L269:
 3609 0024 00000000 		.word	.LANCHOR2
 3610              		.cfi_endproc
 3611              	.LFE62:
 3612              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 3613              		.section	.text.CySysTickClear,"ax",%progbits
 3614              		.align	2
 3615              		.global	CySysTickClear
 3616              		.code	16
 3617              		.thumb_func
 3618              		.type	CySysTickClear, %function
 3619              	CySysTickClear:
 3620              	.LFB59:
3010:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 3621              		.loc 1 3010 0
 3622              		.cfi_startproc
 3623              		@ args = 0, pretend = 0, frame = 0
 3624              		@ frame_needed = 0, uses_anonymous_args = 0
 3625              		@ link register save eliminated.
3011:Generated_Source\PSoC4/CyLib.c **** }
 3626              		.loc 1 3011 0
 3627 0000 0022     		movs	r2, #0
 3628 0002 014B     		ldr	r3, .L272
 3629 0004 1A60     		str	r2, [r3]
3012:Generated_Source\PSoC4/CyLib.c **** 
 3630              		.loc 1 3012 0
 3631              		@ sp needed
 3632 0006 7047     		bx	lr
 3633              	.L273:
 3634              		.align	2
 3635              	.L272:
 3636 0008 18E000E0 		.word	-536813544
 3637              		.cfi_endproc
 3638              	.LFE59:
 3639              		.size	CySysTickClear, .-CySysTickClear
 3640              		.section	.text.CySysTickInit,"ax",%progbits
 3641              		.align	2
 3642              		.global	CySysTickInit
 3643              		.code	16
 3644              		.thumb_func
 3645              		.type	CySysTickInit, %function
 3646              	CySysTickInit:
 3647              	.LFB48:
2789:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 3648              		.loc 1 2789 0
 3649              		.cfi_startproc
 3650              		@ args = 0, pretend = 0, frame = 0
 3651              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 124


 3652 0000 10B5     		push	{r4, lr}
 3653              		.cfi_def_cfa_offset 8
 3654              		.cfi_offset 4, -8
 3655              		.cfi_offset 14, -4
 3656              	.LVL389:
2792:Generated_Source\PSoC4/CyLib.c ****     {
 3657              		.loc 1 2792 0
 3658 0002 0023     		movs	r3, #0
 3659 0004 04E0     		b	.L275
 3660              	.LVL390:
 3661              	.L276:
2794:Generated_Source\PSoC4/CyLib.c ****     }
 3662              		.loc 1 2794 0 discriminator 3
 3663 0006 9900     		lsls	r1, r3, #2
 3664 0008 0020     		movs	r0, #0
 3665 000a 0B4A     		ldr	r2, .L277
 3666 000c 8850     		str	r0, [r1, r2]
2792:Generated_Source\PSoC4/CyLib.c ****     {
 3667              		.loc 1 2792 0 discriminator 3
 3668 000e 0133     		adds	r3, r3, #1
 3669              	.LVL391:
 3670              	.L275:
2792:Generated_Source\PSoC4/CyLib.c ****     {
 3671              		.loc 1 2792 0 is_stmt 0 discriminator 1
 3672 0010 042B     		cmp	r3, #4
 3673 0012 F8D9     		bls	.L276
2797:Generated_Source\PSoC4/CyLib.c **** 
 3674              		.loc 1 2797 0 is_stmt 1
 3675 0014 0949     		ldr	r1, .L277+4
 3676 0016 0F20     		movs	r0, #15
 3677 0018 FFF7FEFF 		bl	CyIntSetSysVector
 3678              	.LVL392:
2800:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 3679              		.loc 1 2800 0
 3680 001c 0120     		movs	r0, #1
 3681 001e FFF7FEFF 		bl	CySysTickSetClockSource
 3682              	.LVL393:
2803:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 3683              		.loc 1 2803 0
 3684 0022 074B     		ldr	r3, .L277+8
 3685 0024 1869     		ldr	r0, [r3, #16]
 3686 0026 FA21     		movs	r1, #250
 3687 0028 8900     		lsls	r1, r1, #2
 3688 002a FFF7FEFF 		bl	__aeabi_uidiv
 3689              	.LVL394:
 3690 002e FFF7FEFF 		bl	CySysTickSetReload
 3691              	.LVL395:
2804:Generated_Source\PSoC4/CyLib.c **** }
 3692              		.loc 1 2804 0
 3693 0032 FFF7FEFF 		bl	CySysTickClear
 3694              	.LVL396:
2805:Generated_Source\PSoC4/CyLib.c **** 
 3695              		.loc 1 2805 0
 3696              		@ sp needed
 3697 0036 10BD     		pop	{r4, pc}
 3698              	.L278:
 3699              		.align	2
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 125


 3700              	.L277:
 3701 0038 00000000 		.word	.LANCHOR2
 3702 003c 00000000 		.word	CySysTickServiceCallbacks
 3703 0040 00000000 		.word	.LANCHOR0
 3704              		.cfi_endproc
 3705              	.LFE48:
 3706              		.size	CySysTickInit, .-CySysTickInit
 3707              		.section	.text.CySysTickStart,"ax",%progbits
 3708              		.align	2
 3709              		.global	CySysTickStart
 3710              		.code	16
 3711              		.thumb_func
 3712              		.type	CySysTickStart, %function
 3713              	CySysTickStart:
 3714              	.LFB47:
2760:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 3715              		.loc 1 2760 0
 3716              		.cfi_startproc
 3717              		@ args = 0, pretend = 0, frame = 0
 3718              		@ frame_needed = 0, uses_anonymous_args = 0
 3719 0000 10B5     		push	{r4, lr}
 3720              		.cfi_def_cfa_offset 8
 3721              		.cfi_offset 4, -8
 3722              		.cfi_offset 14, -4
2761:Generated_Source\PSoC4/CyLib.c ****     {
 3723              		.loc 1 2761 0
 3724 0002 064B     		ldr	r3, .L281
 3725 0004 5B69     		ldr	r3, [r3, #20]
 3726 0006 002B     		cmp	r3, #0
 3727 0008 04D1     		bne	.L280
2763:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 3728              		.loc 1 2763 0
 3729 000a FFF7FEFF 		bl	CySysTickInit
 3730              	.LVL397:
2764:Generated_Source\PSoC4/CyLib.c ****     }
 3731              		.loc 1 2764 0
 3732 000e 0122     		movs	r2, #1
 3733 0010 024B     		ldr	r3, .L281
 3734 0012 5A61     		str	r2, [r3, #20]
 3735              	.L280:
2767:Generated_Source\PSoC4/CyLib.c **** }
 3736              		.loc 1 2767 0
 3737 0014 FFF7FEFF 		bl	CySysTickEnable
 3738              	.LVL398:
2768:Generated_Source\PSoC4/CyLib.c **** 
 3739              		.loc 1 2768 0
 3740              		@ sp needed
 3741 0018 10BD     		pop	{r4, pc}
 3742              	.L282:
 3743 001a C046     		.align	2
 3744              	.L281:
 3745 001c 00000000 		.word	.LANCHOR2
 3746              		.cfi_endproc
 3747              	.LFE47:
 3748              		.size	CySysTickStart, .-CySysTickStart
 3749              		.section	.text.CySysTickSetCallback,"ax",%progbits
 3750              		.align	2
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 126


 3751              		.global	CySysTickSetCallback
 3752              		.code	16
 3753              		.thumb_func
 3754              		.type	CySysTickSetCallback, %function
 3755              	CySysTickSetCallback:
 3756              	.LFB60:
3045:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 3757              		.loc 1 3045 0
 3758              		.cfi_startproc
 3759              		@ args = 0, pretend = 0, frame = 0
 3760              		@ frame_needed = 0, uses_anonymous_args = 0
 3761              		@ link register save eliminated.
 3762              	.LVL399:
3048:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 3763              		.loc 1 3048 0
 3764 0000 024A     		ldr	r2, .L284
 3765 0002 8300     		lsls	r3, r0, #2
 3766 0004 9858     		ldr	r0, [r3, r2]
 3767              	.LVL400:
3049:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 3768              		.loc 1 3049 0
 3769 0006 9950     		str	r1, [r3, r2]
3051:Generated_Source\PSoC4/CyLib.c **** 
 3770              		.loc 1 3051 0
 3771              		@ sp needed
 3772 0008 7047     		bx	lr
 3773              	.L285:
 3774 000a C046     		.align	2
 3775              	.L284:
 3776 000c 00000000 		.word	.LANCHOR2
 3777              		.cfi_endproc
 3778              	.LFE60:
 3779              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 3780              		.section	.text.CySysTickGetCallback,"ax",%progbits
 3781              		.align	2
 3782              		.global	CySysTickGetCallback
 3783              		.code	16
 3784              		.thumb_func
 3785              		.type	CySysTickGetCallback, %function
 3786              	CySysTickGetCallback:
 3787              	.LFB61:
3069:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 3788              		.loc 1 3069 0
 3789              		.cfi_startproc
 3790              		@ args = 0, pretend = 0, frame = 0
 3791              		@ frame_needed = 0, uses_anonymous_args = 0
 3792              		@ link register save eliminated.
 3793              	.LVL401:
3070:Generated_Source\PSoC4/CyLib.c **** }
 3794              		.loc 1 3070 0
 3795 0000 8000     		lsls	r0, r0, #2
 3796              	.LVL402:
 3797 0002 014B     		ldr	r3, .L287
 3798 0004 C058     		ldr	r0, [r0, r3]
3071:Generated_Source\PSoC4/CyLib.c **** 
 3799              		.loc 1 3071 0
 3800              		@ sp needed
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 127


 3801 0006 7047     		bx	lr
 3802              	.L288:
 3803              		.align	2
 3804              	.L287:
 3805 0008 00000000 		.word	.LANCHOR2
 3806              		.cfi_endproc
 3807              	.LFE61:
 3808              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 3809              		.section	.text.CyGetUniqueId,"ax",%progbits
 3810              		.align	2
 3811              		.global	CyGetUniqueId
 3812              		.code	16
 3813              		.thumb_func
 3814              		.type	CyGetUniqueId, %function
 3815              	CyGetUniqueId:
 3816              	.LFB63:
3097:Generated_Source\PSoC4/CyLib.c **** 
3098:Generated_Source\PSoC4/CyLib.c **** 
3099:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3100:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3101:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3102:Generated_Source\PSoC4/CyLib.c **** *
3103:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3104:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3105:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3106:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3107:Generated_Source\PSoC4/CyLib.c **** *
3108:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3109:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3110:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3111:Generated_Source\PSoC4/CyLib.c **** *
3112:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3113:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3114:Generated_Source\PSoC4/CyLib.c **** {
 3817              		.loc 1 3114 0
 3818              		.cfi_startproc
 3819              		@ args = 0, pretend = 0, frame = 0
 3820              		@ frame_needed = 0, uses_anonymous_args = 0
 3821              		@ link register save eliminated.
 3822              	.LVL403:
3115:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3116:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 3823              		.loc 1 3116 0
 3824 0000 134B     		ldr	r3, .L290
 3825 0002 1B78     		ldrb	r3, [r3]
 3826 0004 DAB2     		uxtb	r2, r3
 3827 0006 0260     		str	r2, [r0]
3117:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 3828              		.loc 1 3117 0
 3829 0008 124B     		ldr	r3, .L290+4
 3830 000a 1B78     		ldrb	r3, [r3]
 3831 000c 1B02     		lsls	r3, r3, #8
 3832 000e 1343     		orrs	r3, r2
 3833 0010 0360     		str	r3, [r0]
3118:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 3834              		.loc 1 3118 0
 3835 0012 114A     		ldr	r2, .L290+8
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 128


 3836 0014 1278     		ldrb	r2, [r2]
 3837 0016 1204     		lsls	r2, r2, #16
 3838 0018 1343     		orrs	r3, r2
 3839 001a 0360     		str	r3, [r0]
3119:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 3840              		.loc 1 3119 0
 3841 001c 0F4A     		ldr	r2, .L290+12
 3842 001e 1278     		ldrb	r2, [r2]
 3843 0020 1206     		lsls	r2, r2, #24
 3844 0022 1343     		orrs	r3, r2
 3845 0024 0360     		str	r3, [r0]
3120:Generated_Source\PSoC4/CyLib.c **** 
3121:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 3846              		.loc 1 3121 0
 3847 0026 0E4B     		ldr	r3, .L290+16
 3848 0028 1B78     		ldrb	r3, [r3]
 3849 002a DAB2     		uxtb	r2, r3
 3850 002c 4260     		str	r2, [r0, #4]
3122:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 3851              		.loc 1 3122 0
 3852 002e 0D4B     		ldr	r3, .L290+20
 3853 0030 1B78     		ldrb	r3, [r3]
 3854 0032 1B02     		lsls	r3, r3, #8
 3855 0034 1343     		orrs	r3, r2
 3856 0036 4360     		str	r3, [r0, #4]
3123:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 3857              		.loc 1 3123 0
 3858 0038 0B4A     		ldr	r2, .L290+24
 3859 003a 1278     		ldrb	r2, [r2]
 3860 003c 1204     		lsls	r2, r2, #16
 3861 003e 1343     		orrs	r3, r2
 3862 0040 4360     		str	r3, [r0, #4]
3124:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 3863              		.loc 1 3124 0
 3864 0042 0A4A     		ldr	r2, .L290+28
 3865 0044 1278     		ldrb	r2, [r2]
 3866 0046 1206     		lsls	r2, r2, #24
 3867 0048 1343     		orrs	r3, r2
 3868 004a 4360     		str	r3, [r0, #4]
3125:Generated_Source\PSoC4/CyLib.c **** #else
3126:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3127:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3128:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3129:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3130:Generated_Source\PSoC4/CyLib.c **** 
3131:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3132:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3133:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3134:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3135:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3136:Generated_Source\PSoC4/CyLib.c **** }
 3869              		.loc 1 3136 0
 3870              		@ sp needed
 3871 004c 7047     		bx	lr
 3872              	.L291:
 3873 004e C046     		.align	2
 3874              	.L290:
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 129


 3875 0050 78F2FF0F 		.word	268431992
 3876 0054 79F2FF0F 		.word	268431993
 3877 0058 7AF2FF0F 		.word	268431994
 3878 005c 7BF2FF0F 		.word	268431995
 3879 0060 7CF2FF0F 		.word	268431996
 3880 0064 7DF2FF0F 		.word	268431997
 3881 0068 7EF2FF0F 		.word	268431998
 3882 006c 7FF2FF0F 		.word	268431999
 3883              		.cfi_endproc
 3884              	.LFE63:
 3885              		.size	CyGetUniqueId, .-CyGetUniqueId
 3886              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 3887              		.align	2
 3888              		.global	CySysSetRamAccessArbPriority
 3889              		.code	16
 3890              		.thumb_func
 3891              		.type	CySysSetRamAccessArbPriority, %function
 3892              	CySysSetRamAccessArbPriority:
 3893              	.LFB64:
3137:Generated_Source\PSoC4/CyLib.c **** 
3138:Generated_Source\PSoC4/CyLib.c **** 
3139:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3140:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3141:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3142:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3143:Generated_Source\PSoC4/CyLib.c ****     *
3144:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3145:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3146:Generated_Source\PSoC4/CyLib.c ****     *  details.
3147:Generated_Source\PSoC4/CyLib.c ****     *
3148:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3149:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3150:Generated_Source\PSoC4/CyLib.c ****     *
3151:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3152:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3153:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3154:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3155:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3156:Generated_Source\PSoC4/CyLib.c ****     *
3157:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3158:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3159:Generated_Source\PSoC4/CyLib.c ****     {
 3894              		.loc 1 3159 0
 3895              		.cfi_startproc
 3896              		@ args = 0, pretend = 0, frame = 0
 3897              		@ frame_needed = 0, uses_anonymous_args = 0
 3898              		@ link register save eliminated.
 3899              	.LVL404:
3160:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3161:Generated_Source\PSoC4/CyLib.c **** 
3162:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 3900              		.loc 1 3162 0
 3901 0000 0549     		ldr	r1, .L293
 3902 0002 0A68     		ldr	r2, [r1]
 3903 0004 054B     		ldr	r3, .L293+4
 3904 0006 1A40     		ands	r2, r3
 3905              	.LVL405:
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 130


3163:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 3906              		.loc 1 3163 0
 3907 0008 4004     		lsls	r0, r0, #17
 3908              	.LVL406:
 3909 000a C023     		movs	r3, #192
 3910 000c DB02     		lsls	r3, r3, #11
 3911 000e 1840     		ands	r0, r3
 3912 0010 1043     		orrs	r0, r2
 3913              	.LVL407:
3164:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 3914              		.loc 1 3164 0
 3915 0012 0860     		str	r0, [r1]
3165:Generated_Source\PSoC4/CyLib.c ****     }
 3916              		.loc 1 3165 0
 3917              		@ sp needed
 3918 0014 7047     		bx	lr
 3919              	.L294:
 3920 0016 C046     		.align	2
 3921              	.L293:
 3922 0018 38001040 		.word	1074790456
 3923 001c FFFFF9FF 		.word	-393217
 3924              		.cfi_endproc
 3925              	.LFE64:
 3926              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 3927              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 3928              		.align	2
 3929              		.global	CySysSetFlashAccessArbPriority
 3930              		.code	16
 3931              		.thumb_func
 3932              		.type	CySysSetFlashAccessArbPriority, %function
 3933              	CySysSetFlashAccessArbPriority:
 3934              	.LFB65:
3166:Generated_Source\PSoC4/CyLib.c **** 
3167:Generated_Source\PSoC4/CyLib.c **** 
3168:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3169:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3170:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3171:Generated_Source\PSoC4/CyLib.c ****     *
3172:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3173:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3174:Generated_Source\PSoC4/CyLib.c ****     *  details.
3175:Generated_Source\PSoC4/CyLib.c ****     *
3176:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3177:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3178:Generated_Source\PSoC4/CyLib.c ****     *
3179:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3180:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3181:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3182:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3183:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3184:Generated_Source\PSoC4/CyLib.c ****     *
3185:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3186:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3187:Generated_Source\PSoC4/CyLib.c ****     {
 3935              		.loc 1 3187 0
 3936              		.cfi_startproc
 3937              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 131


 3938              		@ frame_needed = 0, uses_anonymous_args = 0
 3939              		@ link register save eliminated.
 3940              	.LVL408:
3188:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3189:Generated_Source\PSoC4/CyLib.c **** 
3190:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 3941              		.loc 1 3190 0
 3942 0000 0549     		ldr	r1, .L296
 3943 0002 0A68     		ldr	r2, [r1]
 3944 0004 054B     		ldr	r3, .L296+4
 3945 0006 1A40     		ands	r2, r3
 3946              	.LVL409:
3191:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 3947              		.loc 1 3191 0
 3948 0008 4004     		lsls	r0, r0, #17
 3949              	.LVL410:
 3950 000a C023     		movs	r3, #192
 3951 000c DB02     		lsls	r3, r3, #11
 3952 000e 1840     		ands	r0, r3
 3953 0010 1043     		orrs	r0, r2
 3954              	.LVL411:
3192:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 3955              		.loc 1 3192 0
 3956 0012 0860     		str	r0, [r1]
3193:Generated_Source\PSoC4/CyLib.c ****     }
 3957              		.loc 1 3193 0
 3958              		@ sp needed
 3959 0014 7047     		bx	lr
 3960              	.L297:
 3961 0016 C046     		.align	2
 3962              	.L296:
 3963 0018 30001040 		.word	1074790448
 3964 001c FFFFF9FF 		.word	-393217
 3965              		.cfi_endproc
 3966              	.LFE65:
 3967              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 3968              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 3969              		.align	2
 3970              		.global	CySysSetDmacAccessArbPriority
 3971              		.code	16
 3972              		.thumb_func
 3973              		.type	CySysSetDmacAccessArbPriority, %function
 3974              	CySysSetDmacAccessArbPriority:
 3975              	.LFB66:
3194:Generated_Source\PSoC4/CyLib.c **** 
3195:Generated_Source\PSoC4/CyLib.c **** 
3196:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3197:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3198:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3199:Generated_Source\PSoC4/CyLib.c ****     *
3200:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3201:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3202:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3203:Generated_Source\PSoC4/CyLib.c ****     *
3204:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3205:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3206:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 132


3207:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3208:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3209:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3210:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3211:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3212:Generated_Source\PSoC4/CyLib.c ****     *
3213:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3214:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3215:Generated_Source\PSoC4/CyLib.c ****     {
 3976              		.loc 1 3215 0
 3977              		.cfi_startproc
 3978              		@ args = 0, pretend = 0, frame = 0
 3979              		@ frame_needed = 0, uses_anonymous_args = 0
 3980              		@ link register save eliminated.
 3981              	.LVL412:
3216:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3217:Generated_Source\PSoC4/CyLib.c **** 
3218:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 3982              		.loc 1 3218 0
 3983 0000 0549     		ldr	r1, .L299
 3984 0002 0A68     		ldr	r2, [r1]
 3985 0004 054B     		ldr	r3, .L299+4
 3986 0006 1A40     		ands	r2, r3
 3987              	.LVL413:
3219:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 3988              		.loc 1 3219 0
 3989 0008 4004     		lsls	r0, r0, #17
 3990              	.LVL414:
 3991 000a C023     		movs	r3, #192
 3992 000c DB02     		lsls	r3, r3, #11
 3993 000e 1840     		ands	r0, r3
 3994 0010 1043     		orrs	r0, r2
 3995              	.LVL415:
3220:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 3996              		.loc 1 3220 0
 3997 0012 0860     		str	r0, [r1]
3221:Generated_Source\PSoC4/CyLib.c ****     }
 3998              		.loc 1 3221 0
 3999              		@ sp needed
 4000 0014 7047     		bx	lr
 4001              	.L300:
 4002 0016 C046     		.align	2
 4003              	.L299:
 4004 0018 3C001040 		.word	1074790460
 4005 001c FFFFF9FF 		.word	-393217
 4006              		.cfi_endproc
 4007              	.LFE66:
 4008              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 4009              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 4010              		.align	2
 4011              		.global	CySysSetPeripheralAccessArbPriority
 4012              		.code	16
 4013              		.thumb_func
 4014              		.type	CySysSetPeripheralAccessArbPriority, %function
 4015              	CySysSetPeripheralAccessArbPriority:
 4016              	.LFB67:
3222:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 133


3223:Generated_Source\PSoC4/CyLib.c **** 
3224:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3225:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3226:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3227:Generated_Source\PSoC4/CyLib.c ****     *
3228:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3229:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3230:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3231:Generated_Source\PSoC4/CyLib.c ****     *
3232:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3233:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3234:Generated_Source\PSoC4/CyLib.c ****     *
3235:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3236:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3237:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3238:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3239:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3240:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3241:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3242:Generated_Source\PSoC4/CyLib.c ****     *
3243:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3244:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3245:Generated_Source\PSoC4/CyLib.c ****     {
 4017              		.loc 1 3245 0
 4018              		.cfi_startproc
 4019              		@ args = 0, pretend = 0, frame = 0
 4020              		@ frame_needed = 0, uses_anonymous_args = 0
 4021              	.LVL416:
 4022 0000 10B5     		push	{r4, lr}
 4023              		.cfi_def_cfa_offset 8
 4024              		.cfi_offset 4, -8
 4025              		.cfi_offset 14, -4
3246:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3247:Generated_Source\PSoC4/CyLib.c **** 
3248:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 4026              		.loc 1 3248 0
 4027 0002 0028     		cmp	r0, #0
 4028 0004 0AD1     		bne	.L302
3249:Generated_Source\PSoC4/CyLib.c ****         {
3250:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 4029              		.loc 1 3250 0
 4030 0006 1448     		ldr	r0, .L306
 4031              	.LVL417:
 4032 0008 0268     		ldr	r2, [r0]
 4033 000a 144B     		ldr	r3, .L306+4
 4034 000c 1A40     		ands	r2, r3
 4035              	.LVL418:
3251:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 4036              		.loc 1 3251 0
 4037 000e 4904     		lsls	r1, r1, #17
 4038              	.LVL419:
 4039 0010 C023     		movs	r3, #192
 4040 0012 DB02     		lsls	r3, r3, #11
 4041 0014 1940     		ands	r1, r3
 4042 0016 1143     		orrs	r1, r2
 4043              	.LVL420:
3252:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 134


 4044              		.loc 1 3252 0
 4045 0018 0160     		str	r1, [r0]
 4046 001a 1CE0     		b	.L301
 4047              	.LVL421:
 4048              	.L302:
3253:Generated_Source\PSoC4/CyLib.c ****         } else
3254:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3255:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 4049              		.loc 1 3255 0
 4050 001c 0128     		cmp	r0, #1
 4051 001e 0AD1     		bne	.L304
3256:Generated_Source\PSoC4/CyLib.c ****         {
3257:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 4052              		.loc 1 3257 0
 4053 0020 0F48     		ldr	r0, .L306+8
 4054              	.LVL422:
 4055 0022 0268     		ldr	r2, [r0]
 4056 0024 0D4B     		ldr	r3, .L306+4
 4057 0026 1A40     		ands	r2, r3
 4058              	.LVL423:
3258:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 4059              		.loc 1 3258 0
 4060 0028 4904     		lsls	r1, r1, #17
 4061              	.LVL424:
 4062 002a C023     		movs	r3, #192
 4063 002c DB02     		lsls	r3, r3, #11
 4064 002e 1940     		ands	r1, r3
 4065 0030 1143     		orrs	r1, r2
 4066              	.LVL425:
3259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 4067              		.loc 1 3259 0
 4068 0032 0160     		str	r1, [r0]
 4069 0034 0FE0     		b	.L301
 4070              	.LVL426:
 4071              	.L304:
3260:Generated_Source\PSoC4/CyLib.c ****         } else
3261:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3262:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3263:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 4072              		.loc 1 3263 0
 4073 0036 0228     		cmp	r0, #2
 4074 0038 0AD1     		bne	.L305
3264:Generated_Source\PSoC4/CyLib.c ****         {
3265:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 4075              		.loc 1 3265 0
 4076 003a 0A48     		ldr	r0, .L306+12
 4077              	.LVL427:
 4078 003c 0268     		ldr	r2, [r0]
 4079 003e 074B     		ldr	r3, .L306+4
 4080 0040 1A40     		ands	r2, r3
 4081              	.LVL428:
3266:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 4082              		.loc 1 3266 0
 4083 0042 4904     		lsls	r1, r1, #17
 4084              	.LVL429:
 4085 0044 C023     		movs	r3, #192
 4086 0046 DB02     		lsls	r3, r3, #11
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 135


 4087 0048 1940     		ands	r1, r3
 4088 004a 1143     		orrs	r1, r2
 4089              	.LVL430:
3267:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 4090              		.loc 1 3267 0
 4091 004c 0160     		str	r1, [r0]
 4092 004e 02E0     		b	.L301
 4093              	.LVL431:
 4094              	.L305:
3268:Generated_Source\PSoC4/CyLib.c ****         } else
3269:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3270:Generated_Source\PSoC4/CyLib.c ****         {
3271:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3272:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 4095              		.loc 1 3272 0 discriminator 1
 4096 0050 0020     		movs	r0, #0
 4097              	.LVL432:
 4098 0052 FFF7FEFF 		bl	CyHalt
 4099              	.LVL433:
 4100              	.L301:
3273:Generated_Source\PSoC4/CyLib.c ****         }
3274:Generated_Source\PSoC4/CyLib.c ****     }
 4101              		.loc 1 3274 0
 4102              		@ sp needed
 4103 0056 10BD     		pop	{r4, pc}
 4104              	.L307:
 4105              		.align	2
 4106              	.L306:
 4107 0058 00011040 		.word	1074790656
 4108 005c FFFFF9FF 		.word	-393217
 4109 0060 04011040 		.word	1074790660
 4110 0064 08011040 		.word	1074790664
 4111              		.cfi_endproc
 4112              	.LFE67:
 4113              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 4114              		.global	CySysClkPumpConfig
 4115              		.global	cyImoFreqMhz2DpllOffset
 4116              		.global	CySysTickInitVar
 4117              		.global	cydelay32kMs
 4118              		.global	cydelayFreqMhz
 4119              		.global	cydelayFreqKhz
 4120              		.global	cydelayFreqHz
 4121              		.section	.rodata
 4122              		.align	2
 4123              		.set	.LANCHOR1,. + 0
 4124              		.type	cyImoFreqMhz2DpllOffset, %object
 4125              		.size	cyImoFreqMhz2DpllOffset, 23
 4126              	cyImoFreqMhz2DpllOffset:
 4127 0000 EE       		.byte	-18
 4128 0001 DB       		.byte	-37
 4129 0002 C9       		.byte	-55
 4130 0003 B9       		.byte	-71
 4131 0004 AA       		.byte	-86
 4132 0005 9B       		.byte	-101
 4133 0006 8E       		.byte	-114
 4134 0007 82       		.byte	-126
 4135 0008 76       		.byte	118
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 136


 4136 0009 6B       		.byte	107
 4137 000a 60       		.byte	96
 4138 000b 56       		.byte	86
 4139 000c 4D       		.byte	77
 4140 000d 44       		.byte	68
 4141 000e 3B       		.byte	59
 4142 000f 33       		.byte	51
 4143 0010 2C       		.byte	44
 4144 0011 24       		.byte	36
 4145 0012 1D       		.byte	29
 4146 0013 17       		.byte	23
 4147 0014 10       		.byte	16
 4148 0015 0A       		.byte	10
 4149 0016 04       		.byte	4
 4150              		.data
 4151              		.align	2
 4152              		.set	.LANCHOR0,. + 0
 4153              		.type	CySysClkPumpConfig, %object
 4154              		.size	CySysClkPumpConfig, 4
 4155              	CySysClkPumpConfig:
 4156 0000 01000000 		.word	1
 4157              		.type	cydelay32kMs, %object
 4158              		.size	cydelay32kMs, 4
 4159              	cydelay32kMs:
 4160 0004 0000E02E 		.word	786432000
 4161              		.type	cydelayFreqKhz, %object
 4162              		.size	cydelayFreqKhz, 4
 4163              	cydelayFreqKhz:
 4164 0008 C05D0000 		.word	24000
 4165              		.type	cydelayFreqMhz, %object
 4166              		.size	cydelayFreqMhz, 1
 4167              	cydelayFreqMhz:
 4168 000c 18       		.byte	24
 4169 000d 000000   		.space	3
 4170              		.type	cydelayFreqHz, %object
 4171              		.size	cydelayFreqHz, 4
 4172              	cydelayFreqHz:
 4173 0010 00366E01 		.word	24000000
 4174              		.bss
 4175              		.align	2
 4176              		.set	.LANCHOR2,. + 0
 4177              		.type	CySysTickCallbacks, %object
 4178              		.size	CySysTickCallbacks, 20
 4179              	CySysTickCallbacks:
 4180 0000 00000000 		.space	20
 4180      00000000 
 4180      00000000 
 4180      00000000 
 4180      00000000 
 4181              		.type	CySysTickInitVar, %object
 4182              		.size	CySysTickInitVar, 4
 4183              	CySysTickInitVar:
 4184 0014 00000000 		.space	4
 4185              		.text
 4186              	.Letext0:
 4187              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 4188              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 137


 4189              		.file 4 "Generated_Source\\PSoC4\\CyLFClk.h"
 4190              		.file 5 "Generated_Source\\PSoC4\\CyFlash.h"
 4191              		.section	.debug_info,"",%progbits
 4192              	.Ldebug_info0:
 4193 0000 F8150000 		.4byte	0x15f8
 4194 0004 0400     		.2byte	0x4
 4195 0006 00000000 		.4byte	.Ldebug_abbrev0
 4196 000a 04       		.byte	0x4
 4197 000b 01       		.uleb128 0x1
 4198 000c E3010000 		.4byte	.LASF164
 4199 0010 0C       		.byte	0xc
 4200 0011 6A070000 		.4byte	.LASF165
 4201 0015 B2070000 		.4byte	.LASF166
 4202 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4203 001d 00000000 		.4byte	0
 4204 0021 00000000 		.4byte	.Ldebug_line0
 4205 0025 02       		.uleb128 0x2
 4206 0026 01       		.byte	0x1
 4207 0027 06       		.byte	0x6
 4208 0028 060A0000 		.4byte	.LASF0
 4209 002c 02       		.uleb128 0x2
 4210 002d 01       		.byte	0x1
 4211 002e 08       		.byte	0x8
 4212 002f B3080000 		.4byte	.LASF1
 4213 0033 02       		.uleb128 0x2
 4214 0034 02       		.byte	0x2
 4215 0035 05       		.byte	0x5
 4216 0036 BD060000 		.4byte	.LASF2
 4217 003a 02       		.uleb128 0x2
 4218 003b 02       		.byte	0x2
 4219 003c 07       		.byte	0x7
 4220 003d 120A0000 		.4byte	.LASF3
 4221 0041 02       		.uleb128 0x2
 4222 0042 04       		.byte	0x4
 4223 0043 05       		.byte	0x5
 4224 0044 CF060000 		.4byte	.LASF4
 4225 0048 02       		.uleb128 0x2
 4226 0049 04       		.byte	0x4
 4227 004a 07       		.byte	0x7
 4228 004b 59080000 		.4byte	.LASF5
 4229 004f 02       		.uleb128 0x2
 4230 0050 08       		.byte	0x8
 4231 0051 05       		.byte	0x5
 4232 0052 D5040000 		.4byte	.LASF6
 4233 0056 02       		.uleb128 0x2
 4234 0057 08       		.byte	0x8
 4235 0058 07       		.byte	0x7
 4236 0059 B0020000 		.4byte	.LASF7
 4237 005d 03       		.uleb128 0x3
 4238 005e 04       		.byte	0x4
 4239 005f 05       		.byte	0x5
 4240 0060 696E7400 		.ascii	"int\000"
 4241 0064 02       		.uleb128 0x2
 4242 0065 04       		.byte	0x4
 4243 0066 07       		.byte	0x7
 4244 0067 DB000000 		.4byte	.LASF8
 4245 006b 04       		.uleb128 0x4
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 138


 4246 006c 2D0A0000 		.4byte	.LASF9
 4247 0070 02       		.byte	0x2
 4248 0071 E401     		.2byte	0x1e4
 4249 0073 2C000000 		.4byte	0x2c
 4250 0077 04       		.uleb128 0x4
 4251 0078 13040000 		.4byte	.LASF10
 4252 007c 02       		.byte	0x2
 4253 007d E501     		.2byte	0x1e5
 4254 007f 3A000000 		.4byte	0x3a
 4255 0083 04       		.uleb128 0x4
 4256 0084 BC050000 		.4byte	.LASF11
 4257 0088 02       		.byte	0x2
 4258 0089 E601     		.2byte	0x1e6
 4259 008b 48000000 		.4byte	0x48
 4260 008f 04       		.uleb128 0x4
 4261 0090 75020000 		.4byte	.LASF12
 4262 0094 02       		.byte	0x2
 4263 0095 E901     		.2byte	0x1e9
 4264 0097 41000000 		.4byte	0x41
 4265 009b 02       		.uleb128 0x2
 4266 009c 04       		.byte	0x4
 4267 009d 04       		.byte	0x4
 4268 009e D7010000 		.4byte	.LASF13
 4269 00a2 02       		.uleb128 0x2
 4270 00a3 08       		.byte	0x8
 4271 00a4 04       		.byte	0x4
 4272 00a5 330A0000 		.4byte	.LASF14
 4273 00a9 02       		.uleb128 0x2
 4274 00aa 01       		.byte	0x1
 4275 00ab 08       		.byte	0x8
 4276 00ac B5030000 		.4byte	.LASF15
 4277 00b0 04       		.uleb128 0x4
 4278 00b1 A0080000 		.4byte	.LASF16
 4279 00b5 02       		.byte	0x2
 4280 00b6 8602     		.2byte	0x286
 4281 00b8 48000000 		.4byte	0x48
 4282 00bc 04       		.uleb128 0x4
 4283 00bd 40010000 		.4byte	.LASF17
 4284 00c1 02       		.byte	0x2
 4285 00c2 8E02     		.2byte	0x28e
 4286 00c4 C8000000 		.4byte	0xc8
 4287 00c8 05       		.uleb128 0x5
 4288 00c9 6B000000 		.4byte	0x6b
 4289 00cd 04       		.uleb128 0x4
 4290 00ce 6C060000 		.4byte	.LASF18
 4291 00d2 02       		.byte	0x2
 4292 00d3 9002     		.2byte	0x290
 4293 00d5 D9000000 		.4byte	0xd9
 4294 00d9 05       		.uleb128 0x5
 4295 00da 83000000 		.4byte	0x83
 4296 00de 04       		.uleb128 0x4
 4297 00df 97050000 		.4byte	.LASF19
 4298 00e3 02       		.byte	0x2
 4299 00e4 A002     		.2byte	0x2a0
 4300 00e6 EA000000 		.4byte	0xea
 4301 00ea 06       		.uleb128 0x6
 4302 00eb 04       		.byte	0x4
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 139


 4303 00ec F0000000 		.4byte	0xf0
 4304 00f0 07       		.uleb128 0x7
 4305 00f1 02       		.uleb128 0x2
 4306 00f2 08       		.byte	0x8
 4307 00f3 04       		.byte	0x4
 4308 00f4 52060000 		.4byte	.LASF20
 4309 00f8 02       		.uleb128 0x2
 4310 00f9 04       		.byte	0x4
 4311 00fa 07       		.byte	0x7
 4312 00fb 1E080000 		.4byte	.LASF21
 4313 00ff 08       		.uleb128 0x8
 4314 0100 91030000 		.4byte	.LASF22
 4315 0104 03       		.byte	0x3
 4316 0105 F5       		.byte	0xf5
 4317 0106 EA000000 		.4byte	0xea
 4318 010a 09       		.uleb128 0x9
 4319 010b 0C       		.byte	0xc
 4320 010c 03       		.byte	0x3
 4321 010d AA01     		.2byte	0x1aa
 4322 010f 3B010000 		.4byte	0x13b
 4323 0113 0A       		.uleb128 0xa
 4324 0114 9D060000 		.4byte	.LASF23
 4325 0118 03       		.byte	0x3
 4326 0119 AC01     		.2byte	0x1ac
 4327 011b 83000000 		.4byte	0x83
 4328 011f 00       		.byte	0
 4329 0120 0A       		.uleb128 0xa
 4330 0121 4D040000 		.4byte	.LASF24
 4331 0125 03       		.byte	0x3
 4332 0126 AD01     		.2byte	0x1ad
 4333 0128 83000000 		.4byte	0x83
 4334 012c 04       		.byte	0x4
 4335 012d 0A       		.uleb128 0xa
 4336 012e F6080000 		.4byte	.LASF25
 4337 0132 03       		.byte	0x3
 4338 0133 AE01     		.2byte	0x1ae
 4339 0135 83000000 		.4byte	0x83
 4340 0139 08       		.byte	0x8
 4341 013a 00       		.byte	0
 4342 013b 04       		.uleb128 0x4
 4343 013c 32040000 		.4byte	.LASF26
 4344 0140 03       		.byte	0x3
 4345 0141 AF01     		.2byte	0x1af
 4346 0143 0A010000 		.4byte	0x10a
 4347 0147 09       		.uleb128 0x9
 4348 0148 18       		.byte	0x18
 4349 0149 03       		.byte	0x3
 4350 014a B201     		.2byte	0x1b2
 4351 014c 5E010000 		.4byte	0x15e
 4352 0150 0B       		.uleb128 0xb
 4353 0151 706C6C00 		.ascii	"pll\000"
 4354 0155 03       		.byte	0x3
 4355 0156 B401     		.2byte	0x1b4
 4356 0158 5E010000 		.4byte	0x15e
 4357 015c 00       		.byte	0
 4358 015d 00       		.byte	0
 4359 015e 0C       		.uleb128 0xc
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 140


 4360 015f 3B010000 		.4byte	0x13b
 4361 0163 6E010000 		.4byte	0x16e
 4362 0167 0D       		.uleb128 0xd
 4363 0168 F8000000 		.4byte	0xf8
 4364 016c 01       		.byte	0x1
 4365 016d 00       		.byte	0
 4366 016e 04       		.uleb128 0x4
 4367 016f B1010000 		.4byte	.LASF27
 4368 0173 03       		.byte	0x3
 4369 0174 B501     		.2byte	0x1b5
 4370 0176 47010000 		.4byte	0x147
 4371 017a 0E       		.uleb128 0xe
 4372 017b 39060000 		.4byte	.LASF28
 4373 017f 01       		.byte	0x1
 4374 0180 6C       		.byte	0x6c
 4375 0181 00000000 		.4byte	.LFB1
 4376 0185 14000000 		.4byte	.LFE1-.LFB1
 4377 0189 01       		.uleb128 0x1
 4378 018a 9C       		.byte	0x9c
 4379 018b 0F       		.uleb128 0xf
 4380 018c 9F090000 		.4byte	.LASF29
 4381 0190 01       		.byte	0x1
 4382 0191 1E01     		.2byte	0x11e
 4383 0193 00000000 		.4byte	.LFB4
 4384 0197 14000000 		.4byte	.LFE4-.LFB4
 4385 019b 01       		.uleb128 0x1
 4386 019c 9C       		.byte	0x9c
 4387 019d 10       		.uleb128 0x10
 4388 019e EA030000 		.4byte	.LASF30
 4389 01a2 01       		.byte	0x1
 4390 01a3 8C       		.byte	0x8c
 4391 01a4 00000000 		.4byte	.LFB2
 4392 01a8 18000000 		.4byte	.LFE2-.LFB2
 4393 01ac 01       		.uleb128 0x1
 4394 01ad 9C       		.byte	0x9c
 4395 01ae BC010000 		.4byte	0x1bc
 4396 01b2 11       		.uleb128 0x11
 4397 01b3 06000000 		.4byte	.LVL0
 4398 01b7 8B010000 		.4byte	0x18b
 4399 01bb 00       		.byte	0
 4400 01bc 12       		.uleb128 0x12
 4401 01bd 2A010000 		.4byte	.LASF130
 4402 01c1 01       		.byte	0x1
 4403 01c2 3101     		.2byte	0x131
 4404 01c4 83000000 		.4byte	0x83
 4405 01c8 00000000 		.4byte	.LFB5
 4406 01cc 14000000 		.4byte	.LFE5-.LFB5
 4407 01d0 01       		.uleb128 0x1
 4408 01d1 9C       		.byte	0x9c
 4409 01d2 13       		.uleb128 0x13
 4410 01d3 FA030000 		.4byte	.LASF31
 4411 01d7 01       		.byte	0x1
 4412 01d8 0602     		.2byte	0x206
 4413 01da 00000000 		.4byte	.LFB6
 4414 01de 7C000000 		.4byte	.LFE6-.LFB6
 4415 01e2 01       		.uleb128 0x1
 4416 01e3 9C       		.byte	0x9c
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 141


 4417 01e4 39020000 		.4byte	0x239
 4418 01e8 14       		.uleb128 0x14
 4419 01e9 6B030000 		.4byte	.LASF35
 4420 01ed 01       		.byte	0x1
 4421 01ee 0602     		.2byte	0x206
 4422 01f0 83000000 		.4byte	0x83
 4423 01f4 00000000 		.4byte	.LLST0
 4424 01f8 15       		.uleb128 0x15
 4425 01f9 1B010000 		.4byte	.LASF32
 4426 01fd 01       		.byte	0x1
 4427 01fe 0802     		.2byte	0x208
 4428 0200 6B000000 		.4byte	0x6b
 4429 0204 2C000000 		.4byte	.LLST1
 4430 0208 15       		.uleb128 0x15
 4431 0209 7E060000 		.4byte	.LASF33
 4432 020d 01       		.byte	0x1
 4433 020e 0902     		.2byte	0x209
 4434 0210 83000000 		.4byte	0x83
 4435 0214 3F000000 		.4byte	.LLST2
 4436 0218 16       		.uleb128 0x16
 4437 0219 6900     		.ascii	"i\000"
 4438 021b 01       		.byte	0x1
 4439 021c 0C02     		.2byte	0x20c
 4440 021e 6B000000 		.4byte	0x6b
 4441 0222 96000000 		.4byte	.LLST3
 4442 0226 11       		.uleb128 0x11
 4443 0227 08000000 		.4byte	.LVL3
 4444 022b C4150000 		.4byte	0x15c4
 4445 022f 11       		.uleb128 0x11
 4446 0230 6E000000 		.4byte	.LVL17
 4447 0234 CF150000 		.4byte	0x15cf
 4448 0238 00       		.byte	0
 4449 0239 13       		.uleb128 0x13
 4450 023a 06010000 		.4byte	.LASF34
 4451 023e 01       		.byte	0x1
 4452 023f 5202     		.2byte	0x252
 4453 0241 00000000 		.4byte	.LFB7
 4454 0245 34000000 		.4byte	.LFE7-.LFB7
 4455 0249 01       		.uleb128 0x1
 4456 024a 9C       		.byte	0x9c
 4457 024b 5E020000 		.4byte	0x25e
 4458 024f 17       		.uleb128 0x17
 4459 0250 D5020000 		.4byte	.LASF36
 4460 0254 01       		.byte	0x1
 4461 0255 5202     		.2byte	0x252
 4462 0257 83000000 		.4byte	0x83
 4463 025b 01       		.uleb128 0x1
 4464 025c 50       		.byte	0x50
 4465 025d 00       		.byte	0
 4466 025e 18       		.uleb128 0x18
 4467 025f E9020000 		.4byte	.LASF42
 4468 0263 01       		.byte	0x1
 4469 0264 7702     		.2byte	0x277
 4470 0266 83000000 		.4byte	0x83
 4471 026a 00000000 		.4byte	.LFB8
 4472 026e 2C000000 		.4byte	.LFE8-.LFB8
 4473 0272 01       		.uleb128 0x1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 142


 4474 0273 9C       		.byte	0x9c
 4475 0274 AB020000 		.4byte	0x2ab
 4476 0278 15       		.uleb128 0x15
 4477 0279 1B010000 		.4byte	.LASF32
 4478 027d 01       		.byte	0x1
 4479 027e 7902     		.2byte	0x279
 4480 0280 6B000000 		.4byte	0x6b
 4481 0284 C0000000 		.4byte	.LLST4
 4482 0288 15       		.uleb128 0x15
 4483 0289 3A0A0000 		.4byte	.LASF37
 4484 028d 01       		.byte	0x1
 4485 028e 7A02     		.2byte	0x27a
 4486 0290 83000000 		.4byte	0x83
 4487 0294 D3000000 		.4byte	.LLST5
 4488 0298 11       		.uleb128 0x11
 4489 0299 06000000 		.4byte	.LVL20
 4490 029d C4150000 		.4byte	0x15c4
 4491 02a1 11       		.uleb128 0x11
 4492 02a2 20000000 		.4byte	.LVL23
 4493 02a6 CF150000 		.4byte	0x15cf
 4494 02aa 00       		.byte	0
 4495 02ab 13       		.uleb128 0x13
 4496 02ac 33070000 		.4byte	.LASF38
 4497 02b0 01       		.byte	0x1
 4498 02b1 B402     		.2byte	0x2b4
 4499 02b3 00000000 		.4byte	.LFB9
 4500 02b7 24000000 		.4byte	.LFE9-.LFB9
 4501 02bb 01       		.uleb128 0x1
 4502 02bc 9C       		.byte	0x9c
 4503 02bd F4020000 		.4byte	0x2f4
 4504 02c1 14       		.uleb128 0x14
 4505 02c2 C7060000 		.4byte	.LASF39
 4506 02c6 01       		.byte	0x1
 4507 02c7 B402     		.2byte	0x2b4
 4508 02c9 83000000 		.4byte	0x83
 4509 02cd FC000000 		.4byte	.LLST6
 4510 02d1 15       		.uleb128 0x15
 4511 02d2 1B010000 		.4byte	.LASF32
 4512 02d6 01       		.byte	0x1
 4513 02d7 B602     		.2byte	0x2b6
 4514 02d9 6B000000 		.4byte	0x6b
 4515 02dd 28010000 		.4byte	.LLST7
 4516 02e1 11       		.uleb128 0x11
 4517 02e2 08000000 		.4byte	.LVL26
 4518 02e6 C4150000 		.4byte	0x15c4
 4519 02ea 11       		.uleb128 0x11
 4520 02eb 1E000000 		.4byte	.LVL28
 4521 02ef CF150000 		.4byte	0x15cf
 4522 02f3 00       		.byte	0
 4523 02f4 13       		.uleb128 0x13
 4524 02f5 45010000 		.4byte	.LASF40
 4525 02f9 01       		.byte	0x1
 4526 02fa 4004     		.2byte	0x440
 4527 02fc 00000000 		.4byte	.LFB11
 4528 0300 24000000 		.4byte	.LFE11-.LFB11
 4529 0304 01       		.uleb128 0x1
 4530 0305 9C       		.byte	0x9c
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 143


 4531 0306 3D030000 		.4byte	0x33d
 4532 030a 14       		.uleb128 0x14
 4533 030b C7060000 		.4byte	.LASF39
 4534 030f 01       		.byte	0x1
 4535 0310 4004     		.2byte	0x440
 4536 0312 83000000 		.4byte	0x83
 4537 0316 3B010000 		.4byte	.LLST8
 4538 031a 15       		.uleb128 0x15
 4539 031b 1B010000 		.4byte	.LASF32
 4540 031f 01       		.byte	0x1
 4541 0320 4204     		.2byte	0x442
 4542 0322 6B000000 		.4byte	0x6b
 4543 0326 67010000 		.4byte	.LLST9
 4544 032a 11       		.uleb128 0x11
 4545 032b 08000000 		.4byte	.LVL30
 4546 032f C4150000 		.4byte	0x15c4
 4547 0333 11       		.uleb128 0x11
 4548 0334 1E000000 		.4byte	.LVL32
 4549 0338 CF150000 		.4byte	0x15cf
 4550 033c 00       		.byte	0
 4551 033d 0F       		.uleb128 0xf
 4552 033e C7010000 		.4byte	.LASF41
 4553 0342 01       		.byte	0x1
 4554 0343 FC04     		.2byte	0x4fc
 4555 0345 00000000 		.4byte	.LFB13
 4556 0349 14000000 		.4byte	.LFE13-.LFB13
 4557 034d 01       		.uleb128 0x1
 4558 034e 9C       		.byte	0x9c
 4559 034f 18       		.uleb128 0x18
 4560 0350 71040000 		.4byte	.LASF43
 4561 0354 01       		.byte	0x1
 4562 0355 1E05     		.2byte	0x51e
 4563 0357 83000000 		.4byte	0x83
 4564 035b 00000000 		.4byte	.LFB14
 4565 035f 14000000 		.4byte	.LFE14-.LFB14
 4566 0363 01       		.uleb128 0x1
 4567 0364 9C       		.byte	0x9c
 4568 0365 78030000 		.4byte	0x378
 4569 0369 19       		.uleb128 0x19
 4570 036a 2D060000 		.4byte	.LASF44
 4571 036e 01       		.byte	0x1
 4572 036f 2005     		.2byte	0x520
 4573 0371 83000000 		.4byte	0x83
 4574 0375 01       		.uleb128 0x1
 4575 0376 50       		.byte	0x50
 4576 0377 00       		.byte	0
 4577 0378 13       		.uleb128 0x13
 4578 0379 40080000 		.4byte	.LASF45
 4579 037d 01       		.byte	0x1
 4580 037e A605     		.2byte	0x5a6
 4581 0380 00000000 		.4byte	.LFB15
 4582 0384 60000000 		.4byte	.LFE15-.LFB15
 4583 0388 01       		.uleb128 0x1
 4584 0389 9C       		.byte	0x9c
 4585 038a 10040000 		.4byte	0x410
 4586 038e 14       		.uleb128 0x14
 4587 038f A4050000 		.4byte	.LASF46
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 144


 4588 0393 01       		.byte	0x1
 4589 0394 A605     		.2byte	0x5a6
 4590 0396 83000000 		.4byte	0x83
 4591 039a 7A010000 		.4byte	.LLST10
 4592 039e 14       		.uleb128 0x14
 4593 039f 98040000 		.4byte	.LASF47
 4594 03a3 01       		.byte	0x1
 4595 03a4 A605     		.2byte	0x5a6
 4596 03a6 83000000 		.4byte	0x83
 4597 03aa A6010000 		.4byte	.LLST11
 4598 03ae 14       		.uleb128 0x14
 4599 03af E8000000 		.4byte	.LASF48
 4600 03b3 01       		.byte	0x1
 4601 03b4 A605     		.2byte	0x5a6
 4602 03b6 83000000 		.4byte	0x83
 4603 03ba D2010000 		.4byte	.LLST12
 4604 03be 14       		.uleb128 0x14
 4605 03bf 72080000 		.4byte	.LASF49
 4606 03c3 01       		.byte	0x1
 4607 03c4 A605     		.2byte	0x5a6
 4608 03c6 83000000 		.4byte	0x83
 4609 03ca FE010000 		.4byte	.LLST13
 4610 03ce 17       		.uleb128 0x17
 4611 03cf 64070000 		.4byte	.LASF50
 4612 03d3 01       		.byte	0x1
 4613 03d4 A605     		.2byte	0x5a6
 4614 03d6 83000000 		.4byte	0x83
 4615 03da 02       		.uleb128 0x2
 4616 03db 91       		.byte	0x91
 4617 03dc 00       		.sleb128 0
 4618 03dd 15       		.uleb128 0x15
 4619 03de 1B010000 		.4byte	.LASF32
 4620 03e2 01       		.byte	0x1
 4621 03e3 A805     		.2byte	0x5a8
 4622 03e5 6B000000 		.4byte	0x6b
 4623 03e9 2A020000 		.4byte	.LLST14
 4624 03ed 15       		.uleb128 0x15
 4625 03ee DC020000 		.4byte	.LASF51
 4626 03f2 01       		.byte	0x1
 4627 03f3 A905     		.2byte	0x5a9
 4628 03f5 83000000 		.4byte	0x83
 4629 03f9 3D020000 		.4byte	.LLST15
 4630 03fd 11       		.uleb128 0x11
 4631 03fe 12000000 		.4byte	.LVL35
 4632 0402 C4150000 		.4byte	0x15c4
 4633 0406 11       		.uleb128 0x11
 4634 0407 52000000 		.4byte	.LVL46
 4635 040b CF150000 		.4byte	0x15cf
 4636 040f 00       		.byte	0
 4637 0410 1A       		.uleb128 0x1a
 4638 0411 E6060000 		.4byte	.LASF52
 4639 0415 01       		.byte	0x1
 4640 0416 D905     		.2byte	0x5d9
 4641 0418 B0000000 		.4byte	0xb0
 4642 041c 00000000 		.4byte	.LFB16
 4643 0420 74010000 		.4byte	.LFE16-.LFB16
 4644 0424 01       		.uleb128 0x1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 145


 4645 0425 9C       		.byte	0x9c
 4646 0426 F3040000 		.4byte	0x4f3
 4647 042a 14       		.uleb128 0x14
 4648 042b 85030000 		.4byte	.LASF53
 4649 042f 01       		.byte	0x1
 4650 0430 D905     		.2byte	0x5d9
 4651 0432 83000000 		.4byte	0x83
 4652 0436 87020000 		.4byte	.LLST16
 4653 043a 14       		.uleb128 0x14
 4654 043b A4060000 		.4byte	.LASF54
 4655 043f 01       		.byte	0x1
 4656 0440 D905     		.2byte	0x5d9
 4657 0442 83000000 		.4byte	0x83
 4658 0446 DF020000 		.4byte	.LLST17
 4659 044a 1B       		.uleb128 0x1b
 4660 044b 65737200 		.ascii	"esr\000"
 4661 044f 01       		.byte	0x1
 4662 0450 D905     		.2byte	0x5d9
 4663 0452 83000000 		.4byte	0x83
 4664 0456 3A030000 		.4byte	.LLST18
 4665 045a 14       		.uleb128 0x14
 4666 045b A4040000 		.4byte	.LASF55
 4667 045f 01       		.byte	0x1
 4668 0460 D905     		.2byte	0x5d9
 4669 0462 83000000 		.4byte	0x83
 4670 0466 92030000 		.4byte	.LLST19
 4671 046a 15       		.uleb128 0x15
 4672 046b A4000000 		.4byte	.LASF56
 4673 046f 01       		.byte	0x1
 4674 0470 DB05     		.2byte	0x5db
 4675 0472 B0000000 		.4byte	0xb0
 4676 0476 BE030000 		.4byte	.LLST20
 4677 047a 15       		.uleb128 0x15
 4678 047b A4050000 		.4byte	.LASF46
 4679 047f 01       		.byte	0x1
 4680 0480 DD05     		.2byte	0x5dd
 4681 0482 83000000 		.4byte	0x83
 4682 0486 FF030000 		.4byte	.LLST21
 4683 048a 15       		.uleb128 0x15
 4684 048b 98040000 		.4byte	.LASF47
 4685 048f 01       		.byte	0x1
 4686 0490 DE05     		.2byte	0x5de
 4687 0492 83000000 		.4byte	0x83
 4688 0496 1F040000 		.4byte	.LLST22
 4689 049a 15       		.uleb128 0x15
 4690 049b E8000000 		.4byte	.LASF48
 4691 049f 01       		.byte	0x1
 4692 04a0 DF05     		.2byte	0x5df
 4693 04a2 83000000 		.4byte	0x83
 4694 04a6 3F040000 		.4byte	.LLST23
 4695 04aa 15       		.uleb128 0x15
 4696 04ab 72080000 		.4byte	.LASF49
 4697 04af 01       		.byte	0x1
 4698 04b0 E005     		.2byte	0x5e0
 4699 04b2 83000000 		.4byte	0x83
 4700 04b6 3F040000 		.4byte	.LLST23
 4701 04ba 15       		.uleb128 0x15
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 146


 4702 04bb 64070000 		.4byte	.LASF50
 4703 04bf 01       		.byte	0x1
 4704 04c0 E105     		.2byte	0x5e1
 4705 04c2 83000000 		.4byte	0x83
 4706 04c6 52040000 		.4byte	.LLST25
 4707 04ca 15       		.uleb128 0x15
 4708 04cb 9E040000 		.4byte	.LASF57
 4709 04cf 01       		.byte	0x1
 4710 04d0 E305     		.2byte	0x5e3
 4711 04d2 83000000 		.4byte	0x83
 4712 04d6 7C040000 		.4byte	.LLST26
 4713 04da 1C       		.uleb128 0x1c
 4714 04db 0C010000 		.4byte	.LVL70
 4715 04df 78030000 		.4byte	0x378
 4716 04e3 1D       		.uleb128 0x1d
 4717 04e4 01       		.uleb128 0x1
 4718 04e5 50       		.byte	0x50
 4719 04e6 03       		.uleb128 0x3
 4720 04e7 91       		.byte	0x91
 4721 04e8 60       		.sleb128 -32
 4722 04e9 06       		.byte	0x6
 4723 04ea 1D       		.uleb128 0x1d
 4724 04eb 01       		.uleb128 0x1
 4725 04ec 51       		.byte	0x51
 4726 04ed 03       		.uleb128 0x3
 4727 04ee 91       		.byte	0x91
 4728 04ef 64       		.sleb128 -28
 4729 04f0 06       		.byte	0x6
 4730 04f1 00       		.byte	0
 4731 04f2 00       		.byte	0
 4732 04f3 13       		.uleb128 0x13
 4733 04f4 00080000 		.4byte	.LASF58
 4734 04f8 01       		.byte	0x1
 4735 04f9 D806     		.2byte	0x6d8
 4736 04fb 00000000 		.4byte	.LFB19
 4737 04ff 28000000 		.4byte	.LFE19-.LFB19
 4738 0503 01       		.uleb128 0x1
 4739 0504 9C       		.byte	0x9c
 4740 0505 3C050000 		.4byte	0x53c
 4741 0509 1B       		.uleb128 0x1b
 4742 050a 706C6C00 		.ascii	"pll\000"
 4743 050e 01       		.byte	0x1
 4744 050f D806     		.2byte	0x6d8
 4745 0511 83000000 		.4byte	0x83
 4746 0515 B2040000 		.4byte	.LLST27
 4747 0519 15       		.uleb128 0x15
 4748 051a 1B010000 		.4byte	.LASF32
 4749 051e 01       		.byte	0x1
 4750 051f DA06     		.2byte	0x6da
 4751 0521 6B000000 		.4byte	0x6b
 4752 0525 DE040000 		.4byte	.LLST28
 4753 0529 11       		.uleb128 0x11
 4754 052a 0A000000 		.4byte	.LVL81
 4755 052e C4150000 		.4byte	0x15c4
 4756 0532 11       		.uleb128 0x11
 4757 0533 20000000 		.4byte	.LVL82
 4758 0537 CF150000 		.4byte	0x15cf
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 147


 4759 053b 00       		.byte	0
 4760 053c 13       		.uleb128 0x13
 4761 053d 27080000 		.4byte	.LASF59
 4762 0541 01       		.byte	0x1
 4763 0542 4907     		.2byte	0x749
 4764 0544 00000000 		.4byte	.LFB21
 4765 0548 38000000 		.4byte	.LFE21-.LFB21
 4766 054c 01       		.uleb128 0x1
 4767 054d 9C       		.byte	0x9c
 4768 054e A5050000 		.4byte	0x5a5
 4769 0552 1B       		.uleb128 0x1b
 4770 0553 706C6C00 		.ascii	"pll\000"
 4771 0557 01       		.byte	0x1
 4772 0558 4907     		.2byte	0x749
 4773 055a 83000000 		.4byte	0x83
 4774 055e F1040000 		.4byte	.LLST29
 4775 0562 14       		.uleb128 0x14
 4776 0563 8A030000 		.4byte	.LASF60
 4777 0567 01       		.byte	0x1
 4778 0568 4907     		.2byte	0x749
 4779 056a 83000000 		.4byte	0x83
 4780 056e 1D050000 		.4byte	.LLST30
 4781 0572 15       		.uleb128 0x15
 4782 0573 DC020000 		.4byte	.LASF51
 4783 0577 01       		.byte	0x1
 4784 0578 4B07     		.2byte	0x74b
 4785 057a 83000000 		.4byte	0x83
 4786 057e 49050000 		.4byte	.LLST31
 4787 0582 15       		.uleb128 0x15
 4788 0583 1B010000 		.4byte	.LASF32
 4789 0587 01       		.byte	0x1
 4790 0588 4C07     		.2byte	0x74c
 4791 058a 6B000000 		.4byte	0x6b
 4792 058e 67050000 		.4byte	.LLST32
 4793 0592 11       		.uleb128 0x11
 4794 0593 0A000000 		.4byte	.LVL85
 4795 0597 C4150000 		.4byte	0x15c4
 4796 059b 11       		.uleb128 0x11
 4797 059c 2E000000 		.4byte	.LVL91
 4798 05a0 CF150000 		.4byte	0x15cf
 4799 05a4 00       		.byte	0
 4800 05a5 18       		.uleb128 0x18
 4801 05a6 3F000000 		.4byte	.LASF61
 4802 05aa 01       		.byte	0x1
 4803 05ab B607     		.2byte	0x7b6
 4804 05ad 83000000 		.4byte	0x83
 4805 05b1 00000000 		.4byte	.LFB24
 4806 05b5 34000000 		.4byte	.LFE24-.LFB24
 4807 05b9 01       		.uleb128 0x1
 4808 05ba 9C       		.byte	0x9c
 4809 05bb 02060000 		.4byte	0x602
 4810 05bf 1B       		.uleb128 0x1b
 4811 05c0 706C6C00 		.ascii	"pll\000"
 4812 05c4 01       		.byte	0x1
 4813 05c5 B607     		.2byte	0x7b6
 4814 05c7 83000000 		.4byte	0x83
 4815 05cb 7A050000 		.4byte	.LLST33
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 148


 4816 05cf 15       		.uleb128 0x15
 4817 05d0 A4000000 		.4byte	.LASF56
 4818 05d4 01       		.byte	0x1
 4819 05d5 B807     		.2byte	0x7b8
 4820 05d7 83000000 		.4byte	0x83
 4821 05db A6050000 		.4byte	.LLST34
 4822 05df 15       		.uleb128 0x15
 4823 05e0 1B010000 		.4byte	.LASF32
 4824 05e4 01       		.byte	0x1
 4825 05e5 B907     		.2byte	0x7b9
 4826 05e7 6B000000 		.4byte	0x6b
 4827 05eb D0050000 		.4byte	.LLST35
 4828 05ef 11       		.uleb128 0x11
 4829 05f0 08000000 		.4byte	.LVL94
 4830 05f4 C4150000 		.4byte	0x15c4
 4831 05f8 11       		.uleb128 0x11
 4832 05f9 2A000000 		.4byte	.LVL97
 4833 05fd CF150000 		.4byte	0x15cf
 4834 0601 00       		.byte	0
 4835 0602 13       		.uleb128 0x13
 4836 0603 DA090000 		.4byte	.LASF62
 4837 0607 01       		.byte	0x1
 4838 0608 4B08     		.2byte	0x84b
 4839 060a 00000000 		.4byte	.LFB26
 4840 060e 60000000 		.4byte	.LFE26-.LFB26
 4841 0612 01       		.uleb128 0x1
 4842 0613 9C       		.byte	0x9c
 4843 0614 79060000 		.4byte	0x679
 4844 0618 1B       		.uleb128 0x1b
 4845 0619 706C6C00 		.ascii	"pll\000"
 4846 061d 01       		.byte	0x1
 4847 061e 4B08     		.2byte	0x84b
 4848 0620 83000000 		.4byte	0x83
 4849 0624 E3050000 		.4byte	.LLST36
 4850 0628 14       		.uleb128 0x14
 4851 0629 89070000 		.4byte	.LASF63
 4852 062d 01       		.byte	0x1
 4853 062e 4B08     		.2byte	0x84b
 4854 0630 83000000 		.4byte	0x83
 4855 0634 1C060000 		.4byte	.LLST37
 4856 0638 15       		.uleb128 0x15
 4857 0639 DC020000 		.4byte	.LASF51
 4858 063d 01       		.byte	0x1
 4859 063e 4D08     		.2byte	0x84d
 4860 0640 83000000 		.4byte	0x83
 4861 0644 48060000 		.4byte	.LLST38
 4862 0648 15       		.uleb128 0x15
 4863 0649 1B010000 		.4byte	.LASF32
 4864 064d 01       		.byte	0x1
 4865 064e 4E08     		.2byte	0x84e
 4866 0650 6B000000 		.4byte	0x6b
 4867 0654 66060000 		.4byte	.LLST39
 4868 0658 16       		.uleb128 0x16
 4869 0659 6900     		.ascii	"i\000"
 4870 065b 01       		.byte	0x1
 4871 065c 5108     		.2byte	0x851
 4872 065e 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 149


 4873 0662 79060000 		.4byte	.LLST40
 4874 0666 11       		.uleb128 0x11
 4875 0667 0A000000 		.4byte	.LVL101
 4876 066b C4150000 		.4byte	0x15c4
 4877 066f 11       		.uleb128 0x11
 4878 0670 56000000 		.4byte	.LVL111
 4879 0674 CF150000 		.4byte	0x15cf
 4880 0678 00       		.byte	0
 4881 0679 18       		.uleb128 0x18
 4882 067a 14050000 		.4byte	.LASF64
 4883 067e 01       		.byte	0x1
 4884 067f 2309     		.2byte	0x923
 4885 0681 83000000 		.4byte	0x83
 4886 0685 00000000 		.4byte	.LFB28
 4887 0689 14000000 		.4byte	.LFE28-.LFB28
 4888 068d 01       		.uleb128 0x1
 4889 068e 9C       		.byte	0x9c
 4890 068f B2060000 		.4byte	0x6b2
 4891 0693 14       		.uleb128 0x14
 4892 0694 C7020000 		.4byte	.LASF65
 4893 0698 01       		.byte	0x1
 4894 0699 2309     		.2byte	0x923
 4895 069b 83000000 		.4byte	0x83
 4896 069f A3060000 		.4byte	.LLST41
 4897 06a3 19       		.uleb128 0x19
 4898 06a4 A4000000 		.4byte	.LASF56
 4899 06a8 01       		.byte	0x1
 4900 06a9 2509     		.2byte	0x925
 4901 06ab 83000000 		.4byte	0x83
 4902 06af 01       		.uleb128 0x1
 4903 06b0 50       		.byte	0x50
 4904 06b1 00       		.byte	0
 4905 06b2 18       		.uleb128 0x18
 4906 06b3 5E060000 		.4byte	.LASF66
 4907 06b7 01       		.byte	0x1
 4908 06b8 3A09     		.2byte	0x93a
 4909 06ba 83000000 		.4byte	0x83
 4910 06be 00000000 		.4byte	.LFB29
 4911 06c2 10000000 		.4byte	.LFE29-.LFB29
 4912 06c6 01       		.uleb128 0x1
 4913 06c7 9C       		.byte	0x9c
 4914 06c8 DB060000 		.4byte	0x6db
 4915 06cc 19       		.uleb128 0x19
 4916 06cd 75030000 		.4byte	.LASF67
 4917 06d1 01       		.byte	0x1
 4918 06d2 3C09     		.2byte	0x93c
 4919 06d4 83000000 		.4byte	0x83
 4920 06d8 01       		.uleb128 0x1
 4921 06d9 50       		.byte	0x50
 4922 06da 00       		.byte	0
 4923 06db 13       		.uleb128 0x13
 4924 06dc 98010000 		.4byte	.LASF68
 4925 06e0 01       		.byte	0x1
 4926 06e1 5109     		.2byte	0x951
 4927 06e3 00000000 		.4byte	.LFB30
 4928 06e7 0C000000 		.4byte	.LFE30-.LFB30
 4929 06eb 01       		.uleb128 0x1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 150


 4930 06ec 9C       		.byte	0x9c
 4931 06ed 00070000 		.4byte	0x700
 4932 06f1 17       		.uleb128 0x17
 4933 06f2 0B060000 		.4byte	.LASF69
 4934 06f6 01       		.byte	0x1
 4935 06f7 5109     		.2byte	0x951
 4936 06f9 83000000 		.4byte	0x83
 4937 06fd 01       		.uleb128 0x1
 4938 06fe 50       		.byte	0x50
 4939 06ff 00       		.byte	0
 4940 0700 13       		.uleb128 0x13
 4941 0701 CE090000 		.4byte	.LASF70
 4942 0705 01       		.byte	0x1
 4943 0706 080A     		.2byte	0xa08
 4944 0708 00000000 		.4byte	.LFB37
 4945 070c 14000000 		.4byte	.LFE37-.LFB37
 4946 0710 01       		.uleb128 0x1
 4947 0711 9C       		.byte	0x9c
 4948 0712 27070000 		.4byte	0x727
 4949 0716 14       		.uleb128 0x14
 4950 0717 90070000 		.4byte	.LASF71
 4951 071b 01       		.byte	0x1
 4952 071c 080A     		.2byte	0xa08
 4953 071e 6B000000 		.4byte	0x6b
 4954 0722 C1060000 		.4byte	.LLST42
 4955 0726 00       		.byte	0
 4956 0727 18       		.uleb128 0x18
 4957 0728 14030000 		.4byte	.LASF72
 4958 072c 01       		.byte	0x1
 4959 072d 1A0A     		.2byte	0xa1a
 4960 072f 6B000000 		.4byte	0x6b
 4961 0733 00000000 		.4byte	.LFB38
 4962 0737 18000000 		.4byte	.LFE38-.LFB38
 4963 073b 01       		.uleb128 0x1
 4964 073c 9C       		.byte	0x9c
 4965 073d 52070000 		.4byte	0x752
 4966 0741 14       		.uleb128 0x14
 4967 0742 90070000 		.4byte	.LASF71
 4968 0746 01       		.byte	0x1
 4969 0747 1A0A     		.2byte	0xa1a
 4970 0749 6B000000 		.4byte	0x6b
 4971 074d E2060000 		.4byte	.LLST43
 4972 0751 00       		.byte	0
 4973 0752 13       		.uleb128 0x13
 4974 0753 5B010000 		.4byte	.LASF73
 4975 0757 01       		.byte	0x1
 4976 0758 2A0A     		.2byte	0xa2a
 4977 075a 00000000 		.4byte	.LFB39
 4978 075e 14000000 		.4byte	.LFE39-.LFB39
 4979 0762 01       		.uleb128 0x1
 4980 0763 9C       		.byte	0x9c
 4981 0764 79070000 		.4byte	0x779
 4982 0768 14       		.uleb128 0x14
 4983 0769 90070000 		.4byte	.LASF71
 4984 076d 01       		.byte	0x1
 4985 076e 2A0A     		.2byte	0xa2a
 4986 0770 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 151


 4987 0774 03070000 		.4byte	.LLST44
 4988 0778 00       		.byte	0
 4989 0779 13       		.uleb128 0x13
 4990 077a 5B030000 		.4byte	.LASF74
 4991 077e 01       		.byte	0x1
 4992 077f 380A     		.2byte	0xa38
 4993 0781 00000000 		.4byte	.LFB40
 4994 0785 14000000 		.4byte	.LFE40-.LFB40
 4995 0789 01       		.uleb128 0x1
 4996 078a 9C       		.byte	0x9c
 4997 078b A0070000 		.4byte	0x7a0
 4998 078f 14       		.uleb128 0x14
 4999 0790 90070000 		.4byte	.LASF71
 5000 0794 01       		.byte	0x1
 5001 0795 380A     		.2byte	0xa38
 5002 0797 6B000000 		.4byte	0x6b
 5003 079b 24070000 		.4byte	.LLST45
 5004 079f 00       		.byte	0
 5005 07a0 13       		.uleb128 0x13
 5006 07a1 A3030000 		.4byte	.LASF75
 5007 07a5 01       		.byte	0x1
 5008 07a6 470A     		.2byte	0xa47
 5009 07a8 00000000 		.4byte	.LFB41
 5010 07ac 14000000 		.4byte	.LFE41-.LFB41
 5011 07b0 01       		.uleb128 0x1
 5012 07b1 9C       		.byte	0x9c
 5013 07b2 C7070000 		.4byte	0x7c7
 5014 07b6 14       		.uleb128 0x14
 5015 07b7 90070000 		.4byte	.LASF71
 5016 07bb 01       		.byte	0x1
 5017 07bc 470A     		.2byte	0xa47
 5018 07be 6B000000 		.4byte	0x6b
 5019 07c2 45070000 		.4byte	.LLST46
 5020 07c6 00       		.byte	0
 5021 07c7 13       		.uleb128 0x13
 5022 07c8 CE020000 		.4byte	.LASF76
 5023 07cc 01       		.byte	0x1
 5024 07cd 560A     		.2byte	0xa56
 5025 07cf 00000000 		.4byte	.LFB42
 5026 07d3 04000000 		.4byte	.LFE42-.LFB42
 5027 07d7 01       		.uleb128 0x1
 5028 07d8 9C       		.byte	0x9c
 5029 07d9 EC070000 		.4byte	0x7ec
 5030 07dd 17       		.uleb128 0x17
 5031 07de C7020000 		.4byte	.LASF65
 5032 07e2 01       		.byte	0x1
 5033 07e3 560A     		.2byte	0xa56
 5034 07e5 6B000000 		.4byte	0x6b
 5035 07e9 01       		.uleb128 0x1
 5036 07ea 50       		.byte	0x50
 5037 07eb 00       		.byte	0
 5038 07ec 18       		.uleb128 0x18
 5039 07ed FB080000 		.4byte	.LASF77
 5040 07f1 01       		.byte	0x1
 5041 07f2 B306     		.2byte	0x6b3
 5042 07f4 83000000 		.4byte	0x83
 5043 07f8 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 152


 5044 07fc 40000000 		.4byte	.LFE18-.LFB18
 5045 0800 01       		.uleb128 0x1
 5046 0801 9C       		.byte	0x9c
 5047 0802 5C080000 		.4byte	0x85c
 5048 0806 1B       		.uleb128 0x1b
 5049 0807 706C6C00 		.ascii	"pll\000"
 5050 080b 01       		.byte	0x1
 5051 080c B306     		.2byte	0x6b3
 5052 080e 83000000 		.4byte	0x83
 5053 0812 66070000 		.4byte	.LLST47
 5054 0816 15       		.uleb128 0x15
 5055 0817 1B010000 		.4byte	.LASF32
 5056 081b 01       		.byte	0x1
 5057 081c B506     		.2byte	0x6b5
 5058 081e 6B000000 		.4byte	0x6b
 5059 0822 92070000 		.4byte	.LLST48
 5060 0826 15       		.uleb128 0x15
 5061 0827 A4000000 		.4byte	.LASF56
 5062 082b 01       		.byte	0x1
 5063 082c B606     		.2byte	0x6b6
 5064 082e 83000000 		.4byte	0x83
 5065 0832 A5070000 		.4byte	.LLST49
 5066 0836 1E       		.uleb128 0x1e
 5067 0837 0C000000 		.4byte	.LVL131
 5068 083b C7070000 		.4byte	0x7c7
 5069 083f 49080000 		.4byte	0x849
 5070 0843 1D       		.uleb128 0x1d
 5071 0844 01       		.uleb128 0x1
 5072 0845 50       		.byte	0x50
 5073 0846 01       		.uleb128 0x1
 5074 0847 30       		.byte	0x30
 5075 0848 00       		.byte	0
 5076 0849 11       		.uleb128 0x11
 5077 084a 10000000 		.4byte	.LVL132
 5078 084e C4150000 		.4byte	0x15c4
 5079 0852 11       		.uleb128 0x11
 5080 0853 36000000 		.4byte	.LVL137
 5081 0857 CF150000 		.4byte	0x15cf
 5082 085b 00       		.byte	0
 5083 085c 1F       		.uleb128 0x1f
 5084 085d 7E050000 		.4byte	.LASF78
 5085 0861 01       		.byte	0x1
 5086 0862 6A07     		.2byte	0x76a
 5087 0864 83000000 		.4byte	0x83
 5088 0868 00000000 		.4byte	.LFB22
 5089 086c 2C000000 		.4byte	.LFE22-.LFB22
 5090 0870 01       		.uleb128 0x1
 5091 0871 9C       		.byte	0x9c
 5092 0872 CC080000 		.4byte	0x8cc
 5093 0876 1B       		.uleb128 0x1b
 5094 0877 706C6C00 		.ascii	"pll\000"
 5095 087b 01       		.byte	0x1
 5096 087c 6A07     		.2byte	0x76a
 5097 087e 83000000 		.4byte	0x83
 5098 0882 CE070000 		.4byte	.LLST50
 5099 0886 15       		.uleb128 0x15
 5100 0887 2D060000 		.4byte	.LASF44
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 153


 5101 088b 01       		.byte	0x1
 5102 088c 6C07     		.2byte	0x76c
 5103 088e 83000000 		.4byte	0x83
 5104 0892 FA070000 		.4byte	.LLST51
 5105 0896 15       		.uleb128 0x15
 5106 0897 1B010000 		.4byte	.LASF32
 5107 089b 01       		.byte	0x1
 5108 089c 6D07     		.2byte	0x76d
 5109 089e 6B000000 		.4byte	0x6b
 5110 08a2 29080000 		.4byte	.LLST52
 5111 08a6 1E       		.uleb128 0x1e
 5112 08a7 0C000000 		.4byte	.LVL141
 5113 08ab C7070000 		.4byte	0x7c7
 5114 08af B9080000 		.4byte	0x8b9
 5115 08b3 1D       		.uleb128 0x1d
 5116 08b4 01       		.uleb128 0x1
 5117 08b5 50       		.byte	0x50
 5118 08b6 01       		.uleb128 0x1
 5119 08b7 30       		.byte	0x30
 5120 08b8 00       		.byte	0
 5121 08b9 11       		.uleb128 0x11
 5122 08ba 10000000 		.4byte	.LVL142
 5123 08be C4150000 		.4byte	0x15c4
 5124 08c2 11       		.uleb128 0x11
 5125 08c3 24000000 		.4byte	.LVL147
 5126 08c7 CF150000 		.4byte	0x15cf
 5127 08cb 00       		.byte	0
 5128 08cc 1F       		.uleb128 0x1f
 5129 08cd C3050000 		.4byte	.LASF79
 5130 08d1 01       		.byte	0x1
 5131 08d2 8D07     		.2byte	0x78d
 5132 08d4 B0000000 		.4byte	0xb0
 5133 08d8 00000000 		.4byte	.LFB23
 5134 08dc 2C000000 		.4byte	.LFE23-.LFB23
 5135 08e0 01       		.uleb128 0x1
 5136 08e1 9C       		.byte	0x9c
 5137 08e2 40090000 		.4byte	0x940
 5138 08e6 1B       		.uleb128 0x1b
 5139 08e7 706C6C00 		.ascii	"pll\000"
 5140 08eb 01       		.byte	0x1
 5141 08ec 8D07     		.2byte	0x78d
 5142 08ee 83000000 		.4byte	0x83
 5143 08f2 3C080000 		.4byte	.LLST53
 5144 08f6 15       		.uleb128 0x15
 5145 08f7 D8060000 		.4byte	.LASF80
 5146 08fb 01       		.byte	0x1
 5147 08fc 8F07     		.2byte	0x78f
 5148 08fe 83000000 		.4byte	0x83
 5149 0902 68080000 		.4byte	.LLST54
 5150 0906 15       		.uleb128 0x15
 5151 0907 3A0A0000 		.4byte	.LASF37
 5152 090b 01       		.byte	0x1
 5153 090c 9007     		.2byte	0x790
 5154 090e 83000000 		.4byte	0x83
 5155 0912 9C080000 		.4byte	.LLST55
 5156 0916 15       		.uleb128 0x15
 5157 0917 2D060000 		.4byte	.LASF44
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 154


 5158 091b 01       		.byte	0x1
 5159 091c 9107     		.2byte	0x791
 5160 091e B0000000 		.4byte	0xb0
 5161 0922 BA080000 		.4byte	.LLST56
 5162 0926 11       		.uleb128 0x11
 5163 0927 08000000 		.4byte	.LVL151
 5164 092b 5E020000 		.4byte	0x25e
 5165 092f 1C       		.uleb128 0x1c
 5166 0930 10000000 		.4byte	.LVL154
 5167 0934 5C080000 		.4byte	0x85c
 5168 0938 1D       		.uleb128 0x1d
 5169 0939 01       		.uleb128 0x1
 5170 093a 50       		.byte	0x50
 5171 093b 02       		.uleb128 0x2
 5172 093c 74       		.byte	0x74
 5173 093d 00       		.sleb128 0
 5174 093e 00       		.byte	0
 5175 093f 00       		.byte	0
 5176 0940 18       		.uleb128 0x18
 5177 0941 87040000 		.4byte	.LASF81
 5178 0945 01       		.byte	0x1
 5179 0946 0507     		.2byte	0x705
 5180 0948 B0000000 		.4byte	0xb0
 5181 094c 00000000 		.4byte	.LFB20
 5182 0950 A4000000 		.4byte	.LFE20-.LFB20
 5183 0954 01       		.uleb128 0x1
 5184 0955 9C       		.byte	0x9c
 5185 0956 0A0A0000 		.4byte	0xa0a
 5186 095a 1B       		.uleb128 0x1b
 5187 095b 706C6C00 		.ascii	"pll\000"
 5188 095f 01       		.byte	0x1
 5189 0960 0507     		.2byte	0x705
 5190 0962 83000000 		.4byte	0x83
 5191 0966 D9080000 		.4byte	.LLST57
 5192 096a 14       		.uleb128 0x14
 5193 096b 1A040000 		.4byte	.LASF82
 5194 096f 01       		.byte	0x1
 5195 0970 0507     		.2byte	0x705
 5196 0972 83000000 		.4byte	0x83
 5197 0976 CD090000 		.4byte	.LLST58
 5198 097a 14       		.uleb128 0x14
 5199 097b 79010000 		.4byte	.LASF83
 5200 097f 01       		.byte	0x1
 5201 0980 0507     		.2byte	0x705
 5202 0982 83000000 		.4byte	0x83
 5203 0986 F9090000 		.4byte	.LLST59
 5204 098a 14       		.uleb128 0x14
 5205 098b 250A0000 		.4byte	.LASF84
 5206 098f 01       		.byte	0x1
 5207 0990 0507     		.2byte	0x705
 5208 0992 83000000 		.4byte	0x83
 5209 0996 4B0A0000 		.4byte	.LLST60
 5210 099a 15       		.uleb128 0x15
 5211 099b DC020000 		.4byte	.LASF51
 5212 099f 01       		.byte	0x1
 5213 09a0 0707     		.2byte	0x707
 5214 09a2 83000000 		.4byte	0x83
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 155


 5215 09a6 900A0000 		.4byte	.LLST61
 5216 09aa 16       		.uleb128 0x16
 5217 09ab 746D7000 		.ascii	"tmp\000"
 5218 09af 01       		.byte	0x1
 5219 09b0 0807     		.2byte	0x708
 5220 09b2 B0000000 		.4byte	0xb0
 5221 09b6 AE0A0000 		.4byte	.LLST62
 5222 09ba 15       		.uleb128 0x15
 5223 09bb 1B010000 		.4byte	.LASF32
 5224 09bf 01       		.byte	0x1
 5225 09c0 0907     		.2byte	0x709
 5226 09c2 6B000000 		.4byte	0x6b
 5227 09c6 CC0A0000 		.4byte	.LLST63
 5228 09ca 15       		.uleb128 0x15
 5229 09cb A4000000 		.4byte	.LASF56
 5230 09cf 01       		.byte	0x1
 5231 09d0 0A07     		.2byte	0x70a
 5232 09d2 B0000000 		.4byte	0xb0
 5233 09d6 EC0A0000 		.4byte	.LLST64
 5234 09da 11       		.uleb128 0x11
 5235 09db 10000000 		.4byte	.LVL166
 5236 09df C4150000 		.4byte	0x15c4
 5237 09e3 1E       		.uleb128 0x1e
 5238 09e4 18000000 		.4byte	.LVL168
 5239 09e8 CC080000 		.4byte	0x8cc
 5240 09ec F7090000 		.4byte	0x9f7
 5241 09f0 1D       		.uleb128 0x1d
 5242 09f1 01       		.uleb128 0x1
 5243 09f2 50       		.byte	0x50
 5244 09f3 02       		.uleb128 0x2
 5245 09f4 74       		.byte	0x74
 5246 09f5 00       		.sleb128 0
 5247 09f6 00       		.byte	0
 5248 09f7 1C       		.uleb128 0x1c
 5249 09f8 94000000 		.4byte	.LVL195
 5250 09fc CF150000 		.4byte	0x15cf
 5251 0a00 1D       		.uleb128 0x1d
 5252 0a01 01       		.uleb128 0x1
 5253 0a02 50       		.byte	0x50
 5254 0a03 04       		.uleb128 0x4
 5255 0a04 91       		.byte	0x91
 5256 0a05 64       		.sleb128 -28
 5257 0a06 94       		.byte	0x94
 5258 0a07 01       		.byte	0x1
 5259 0a08 00       		.byte	0
 5260 0a09 00       		.byte	0
 5261 0a0a 18       		.uleb128 0x18
 5262 0a0b 83090000 		.4byte	.LASF85
 5263 0a0f 01       		.byte	0x1
 5264 0a10 8D08     		.2byte	0x88d
 5265 0a12 B0000000 		.4byte	0xb0
 5266 0a16 00000000 		.4byte	.LFB27
 5267 0a1a 58000000 		.4byte	.LFE27-.LFB27
 5268 0a1e 01       		.uleb128 0x1
 5269 0a1f 9C       		.byte	0x9c
 5270 0a20 B20A0000 		.4byte	0xab2
 5271 0a24 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 156


 5272 0a25 706C6C00 		.ascii	"pll\000"
 5273 0a29 01       		.byte	0x1
 5274 0a2a 8D08     		.2byte	0x88d
 5275 0a2c 83000000 		.4byte	0x83
 5276 0a30 2E0B0000 		.4byte	.LLST65
 5277 0a34 14       		.uleb128 0x14
 5278 0a35 C7060000 		.4byte	.LASF39
 5279 0a39 01       		.byte	0x1
 5280 0a3a 8D08     		.2byte	0x88d
 5281 0a3c 83000000 		.4byte	0x83
 5282 0a40 A50B0000 		.4byte	.LLST66
 5283 0a44 15       		.uleb128 0x15
 5284 0a45 7E060000 		.4byte	.LASF33
 5285 0a49 01       		.byte	0x1
 5286 0a4a 8F08     		.2byte	0x88f
 5287 0a4c 83000000 		.4byte	0x83
 5288 0a50 EA0B0000 		.4byte	.LLST67
 5289 0a54 15       		.uleb128 0x15
 5290 0a55 1B010000 		.4byte	.LASF32
 5291 0a59 01       		.byte	0x1
 5292 0a5a 9008     		.2byte	0x890
 5293 0a5c 6B000000 		.4byte	0x6b
 5294 0a60 080C0000 		.4byte	.LLST68
 5295 0a64 15       		.uleb128 0x15
 5296 0a65 A4000000 		.4byte	.LASF56
 5297 0a69 01       		.byte	0x1
 5298 0a6a 9108     		.2byte	0x891
 5299 0a6c B0000000 		.4byte	0xb0
 5300 0a70 1B0C0000 		.4byte	.LLST69
 5301 0a74 16       		.uleb128 0x16
 5302 0a75 746D7000 		.ascii	"tmp\000"
 5303 0a79 01       		.byte	0x1
 5304 0a7a 9208     		.2byte	0x892
 5305 0a7c B0000000 		.4byte	0xb0
 5306 0a80 5D0C0000 		.4byte	.LLST70
 5307 0a84 11       		.uleb128 0x11
 5308 0a85 0A000000 		.4byte	.LVL200
 5309 0a89 C4150000 		.4byte	0x15c4
 5310 0a8d 1E       		.uleb128 0x1e
 5311 0a8e 12000000 		.4byte	.LVL202
 5312 0a92 CC080000 		.4byte	0x8cc
 5313 0a96 A10A0000 		.4byte	0xaa1
 5314 0a9a 1D       		.uleb128 0x1d
 5315 0a9b 01       		.uleb128 0x1
 5316 0a9c 50       		.byte	0x50
 5317 0a9d 02       		.uleb128 0x2
 5318 0a9e 74       		.byte	0x74
 5319 0a9f 00       		.sleb128 0
 5320 0aa0 00       		.byte	0
 5321 0aa1 1C       		.uleb128 0x1c
 5322 0aa2 4C000000 		.4byte	.LVL215
 5323 0aa6 CF150000 		.4byte	0x15cf
 5324 0aaa 1D       		.uleb128 0x1d
 5325 0aab 01       		.uleb128 0x1
 5326 0aac 50       		.byte	0x50
 5327 0aad 02       		.uleb128 0x2
 5328 0aae 76       		.byte	0x76
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 157


 5329 0aaf 00       		.sleb128 0
 5330 0ab0 00       		.byte	0
 5331 0ab1 00       		.byte	0
 5332 0ab2 1A       		.uleb128 0x1a
 5333 0ab3 8E020000 		.4byte	.LASF86
 5334 0ab7 01       		.byte	0x1
 5335 0ab8 EA07     		.2byte	0x7ea
 5336 0aba B0000000 		.4byte	0xb0
 5337 0abe 00000000 		.4byte	.LFB25
 5338 0ac2 10010000 		.4byte	.LFE25-.LFB25
 5339 0ac6 01       		.uleb128 0x1
 5340 0ac7 9C       		.byte	0x9c
 5341 0ac8 080C0000 		.4byte	0xc08
 5342 0acc 1B       		.uleb128 0x1b
 5343 0acd 706C6C00 		.ascii	"pll\000"
 5344 0ad1 01       		.byte	0x1
 5345 0ad2 EA07     		.2byte	0x7ea
 5346 0ad4 83000000 		.4byte	0x83
 5347 0ad8 7B0C0000 		.4byte	.LLST71
 5348 0adc 14       		.uleb128 0x14
 5349 0add 30030000 		.4byte	.LASF87
 5350 0ae1 01       		.byte	0x1
 5351 0ae2 EA07     		.2byte	0x7ea
 5352 0ae4 83000000 		.4byte	0x83
 5353 0ae8 A70C0000 		.4byte	.LLST72
 5354 0aec 14       		.uleb128 0x14
 5355 0aed 00000000 		.4byte	.LASF88
 5356 0af1 01       		.byte	0x1
 5357 0af2 EA07     		.2byte	0x7ea
 5358 0af4 83000000 		.4byte	0x83
 5359 0af8 D30C0000 		.4byte	.LLST73
 5360 0afc 14       		.uleb128 0x14
 5361 0afd C7060000 		.4byte	.LASF39
 5362 0b01 01       		.byte	0x1
 5363 0b02 EA07     		.2byte	0x7ea
 5364 0b04 83000000 		.4byte	0x83
 5365 0b08 FF0C0000 		.4byte	.LLST74
 5366 0b0c 17       		.uleb128 0x17
 5367 0b0d FE000000 		.4byte	.LASF89
 5368 0b11 01       		.byte	0x1
 5369 0b12 EA07     		.2byte	0x7ea
 5370 0b14 83000000 		.4byte	0x83
 5371 0b18 02       		.uleb128 0x2
 5372 0b19 91       		.byte	0x91
 5373 0b1a 00       		.sleb128 0
 5374 0b1b 15       		.uleb128 0x15
 5375 0b1c 01030000 		.4byte	.LASF90
 5376 0b20 01       		.byte	0x1
 5377 0b21 EC07     		.2byte	0x7ec
 5378 0b23 83000000 		.4byte	0x83
 5379 0b27 400D0000 		.4byte	.LLST75
 5380 0b2b 15       		.uleb128 0x15
 5381 0b2c 19080000 		.4byte	.LASF91
 5382 0b30 01       		.byte	0x1
 5383 0b31 ED07     		.2byte	0x7ed
 5384 0b33 83000000 		.4byte	0x83
 5385 0b37 5E0D0000 		.4byte	.LLST76
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 158


 5386 0b3b 15       		.uleb128 0x15
 5387 0b3c 56030000 		.4byte	.LASF92
 5388 0b40 01       		.byte	0x1
 5389 0b41 EF07     		.2byte	0x7ef
 5390 0b43 83000000 		.4byte	0x83
 5391 0b47 870D0000 		.4byte	.LLST77
 5392 0b4b 15       		.uleb128 0x15
 5393 0b4c 9F070000 		.4byte	.LASF93
 5394 0b50 01       		.byte	0x1
 5395 0b51 F007     		.2byte	0x7f0
 5396 0b53 83000000 		.4byte	0x83
 5397 0b57 BD0D0000 		.4byte	.LLST78
 5398 0b5b 16       		.uleb128 0x16
 5399 0b5c 7100     		.ascii	"q\000"
 5400 0b5e 01       		.byte	0x1
 5401 0b5f F207     		.2byte	0x7f2
 5402 0b61 83000000 		.4byte	0x83
 5403 0b65 FE0D0000 		.4byte	.LLST79
 5404 0b69 16       		.uleb128 0x16
 5405 0b6a 7000     		.ascii	"p\000"
 5406 0b6c 01       		.byte	0x1
 5407 0b6d F307     		.2byte	0x7f3
 5408 0b6f 83000000 		.4byte	0x83
 5409 0b73 110E0000 		.4byte	.LLST80
 5410 0b77 15       		.uleb128 0x15
 5411 0b78 2E070000 		.4byte	.LASF94
 5412 0b7c 01       		.byte	0x1
 5413 0b7d F507     		.2byte	0x7f5
 5414 0b7f 83000000 		.4byte	0x83
 5415 0b83 2F0E0000 		.4byte	.LLST81
 5416 0b87 15       		.uleb128 0x15
 5417 0b88 D6000000 		.4byte	.LASF95
 5418 0b8c 01       		.byte	0x1
 5419 0b8d F607     		.2byte	0x7f6
 5420 0b8f 8F000000 		.4byte	0x8f
 5421 0b93 420E0000 		.4byte	.LLST82
 5422 0b97 16       		.uleb128 0x16
 5423 0b98 746D7000 		.ascii	"tmp\000"
 5424 0b9c 01       		.byte	0x1
 5425 0b9d F807     		.2byte	0x7f8
 5426 0b9f B0000000 		.4byte	0xb0
 5427 0ba3 550E0000 		.4byte	.LLST83
 5428 0ba7 15       		.uleb128 0x15
 5429 0ba8 A4000000 		.4byte	.LASF56
 5430 0bac 01       		.byte	0x1
 5431 0bad F907     		.2byte	0x7f9
 5432 0baf B0000000 		.4byte	0xb0
 5433 0bb3 B50E0000 		.4byte	.LLST84
 5434 0bb7 1E       		.uleb128 0x1e
 5435 0bb8 18000000 		.4byte	.LVL220
 5436 0bbc CC080000 		.4byte	0x8cc
 5437 0bc0 CB0B0000 		.4byte	0xbcb
 5438 0bc4 1D       		.uleb128 0x1d
 5439 0bc5 01       		.uleb128 0x1
 5440 0bc6 50       		.byte	0x50
 5441 0bc7 02       		.uleb128 0x2
 5442 0bc8 74       		.byte	0x74
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 159


 5443 0bc9 00       		.sleb128 0
 5444 0bca 00       		.byte	0
 5445 0bcb 1E       		.uleb128 0x1e
 5446 0bcc BE000000 		.4byte	.LVL236
 5447 0bd0 40090000 		.4byte	0x940
 5448 0bd4 F00B0000 		.4byte	0xbf0
 5449 0bd8 1D       		.uleb128 0x1d
 5450 0bd9 01       		.uleb128 0x1
 5451 0bda 50       		.byte	0x50
 5452 0bdb 02       		.uleb128 0x2
 5453 0bdc 74       		.byte	0x74
 5454 0bdd 00       		.sleb128 0
 5455 0bde 1D       		.uleb128 0x1d
 5456 0bdf 01       		.uleb128 0x1
 5457 0be0 51       		.byte	0x51
 5458 0be1 02       		.uleb128 0x2
 5459 0be2 78       		.byte	0x78
 5460 0be3 00       		.sleb128 0
 5461 0be4 1D       		.uleb128 0x1d
 5462 0be5 01       		.uleb128 0x1
 5463 0be6 52       		.byte	0x52
 5464 0be7 02       		.uleb128 0x2
 5465 0be8 77       		.byte	0x77
 5466 0be9 00       		.sleb128 0
 5467 0bea 1D       		.uleb128 0x1d
 5468 0beb 01       		.uleb128 0x1
 5469 0bec 53       		.byte	0x53
 5470 0bed 01       		.uleb128 0x1
 5471 0bee 32       		.byte	0x32
 5472 0bef 00       		.byte	0
 5473 0bf0 1C       		.uleb128 0x1c
 5474 0bf1 CA000000 		.4byte	.LVL237
 5475 0bf5 0A0A0000 		.4byte	0xa0a
 5476 0bf9 1D       		.uleb128 0x1d
 5477 0bfa 01       		.uleb128 0x1
 5478 0bfb 50       		.byte	0x50
 5479 0bfc 02       		.uleb128 0x2
 5480 0bfd 74       		.byte	0x74
 5481 0bfe 00       		.sleb128 0
 5482 0bff 1D       		.uleb128 0x1d
 5483 0c00 01       		.uleb128 0x1
 5484 0c01 51       		.byte	0x51
 5485 0c02 03       		.uleb128 0x3
 5486 0c03 91       		.byte	0x91
 5487 0c04 5C       		.sleb128 -36
 5488 0c05 06       		.byte	0x6
 5489 0c06 00       		.byte	0
 5490 0c07 00       		.byte	0
 5491 0c08 18       		.uleb128 0x18
 5492 0c09 00070000 		.4byte	.LASF96
 5493 0c0d 01       		.byte	0x1
 5494 0c0e 6A09     		.2byte	0x96a
 5495 0c10 DE000000 		.4byte	0xde
 5496 0c14 00000000 		.4byte	.LFB31
 5497 0c18 20000000 		.4byte	.LFE31-.LFB31
 5498 0c1c 01       		.uleb128 0x1
 5499 0c1d 9C       		.byte	0x9c
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 160


 5500 0c1e 700C0000 		.4byte	0xc70
 5501 0c22 14       		.uleb128 0x14
 5502 0c23 90070000 		.4byte	.LASF71
 5503 0c27 01       		.byte	0x1
 5504 0c28 6A09     		.2byte	0x96a
 5505 0c2a 6B000000 		.4byte	0x6b
 5506 0c2e EB0E0000 		.4byte	.LLST85
 5507 0c32 14       		.uleb128 0x14
 5508 0c33 FC040000 		.4byte	.LASF97
 5509 0c37 01       		.byte	0x1
 5510 0c38 6A09     		.2byte	0x96a
 5511 0c3a DE000000 		.4byte	0xde
 5512 0c3e 0C0F0000 		.4byte	.LLST86
 5513 0c42 19       		.uleb128 0x19
 5514 0c43 4F030000 		.4byte	.LASF98
 5515 0c47 01       		.byte	0x1
 5516 0c48 6C09     		.2byte	0x96c
 5517 0c4a DE000000 		.4byte	0xde
 5518 0c4e 01       		.uleb128 0x1
 5519 0c4f 50       		.byte	0x50
 5520 0c50 20       		.uleb128 0x20
 5521 0c51 D0080000 		.4byte	.LASF99
 5522 0c55 01       		.byte	0x1
 5523 0c56 6D09     		.2byte	0x96d
 5524 0c58 700C0000 		.4byte	0xc70
 5525 0c5c 00000020 		.4byte	0x20000000
 5526 0c60 1C       		.uleb128 0x1c
 5527 0c61 10000000 		.4byte	.LVL261
 5528 0c65 C7070000 		.4byte	0x7c7
 5529 0c69 1D       		.uleb128 0x1d
 5530 0c6a 01       		.uleb128 0x1
 5531 0c6b 50       		.byte	0x50
 5532 0c6c 01       		.uleb128 0x1
 5533 0c6d 30       		.byte	0x30
 5534 0c6e 00       		.byte	0
 5535 0c6f 00       		.byte	0
 5536 0c70 06       		.uleb128 0x6
 5537 0c71 04       		.byte	0x4
 5538 0c72 DE000000 		.4byte	0xde
 5539 0c76 18       		.uleb128 0x18
 5540 0c77 47050000 		.4byte	.LASF100
 5541 0c7b 01       		.byte	0x1
 5542 0c7c 8C09     		.2byte	0x98c
 5543 0c7e DE000000 		.4byte	0xde
 5544 0c82 00000000 		.4byte	.LFB32
 5545 0c86 1C000000 		.4byte	.LFE32-.LFB32
 5546 0c8a 01       		.uleb128 0x1
 5547 0c8b 9C       		.byte	0x9c
 5548 0c8c C00C0000 		.4byte	0xcc0
 5549 0c90 14       		.uleb128 0x14
 5550 0c91 90070000 		.4byte	.LASF71
 5551 0c95 01       		.byte	0x1
 5552 0c96 8C09     		.2byte	0x98c
 5553 0c98 6B000000 		.4byte	0x6b
 5554 0c9c 380F0000 		.4byte	.LLST87
 5555 0ca0 20       		.uleb128 0x20
 5556 0ca1 D0080000 		.4byte	.LASF99
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 161


 5557 0ca5 01       		.byte	0x1
 5558 0ca6 8E09     		.2byte	0x98e
 5559 0ca8 700C0000 		.4byte	0xc70
 5560 0cac 00000020 		.4byte	0x20000000
 5561 0cb0 1C       		.uleb128 0x1c
 5562 0cb1 0E000000 		.4byte	.LVL267
 5563 0cb5 C7070000 		.4byte	0x7c7
 5564 0cb9 1D       		.uleb128 0x1d
 5565 0cba 01       		.uleb128 0x1
 5566 0cbb 50       		.byte	0x50
 5567 0cbc 01       		.uleb128 0x1
 5568 0cbd 30       		.byte	0x30
 5569 0cbe 00       		.byte	0
 5570 0cbf 00       		.byte	0
 5571 0cc0 18       		.uleb128 0x18
 5572 0cc1 23040000 		.4byte	.LASF101
 5573 0cc5 01       		.byte	0x1
 5574 0cc6 A209     		.2byte	0x9a2
 5575 0cc8 DE000000 		.4byte	0xde
 5576 0ccc 00000000 		.4byte	.LFB33
 5577 0cd0 22000000 		.4byte	.LFE33-.LFB33
 5578 0cd4 01       		.uleb128 0x1
 5579 0cd5 9C       		.byte	0x9c
 5580 0cd6 280D0000 		.4byte	0xd28
 5581 0cda 14       		.uleb128 0x14
 5582 0cdb 90070000 		.4byte	.LASF71
 5583 0cdf 01       		.byte	0x1
 5584 0ce0 A209     		.2byte	0x9a2
 5585 0ce2 6B000000 		.4byte	0x6b
 5586 0ce6 590F0000 		.4byte	.LLST88
 5587 0cea 14       		.uleb128 0x14
 5588 0ceb FC040000 		.4byte	.LASF97
 5589 0cef 01       		.byte	0x1
 5590 0cf0 A209     		.2byte	0x9a2
 5591 0cf2 DE000000 		.4byte	0xde
 5592 0cf6 7A0F0000 		.4byte	.LLST89
 5593 0cfa 19       		.uleb128 0x19
 5594 0cfb 4F030000 		.4byte	.LASF98
 5595 0cff 01       		.byte	0x1
 5596 0d00 A409     		.2byte	0x9a4
 5597 0d02 DE000000 		.4byte	0xde
 5598 0d06 01       		.uleb128 0x1
 5599 0d07 50       		.byte	0x50
 5600 0d08 20       		.uleb128 0x20
 5601 0d09 D0080000 		.4byte	.LASF99
 5602 0d0d 01       		.byte	0x1
 5603 0d0e A509     		.2byte	0x9a5
 5604 0d10 700C0000 		.4byte	0xc70
 5605 0d14 00000020 		.4byte	0x20000000
 5606 0d18 1C       		.uleb128 0x1c
 5607 0d19 10000000 		.4byte	.LVL271
 5608 0d1d C7070000 		.4byte	0x7c7
 5609 0d21 1D       		.uleb128 0x1d
 5610 0d22 01       		.uleb128 0x1
 5611 0d23 50       		.byte	0x50
 5612 0d24 01       		.uleb128 0x1
 5613 0d25 30       		.byte	0x30
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 162


 5614 0d26 00       		.byte	0
 5615 0d27 00       		.byte	0
 5616 0d28 18       		.uleb128 0x18
 5617 0d29 08000000 		.4byte	.LASF102
 5618 0d2d 01       		.byte	0x1
 5619 0d2e BE09     		.2byte	0x9be
 5620 0d30 DE000000 		.4byte	0xde
 5621 0d34 00000000 		.4byte	.LFB34
 5622 0d38 1E000000 		.4byte	.LFE34-.LFB34
 5623 0d3c 01       		.uleb128 0x1
 5624 0d3d 9C       		.byte	0x9c
 5625 0d3e 720D0000 		.4byte	0xd72
 5626 0d42 14       		.uleb128 0x14
 5627 0d43 90070000 		.4byte	.LASF71
 5628 0d47 01       		.byte	0x1
 5629 0d48 BE09     		.2byte	0x9be
 5630 0d4a 6B000000 		.4byte	0x6b
 5631 0d4e A60F0000 		.4byte	.LLST90
 5632 0d52 20       		.uleb128 0x20
 5633 0d53 D0080000 		.4byte	.LASF99
 5634 0d57 01       		.byte	0x1
 5635 0d58 C009     		.2byte	0x9c0
 5636 0d5a 700C0000 		.4byte	0xc70
 5637 0d5e 00000020 		.4byte	0x20000000
 5638 0d62 1C       		.uleb128 0x1c
 5639 0d63 0E000000 		.4byte	.LVL277
 5640 0d67 C7070000 		.4byte	0x7c7
 5641 0d6b 1D       		.uleb128 0x1d
 5642 0d6c 01       		.uleb128 0x1
 5643 0d6d 50       		.byte	0x50
 5644 0d6e 01       		.uleb128 0x1
 5645 0d6f 30       		.byte	0x30
 5646 0d70 00       		.byte	0
 5647 0d71 00       		.byte	0
 5648 0d72 13       		.uleb128 0x13
 5649 0d73 2E000000 		.4byte	.LASF103
 5650 0d77 01       		.byte	0x1
 5651 0d78 D109     		.2byte	0x9d1
 5652 0d7a 00000000 		.4byte	.LFB35
 5653 0d7e 4C000000 		.4byte	.LFE35-.LFB35
 5654 0d82 01       		.uleb128 0x1
 5655 0d83 9C       		.byte	0x9c
 5656 0d84 110E0000 		.4byte	0xe11
 5657 0d88 14       		.uleb128 0x14
 5658 0d89 90070000 		.4byte	.LASF71
 5659 0d8d 01       		.byte	0x1
 5660 0d8e D109     		.2byte	0x9d1
 5661 0d90 6B000000 		.4byte	0x6b
 5662 0d94 C70F0000 		.4byte	.LLST91
 5663 0d98 14       		.uleb128 0x14
 5664 0d99 12070000 		.4byte	.LASF104
 5665 0d9d 01       		.byte	0x1
 5666 0d9e D109     		.2byte	0x9d1
 5667 0da0 6B000000 		.4byte	0x6b
 5668 0da4 E80F0000 		.4byte	.LLST92
 5669 0da8 15       		.uleb128 0x15
 5670 0da9 1B010000 		.4byte	.LASF32
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 163


 5671 0dad 01       		.byte	0x1
 5672 0dae D309     		.2byte	0x9d3
 5673 0db0 6B000000 		.4byte	0x6b
 5674 0db4 09100000 		.4byte	.LLST93
 5675 0db8 15       		.uleb128 0x15
 5676 0db9 DD010000 		.4byte	.LASF105
 5677 0dbd 01       		.byte	0x1
 5678 0dbe D409     		.2byte	0x9d4
 5679 0dc0 83000000 		.4byte	0x83
 5680 0dc4 1C100000 		.4byte	.LLST94
 5681 0dc8 15       		.uleb128 0x15
 5682 0dc9 E3020000 		.4byte	.LASF106
 5683 0dcd 01       		.byte	0x1
 5684 0dce D509     		.2byte	0x9d5
 5685 0dd0 83000000 		.4byte	0x83
 5686 0dd4 2F100000 		.4byte	.LLST95
 5687 0dd8 1E       		.uleb128 0x1e
 5688 0dd9 10000000 		.4byte	.LVL280
 5689 0ddd C7070000 		.4byte	0x7c7
 5690 0de1 EB0D0000 		.4byte	0xdeb
 5691 0de5 1D       		.uleb128 0x1d
 5692 0de6 01       		.uleb128 0x1
 5693 0de7 50       		.byte	0x50
 5694 0de8 01       		.uleb128 0x1
 5695 0de9 30       		.byte	0x30
 5696 0dea 00       		.byte	0
 5697 0deb 1E       		.uleb128 0x1e
 5698 0dec 1A000000 		.4byte	.LVL281
 5699 0df0 C7070000 		.4byte	0x7c7
 5700 0df4 FE0D0000 		.4byte	0xdfe
 5701 0df8 1D       		.uleb128 0x1d
 5702 0df9 01       		.uleb128 0x1
 5703 0dfa 50       		.byte	0x50
 5704 0dfb 01       		.uleb128 0x1
 5705 0dfc 30       		.byte	0x30
 5706 0dfd 00       		.byte	0
 5707 0dfe 11       		.uleb128 0x11
 5708 0dff 26000000 		.4byte	.LVL283
 5709 0e03 C4150000 		.4byte	0x15c4
 5710 0e07 11       		.uleb128 0x11
 5711 0e08 46000000 		.4byte	.LVL289
 5712 0e0c CF150000 		.4byte	0x15cf
 5713 0e10 00       		.byte	0
 5714 0e11 18       		.uleb128 0x18
 5715 0e12 5A000000 		.4byte	.LASF107
 5716 0e16 01       		.byte	0x1
 5717 0e17 F309     		.2byte	0x9f3
 5718 0e19 6B000000 		.4byte	0x6b
 5719 0e1d 00000000 		.4byte	.LFB36
 5720 0e21 2C000000 		.4byte	.LFE36-.LFB36
 5721 0e25 01       		.uleb128 0x1
 5722 0e26 9C       		.byte	0x9c
 5723 0e27 5B0E0000 		.4byte	0xe5b
 5724 0e2b 14       		.uleb128 0x14
 5725 0e2c 90070000 		.4byte	.LASF71
 5726 0e30 01       		.byte	0x1
 5727 0e31 F309     		.2byte	0x9f3
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 164


 5728 0e33 6B000000 		.4byte	0x6b
 5729 0e37 63100000 		.4byte	.LLST96
 5730 0e3b 15       		.uleb128 0x15
 5731 0e3c 12070000 		.4byte	.LASF104
 5732 0e40 01       		.byte	0x1
 5733 0e41 F509     		.2byte	0x9f5
 5734 0e43 6B000000 		.4byte	0x6b
 5735 0e47 84100000 		.4byte	.LLST97
 5736 0e4b 1C       		.uleb128 0x1c
 5737 0e4c 0E000000 		.4byte	.LVL293
 5738 0e50 C7070000 		.4byte	0x7c7
 5739 0e54 1D       		.uleb128 0x1d
 5740 0e55 01       		.uleb128 0x1
 5741 0e56 50       		.byte	0x50
 5742 0e57 01       		.uleb128 0x1
 5743 0e58 30       		.byte	0x30
 5744 0e59 00       		.byte	0
 5745 0e5a 00       		.byte	0
 5746 0e5b 0F       		.uleb128 0xf
 5747 0e5c 90080000 		.4byte	.LASF108
 5748 0e60 01       		.byte	0x1
 5749 0e61 6E0A     		.2byte	0xa6e
 5750 0e63 00000000 		.4byte	.LFB43
 5751 0e67 18000000 		.4byte	.LFE43-.LFB43
 5752 0e6b 01       		.uleb128 0x1
 5753 0e6c 9C       		.byte	0x9c
 5754 0e6d 13       		.uleb128 0x13
 5755 0e6e 26000000 		.4byte	.LASF109
 5756 0e72 01       		.byte	0x1
 5757 0e73 820A     		.2byte	0xa82
 5758 0e75 00000000 		.4byte	.LFB44
 5759 0e79 30000000 		.4byte	.LFE44-.LFB44
 5760 0e7d 01       		.uleb128 0x1
 5761 0e7e 9C       		.byte	0x9c
 5762 0e7f A60E0000 		.4byte	0xea6
 5763 0e83 14       		.uleb128 0x14
 5764 0e84 89000000 		.4byte	.LASF110
 5765 0e88 01       		.byte	0x1
 5766 0e89 820A     		.2byte	0xa82
 5767 0e8b 83000000 		.4byte	0x83
 5768 0e8f 97100000 		.4byte	.LLST98
 5769 0e93 11       		.uleb128 0x11
 5770 0e94 0E000000 		.4byte	.LVL298
 5771 0e98 DA150000 		.4byte	0x15da
 5772 0e9c 11       		.uleb128 0x11
 5773 0e9d 26000000 		.4byte	.LVL300
 5774 0ea1 DA150000 		.4byte	0x15da
 5775 0ea5 00       		.byte	0
 5776 0ea6 10       		.uleb128 0x10
 5777 0ea7 E3040000 		.4byte	.LASF111
 5778 0eab 01       		.byte	0x1
 5779 0eac B0       		.byte	0xb0
 5780 0ead 00000000 		.4byte	.LFB3
 5781 0eb1 CC000000 		.4byte	.LFE3-.LFB3
 5782 0eb5 01       		.uleb128 0x1
 5783 0eb6 9C       		.byte	0x9c
 5784 0eb7 4F0F0000 		.4byte	0xf4f
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 165


 5785 0ebb 21       		.uleb128 0x21
 5786 0ebc 85030000 		.4byte	.LASF53
 5787 0ec0 01       		.byte	0x1
 5788 0ec1 B6       		.byte	0xb6
 5789 0ec2 83000000 		.4byte	0x83
 5790 0ec6 B5100000 		.4byte	.LLST99
 5791 0eca 21       		.uleb128 0x21
 5792 0ecb 1B010000 		.4byte	.LASF32
 5793 0ecf 01       		.byte	0x1
 5794 0ed0 B7       		.byte	0xb7
 5795 0ed1 6B000000 		.4byte	0x6b
 5796 0ed5 D5100000 		.4byte	.LLST100
 5797 0ed9 21       		.uleb128 0x21
 5798 0eda DC020000 		.4byte	.LASF51
 5799 0ede 01       		.byte	0x1
 5800 0edf B8       		.byte	0xb8
 5801 0ee0 83000000 		.4byte	0x83
 5802 0ee4 E8100000 		.4byte	.LLST101
 5803 0ee8 21       		.uleb128 0x21
 5804 0ee9 97070000 		.4byte	.LASF112
 5805 0eed 01       		.byte	0x1
 5806 0eee B9       		.byte	0xb9
 5807 0eef 83000000 		.4byte	0x83
 5808 0ef3 33110000 		.4byte	.LLST102
 5809 0ef7 22       		.uleb128 0x22
 5810 0ef8 DE030000 		.4byte	.LASF113
 5811 0efc 01       		.byte	0x1
 5812 0efd BA       		.byte	0xba
 5813 0efe D9000000 		.4byte	0xd9
 5814 0f02 02       		.uleb128 0x2
 5815 0f03 91       		.byte	0x91
 5816 0f04 6C       		.sleb128 -20
 5817 0f05 11       		.uleb128 0x11
 5818 0f06 08000000 		.4byte	.LVL303
 5819 0f0a E5150000 		.4byte	0x15e5
 5820 0f0e 11       		.uleb128 0x11
 5821 0f0f 10000000 		.4byte	.LVL304
 5822 0f13 C4150000 		.4byte	0x15c4
 5823 0f17 1E       		.uleb128 0x1e
 5824 0f18 84000000 		.4byte	.LVL319
 5825 0f1c F0150000 		.4byte	0x15f0
 5826 0f20 2B0F0000 		.4byte	0xf2b
 5827 0f24 1D       		.uleb128 0x1d
 5828 0f25 01       		.uleb128 0x1
 5829 0f26 50       		.byte	0x50
 5830 0f27 02       		.uleb128 0x2
 5831 0f28 08       		.byte	0x8
 5832 0f29 30       		.byte	0x30
 5833 0f2a 00       		.byte	0
 5834 0f2b 1E       		.uleb128 0x1e
 5835 0f2c 96000000 		.4byte	.LVL320
 5836 0f30 6D0E0000 		.4byte	0xe6d
 5837 0f34 3E0F0000 		.4byte	0xf3e
 5838 0f38 1D       		.uleb128 0x1d
 5839 0f39 01       		.uleb128 0x1
 5840 0f3a 50       		.byte	0x50
 5841 0f3b 01       		.uleb128 0x1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 166


 5842 0f3c 44       		.byte	0x44
 5843 0f3d 00       		.byte	0
 5844 0f3e 1C       		.uleb128 0x1c
 5845 0f3f A0000000 		.4byte	.LVL321
 5846 0f43 CF150000 		.4byte	0x15cf
 5847 0f47 1D       		.uleb128 0x1d
 5848 0f48 01       		.uleb128 0x1
 5849 0f49 50       		.byte	0x50
 5850 0f4a 02       		.uleb128 0x2
 5851 0f4b 74       		.byte	0x74
 5852 0f4c 00       		.sleb128 0
 5853 0f4d 00       		.byte	0
 5854 0f4e 00       		.byte	0
 5855 0f4f 13       		.uleb128 0x13
 5856 0f50 B9090000 		.4byte	.LASF114
 5857 0f54 01       		.byte	0x1
 5858 0f55 A703     		.2byte	0x3a7
 5859 0f57 00000000 		.4byte	.LFB10
 5860 0f5b D8000000 		.4byte	.LFE10-.LFB10
 5861 0f5f 01       		.uleb128 0x1
 5862 0f60 9C       		.byte	0x9c
 5863 0f61 17100000 		.4byte	0x1017
 5864 0f65 14       		.uleb128 0x14
 5865 0f66 85030000 		.4byte	.LASF53
 5866 0f6a 01       		.byte	0x1
 5867 0f6b A703     		.2byte	0x3a7
 5868 0f6d 83000000 		.4byte	0x83
 5869 0f71 52110000 		.4byte	.LLST103
 5870 0f75 15       		.uleb128 0x15
 5871 0f76 1B010000 		.4byte	.LASF32
 5872 0f7a 01       		.byte	0x1
 5873 0f7b A903     		.2byte	0x3a9
 5874 0f7d 6B000000 		.4byte	0x6b
 5875 0f81 A2110000 		.4byte	.LLST104
 5876 0f85 15       		.uleb128 0x15
 5877 0f86 96000000 		.4byte	.LASF115
 5878 0f8a 01       		.byte	0x1
 5879 0f8b AA03     		.2byte	0x3aa
 5880 0f8d 6B000000 		.4byte	0x6b
 5881 0f91 B6110000 		.4byte	.LLST105
 5882 0f95 15       		.uleb128 0x15
 5883 0f96 4A060000 		.4byte	.LASF116
 5884 0f9a 01       		.byte	0x1
 5885 0f9b AD03     		.2byte	0x3ad
 5886 0f9d 83000000 		.4byte	0x83
 5887 0fa1 DA110000 		.4byte	.LLST106
 5888 0fa5 11       		.uleb128 0x11
 5889 0fa6 26000000 		.4byte	.LVL324
 5890 0faa C4150000 		.4byte	0x15c4
 5891 0fae 11       		.uleb128 0x11
 5892 0faf 2C000000 		.4byte	.LVL326
 5893 0fb3 BC010000 		.4byte	0x1bc
 5894 0fb7 11       		.uleb128 0x11
 5895 0fb8 34000000 		.4byte	.LVL328
 5896 0fbc 8B010000 		.4byte	0x18b
 5897 0fc0 1E       		.uleb128 0x1e
 5898 0fc1 74000000 		.4byte	.LVL335
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 167


 5899 0fc5 DA150000 		.4byte	0x15da
 5900 0fc9 D40F0000 		.4byte	0xfd4
 5901 0fcd 1D       		.uleb128 0x1d
 5902 0fce 01       		.uleb128 0x1
 5903 0fcf 50       		.byte	0x50
 5904 0fd0 02       		.uleb128 0x2
 5905 0fd1 08       		.byte	0x8
 5906 0fd2 32       		.byte	0x32
 5907 0fd3 00       		.byte	0
 5908 0fd4 1E       		.uleb128 0x1e
 5909 0fd5 94000000 		.4byte	.LVL336
 5910 0fd9 DA150000 		.4byte	0x15da
 5911 0fdd E80F0000 		.4byte	0xfe8
 5912 0fe1 1D       		.uleb128 0x1d
 5913 0fe2 01       		.uleb128 0x1
 5914 0fe3 50       		.byte	0x50
 5915 0fe4 02       		.uleb128 0x2
 5916 0fe5 08       		.byte	0x8
 5917 0fe6 32       		.byte	0x32
 5918 0fe7 00       		.byte	0
 5919 0fe8 11       		.uleb128 0x11
 5920 0fe9 AE000000 		.4byte	.LVL338
 5921 0fed A60E0000 		.4byte	0xea6
 5922 0ff1 1E       		.uleb128 0x1e
 5923 0ff2 B4000000 		.4byte	.LVL339
 5924 0ff6 CF150000 		.4byte	0x15cf
 5925 0ffa 07100000 		.4byte	0x1007
 5926 0ffe 1D       		.uleb128 0x1d
 5927 0fff 01       		.uleb128 0x1
 5928 1000 50       		.byte	0x50
 5929 1001 04       		.uleb128 0x4
 5930 1002 91       		.byte	0x91
 5931 1003 64       		.sleb128 -28
 5932 1004 94       		.byte	0x94
 5933 1005 01       		.byte	0x1
 5934 1006 00       		.byte	0
 5935 1007 1C       		.uleb128 0x1c
 5936 1008 BC000000 		.4byte	.LVL342
 5937 100c C7070000 		.4byte	0x7c7
 5938 1010 1D       		.uleb128 0x1d
 5939 1011 01       		.uleb128 0x1
 5940 1012 50       		.byte	0x50
 5941 1013 01       		.uleb128 0x1
 5942 1014 30       		.byte	0x30
 5943 1015 00       		.byte	0
 5944 1016 00       		.byte	0
 5945 1017 13       		.uleb128 0x13
 5946 1018 A6020000 		.4byte	.LASF117
 5947 101c 01       		.byte	0x1
 5948 101d 990A     		.2byte	0xa99
 5949 101f 00000000 		.4byte	.LFB45
 5950 1023 14000000 		.4byte	.LFE45-.LFB45
 5951 1027 01       		.uleb128 0x1
 5952 1028 9C       		.byte	0x9c
 5953 1029 47100000 		.4byte	0x1047
 5954 102d 14       		.uleb128 0x14
 5955 102e 14090000 		.4byte	.LASF118
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 168


 5956 1032 01       		.byte	0x1
 5957 1033 990A     		.2byte	0xa99
 5958 1035 77000000 		.4byte	0x77
 5959 1039 1D120000 		.4byte	.LLST107
 5960 103d 11       		.uleb128 0x11
 5961 103e 0C000000 		.4byte	.LVL345
 5962 1042 DA150000 		.4byte	0x15da
 5963 1046 00       		.byte	0
 5964 1047 18       		.uleb128 0x18
 5965 1048 AB050000 		.4byte	.LASF119
 5966 104c 01       		.byte	0x1
 5967 104d 6E04     		.2byte	0x46e
 5968 104f B0000000 		.4byte	0xb0
 5969 1053 00000000 		.4byte	.LFB12
 5970 1057 48000000 		.4byte	.LFE12-.LFB12
 5971 105b 01       		.uleb128 0x1
 5972 105c 9C       		.byte	0x9c
 5973 105d B1100000 		.4byte	0x10b1
 5974 1061 14       		.uleb128 0x14
 5975 1062 A9080000 		.4byte	.LASF120
 5976 1066 01       		.byte	0x1
 5977 1067 6E04     		.2byte	0x46e
 5978 1069 83000000 		.4byte	0x83
 5979 106d 3E120000 		.4byte	.LLST108
 5980 1071 15       		.uleb128 0x15
 5981 1072 A4000000 		.4byte	.LASF56
 5982 1076 01       		.byte	0x1
 5983 1077 7004     		.2byte	0x470
 5984 1079 B0000000 		.4byte	0xb0
 5985 107d 5C120000 		.4byte	.LLST109
 5986 1081 1E       		.uleb128 0x1e
 5987 1082 16000000 		.4byte	.LVL349
 5988 1086 17100000 		.4byte	0x1017
 5989 108a 94100000 		.4byte	0x1094
 5990 108e 1D       		.uleb128 0x1d
 5991 108f 01       		.uleb128 0x1
 5992 1090 50       		.byte	0x50
 5993 1091 01       		.uleb128 0x1
 5994 1092 3A       		.byte	0x3a
 5995 1093 00       		.byte	0
 5996 1094 1E       		.uleb128 0x1e
 5997 1095 2C000000 		.4byte	.LVL350
 5998 1099 17100000 		.4byte	0x1017
 5999 109d A7100000 		.4byte	0x10a7
 6000 10a1 1D       		.uleb128 0x1d
 6001 10a2 01       		.uleb128 0x1
 6002 10a3 50       		.byte	0x50
 6003 10a4 01       		.uleb128 0x1
 6004 10a5 31       		.byte	0x31
 6005 10a6 00       		.byte	0
 6006 10a7 11       		.uleb128 0x11
 6007 10a8 30000000 		.4byte	.LVL351
 6008 10ac 4F030000 		.4byte	0x34f
 6009 10b0 00       		.byte	0
 6010 10b1 18       		.uleb128 0x18
 6011 10b2 34090000 		.4byte	.LASF121
 6012 10b6 01       		.byte	0x1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 169


 6013 10b7 7006     		.2byte	0x670
 6014 10b9 B0000000 		.4byte	0xb0
 6015 10bd 00000000 		.4byte	.LFB17
 6016 10c1 9C000000 		.4byte	.LFE17-.LFB17
 6017 10c5 01       		.uleb128 0x1
 6018 10c6 9C       		.byte	0x9c
 6019 10c7 8A110000 		.4byte	0x118a
 6020 10cb 1B       		.uleb128 0x1b
 6021 10cc 706C6C00 		.ascii	"pll\000"
 6022 10d0 01       		.byte	0x1
 6023 10d1 7006     		.2byte	0x670
 6024 10d3 83000000 		.4byte	0x83
 6025 10d7 7B120000 		.4byte	.LLST110
 6026 10db 14       		.uleb128 0x14
 6027 10dc 28060000 		.4byte	.LASF122
 6028 10e0 01       		.byte	0x1
 6029 10e1 7006     		.2byte	0x670
 6030 10e3 83000000 		.4byte	0x83
 6031 10e7 D3120000 		.4byte	.LLST111
 6032 10eb 15       		.uleb128 0x15
 6033 10ec 7E030000 		.4byte	.LASF123
 6034 10f0 01       		.byte	0x1
 6035 10f1 7206     		.2byte	0x672
 6036 10f3 83000000 		.4byte	0x83
 6037 10f7 31130000 		.4byte	.LLST112
 6038 10fb 15       		.uleb128 0x15
 6039 10fc 1B010000 		.4byte	.LASF32
 6040 1100 01       		.byte	0x1
 6041 1101 7306     		.2byte	0x673
 6042 1103 6B000000 		.4byte	0x6b
 6043 1107 76130000 		.4byte	.LLST113
 6044 110b 15       		.uleb128 0x15
 6045 110c A4000000 		.4byte	.LASF56
 6046 1110 01       		.byte	0x1
 6047 1111 7406     		.2byte	0x674
 6048 1113 B0000000 		.4byte	0xb0
 6049 1117 94130000 		.4byte	.LLST114
 6050 111b 11       		.uleb128 0x11
 6051 111c 12000000 		.4byte	.LVL357
 6052 1120 C4150000 		.4byte	0x15c4
 6053 1124 11       		.uleb128 0x11
 6054 1125 3A000000 		.4byte	.LVL358
 6055 1129 CF150000 		.4byte	0x15cf
 6056 112d 1E       		.uleb128 0x1e
 6057 112e 40000000 		.4byte	.LVL359
 6058 1132 17100000 		.4byte	0x1017
 6059 1136 40110000 		.4byte	0x1140
 6060 113a 1D       		.uleb128 0x1d
 6061 113b 01       		.uleb128 0x1
 6062 113c 50       		.byte	0x50
 6063 113d 01       		.uleb128 0x1
 6064 113e 35       		.byte	0x35
 6065 113f 00       		.byte	0
 6066 1140 11       		.uleb128 0x11
 6067 1141 44000000 		.4byte	.LVL360
 6068 1145 C4150000 		.4byte	0x15c4
 6069 1149 11       		.uleb128 0x11
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 170


 6070 114a 5A000000 		.4byte	.LVL361
 6071 114e CF150000 		.4byte	0x15cf
 6072 1152 1E       		.uleb128 0x1e
 6073 1153 68000000 		.4byte	.LVL363
 6074 1157 EC070000 		.4byte	0x7ec
 6075 115b 66110000 		.4byte	0x1166
 6076 115f 1D       		.uleb128 0x1d
 6077 1160 01       		.uleb128 0x1
 6078 1161 50       		.byte	0x50
 6079 1162 02       		.uleb128 0x2
 6080 1163 74       		.byte	0x74
 6081 1164 00       		.sleb128 0
 6082 1165 00       		.byte	0
 6083 1166 1E       		.uleb128 0x1e
 6084 1167 72000000 		.4byte	.LVL364
 6085 116b A5050000 		.4byte	0x5a5
 6086 116f 7A110000 		.4byte	0x117a
 6087 1173 1D       		.uleb128 0x1d
 6088 1174 01       		.uleb128 0x1
 6089 1175 50       		.byte	0x50
 6090 1176 02       		.uleb128 0x2
 6091 1177 74       		.byte	0x74
 6092 1178 00       		.sleb128 0
 6093 1179 00       		.byte	0
 6094 117a 1C       		.uleb128 0x1c
 6095 117b 7C000000 		.4byte	.LVL365
 6096 117f 17100000 		.4byte	0x1017
 6097 1183 1D       		.uleb128 0x1d
 6098 1184 01       		.uleb128 0x1
 6099 1185 50       		.byte	0x50
 6100 1186 01       		.uleb128 0x1
 6101 1187 31       		.byte	0x31
 6102 1188 00       		.byte	0
 6103 1189 00       		.byte	0
 6104 118a 23       		.uleb128 0x23
 6105 118b A5010000 		.4byte	.LASF124
 6106 118f 01       		.byte	0x1
 6107 1190 A70A     		.2byte	0xaa7
 6108 1192 00000000 		.4byte	.LFB46
 6109 1196 4C000000 		.4byte	.LFE46-.LFB46
 6110 119a 01       		.uleb128 0x1
 6111 119b 9C       		.byte	0x9c
 6112 119c B1110000 		.4byte	0x11b1
 6113 11a0 14       		.uleb128 0x14
 6114 11a1 85030000 		.4byte	.LASF53
 6115 11a5 01       		.byte	0x1
 6116 11a6 A70A     		.2byte	0xaa7
 6117 11a8 83000000 		.4byte	0x83
 6118 11ac B3130000 		.4byte	.LLST115
 6119 11b0 00       		.byte	0
 6120 11b1 0F       		.uleb128 0xf
 6121 11b2 06030000 		.4byte	.LASF125
 6122 11b6 01       		.byte	0x1
 6123 11b7 130B     		.2byte	0xb13
 6124 11b9 00000000 		.4byte	.LFB50
 6125 11bd 10000000 		.4byte	.LFE50-.LFB50
 6126 11c1 01       		.uleb128 0x1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 171


 6127 11c2 9C       		.byte	0x9c
 6128 11c3 0F       		.uleb128 0xf
 6129 11c4 45090000 		.4byte	.LASF126
 6130 11c8 01       		.byte	0x1
 6131 11c9 230B     		.2byte	0xb23
 6132 11cb 00000000 		.4byte	.LFB51
 6133 11cf 10000000 		.4byte	.LFE51-.LFB51
 6134 11d3 01       		.uleb128 0x1
 6135 11d4 9C       		.byte	0x9c
 6136 11d5 13       		.uleb128 0x13
 6137 11d6 04050000 		.4byte	.LASF127
 6138 11da 01       		.byte	0x1
 6139 11db 020B     		.2byte	0xb02
 6140 11dd 00000000 		.4byte	.LFB49
 6141 11e1 18000000 		.4byte	.LFE49-.LFB49
 6142 11e5 01       		.uleb128 0x1
 6143 11e6 9C       		.byte	0x9c
 6144 11e7 F5110000 		.4byte	0x11f5
 6145 11eb 11       		.uleb128 0x11
 6146 11ec 06000000 		.4byte	.LVL378
 6147 11f0 C3110000 		.4byte	0x11c3
 6148 11f4 00       		.byte	0
 6149 11f5 0F       		.uleb128 0xf
 6150 11f6 4A070000 		.4byte	.LASF128
 6151 11fa 01       		.byte	0x1
 6152 11fb 330B     		.2byte	0xb33
 6153 11fd 00000000 		.4byte	.LFB52
 6154 1201 10000000 		.4byte	.LFE52-.LFB52
 6155 1205 01       		.uleb128 0x1
 6156 1206 9C       		.byte	0x9c
 6157 1207 13       		.uleb128 0x13
 6158 1208 AA060000 		.4byte	.LASF129
 6159 120c 01       		.byte	0x1
 6160 120d 440B     		.2byte	0xb44
 6161 120f 00000000 		.4byte	.LFB53
 6162 1213 10000000 		.4byte	.LFE53-.LFB53
 6163 1217 01       		.uleb128 0x1
 6164 1218 9C       		.byte	0x9c
 6165 1219 2E120000 		.4byte	0x122e
 6166 121d 14       		.uleb128 0x14
 6167 121e E3020000 		.4byte	.LASF106
 6168 1222 01       		.byte	0x1
 6169 1223 440B     		.2byte	0xb44
 6170 1225 83000000 		.4byte	0x83
 6171 1229 D4130000 		.4byte	.LLST116
 6172 122d 00       		.byte	0
 6173 122e 12       		.uleb128 0x12
 6174 122f 7B020000 		.4byte	.LASF131
 6175 1233 01       		.byte	0x1
 6176 1234 540B     		.2byte	0xb54
 6177 1236 83000000 		.4byte	0x83
 6178 123a 00000000 		.4byte	.LFB54
 6179 123e 10000000 		.4byte	.LFE54-.LFB54
 6180 1242 01       		.uleb128 0x1
 6181 1243 9C       		.byte	0x9c
 6182 1244 12       		.uleb128 0x12
 6183 1245 6C050000 		.4byte	.LASF132
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 172


 6184 1249 01       		.byte	0x1
 6185 124a 640B     		.2byte	0xb64
 6186 124c 83000000 		.4byte	0x83
 6187 1250 00000000 		.4byte	.LFB55
 6188 1254 10000000 		.4byte	.LFE55-.LFB55
 6189 1258 01       		.uleb128 0x1
 6190 1259 9C       		.byte	0x9c
 6191 125a 13       		.uleb128 0x13
 6192 125b 10060000 		.4byte	.LASF133
 6193 125f 01       		.byte	0x1
 6194 1260 840B     		.2byte	0xb84
 6195 1262 00000000 		.4byte	.LFB56
 6196 1266 20000000 		.4byte	.LFE56-.LFB56
 6197 126a 01       		.uleb128 0x1
 6198 126b 9C       		.byte	0x9c
 6199 126c 7F120000 		.4byte	0x127f
 6200 1270 17       		.uleb128 0x17
 6201 1271 72060000 		.4byte	.LASF134
 6202 1275 01       		.byte	0x1
 6203 1276 840B     		.2byte	0xb84
 6204 1278 83000000 		.4byte	0x83
 6205 127c 01       		.uleb128 0x1
 6206 127d 50       		.byte	0x50
 6207 127e 00       		.byte	0
 6208 127f 12       		.uleb128 0x12
 6209 1280 78080000 		.4byte	.LASF135
 6210 1284 01       		.byte	0x1
 6211 1285 9D0B     		.2byte	0xb9d
 6212 1287 83000000 		.4byte	0x83
 6213 128b 00000000 		.4byte	.LFB57
 6214 128f 10000000 		.4byte	.LFE57-.LFB57
 6215 1293 01       		.uleb128 0x1
 6216 1294 9C       		.byte	0x9c
 6217 1295 12       		.uleb128 0x12
 6218 1296 BA030000 		.4byte	.LASF136
 6219 129a 01       		.byte	0x1
 6220 129b B40B     		.2byte	0xbb4
 6221 129d 83000000 		.4byte	0x83
 6222 12a1 00000000 		.4byte	.LFB58
 6223 12a5 10000000 		.4byte	.LFE58-.LFB58
 6224 12a9 01       		.uleb128 0x1
 6225 12aa 9C       		.byte	0x9c
 6226 12ab 24       		.uleb128 0x24
 6227 12ac F1050000 		.4byte	.LASF167
 6228 12b0 01       		.byte	0x1
 6229 12b1 090C     		.2byte	0xc09
 6230 12b3 00000000 		.4byte	.LFB62
 6231 12b7 28000000 		.4byte	.LFE62-.LFB62
 6232 12bb 01       		.uleb128 0x1
 6233 12bc 9C       		.byte	0x9c
 6234 12bd D9120000 		.4byte	0x12d9
 6235 12c1 16       		.uleb128 0x16
 6236 12c2 6900     		.ascii	"i\000"
 6237 12c4 01       		.byte	0x1
 6238 12c5 0B0C     		.2byte	0xc0b
 6239 12c7 83000000 		.4byte	0x83
 6240 12cb F5130000 		.4byte	.LLST117
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 173


 6241 12cf 11       		.uleb128 0x11
 6242 12d0 06000000 		.4byte	.LVL382
 6243 12d4 95120000 		.4byte	0x1295
 6244 12d8 00       		.byte	0
 6245 12d9 0F       		.uleb128 0xf
 6246 12da 17000000 		.4byte	.LASF137
 6247 12de 01       		.byte	0x1
 6248 12df C10B     		.2byte	0xbc1
 6249 12e1 00000000 		.4byte	.LFB59
 6250 12e5 0C000000 		.4byte	.LFE59-.LFB59
 6251 12e9 01       		.uleb128 0x1
 6252 12ea 9C       		.byte	0x9c
 6253 12eb 23       		.uleb128 0x23
 6254 12ec A4070000 		.4byte	.LASF138
 6255 12f0 01       		.byte	0x1
 6256 12f1 E40A     		.2byte	0xae4
 6257 12f3 00000000 		.4byte	.LFB48
 6258 12f7 44000000 		.4byte	.LFE48-.LFB48
 6259 12fb 01       		.uleb128 0x1
 6260 12fc 9C       		.byte	0x9c
 6261 12fd 51130000 		.4byte	0x1351
 6262 1301 16       		.uleb128 0x16
 6263 1302 6900     		.ascii	"i\000"
 6264 1304 01       		.byte	0x1
 6265 1305 E60A     		.2byte	0xae6
 6266 1307 83000000 		.4byte	0x83
 6267 130b 13140000 		.4byte	.LLST118
 6268 130f 1E       		.uleb128 0x1e
 6269 1310 1C000000 		.4byte	.LVL392
 6270 1314 080C0000 		.4byte	0xc08
 6271 1318 2B130000 		.4byte	0x132b
 6272 131c 1D       		.uleb128 0x1d
 6273 131d 01       		.uleb128 0x1
 6274 131e 50       		.byte	0x50
 6275 131f 01       		.uleb128 0x1
 6276 1320 3F       		.byte	0x3f
 6277 1321 1D       		.uleb128 0x1d
 6278 1322 01       		.uleb128 0x1
 6279 1323 51       		.byte	0x51
 6280 1324 05       		.uleb128 0x5
 6281 1325 03       		.byte	0x3
 6282 1326 00000000 		.4byte	CySysTickServiceCallbacks
 6283 132a 00       		.byte	0
 6284 132b 1E       		.uleb128 0x1e
 6285 132c 22000000 		.4byte	.LVL393
 6286 1330 5A120000 		.4byte	0x125a
 6287 1334 3E130000 		.4byte	0x133e
 6288 1338 1D       		.uleb128 0x1d
 6289 1339 01       		.uleb128 0x1
 6290 133a 50       		.byte	0x50
 6291 133b 01       		.uleb128 0x1
 6292 133c 31       		.byte	0x31
 6293 133d 00       		.byte	0
 6294 133e 11       		.uleb128 0x11
 6295 133f 32000000 		.4byte	.LVL395
 6296 1343 07120000 		.4byte	0x1207
 6297 1347 11       		.uleb128 0x11
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 174


 6298 1348 36000000 		.4byte	.LVL396
 6299 134c D9120000 		.4byte	0x12d9
 6300 1350 00       		.byte	0
 6301 1351 13       		.uleb128 0x13
 6302 1352 E2050000 		.4byte	.LASF139
 6303 1356 01       		.byte	0x1
 6304 1357 C70A     		.2byte	0xac7
 6305 1359 00000000 		.4byte	.LFB47
 6306 135d 20000000 		.4byte	.LFE47-.LFB47
 6307 1361 01       		.uleb128 0x1
 6308 1362 9C       		.byte	0x9c
 6309 1363 7A130000 		.4byte	0x137a
 6310 1367 11       		.uleb128 0x11
 6311 1368 0E000000 		.4byte	.LVL397
 6312 136c EB120000 		.4byte	0x12eb
 6313 1370 11       		.uleb128 0x11
 6314 1371 18000000 		.4byte	.LVL398
 6315 1375 D5110000 		.4byte	0x11d5
 6316 1379 00       		.byte	0
 6317 137a 18       		.uleb128 0x18
 6318 137b 83010000 		.4byte	.LASF140
 6319 137f 01       		.byte	0x1
 6320 1380 E40B     		.2byte	0xbe4
 6321 1382 FF000000 		.4byte	0xff
 6322 1386 00000000 		.4byte	.LFB60
 6323 138a 10000000 		.4byte	.LFE60-.LFB60
 6324 138e 01       		.uleb128 0x1
 6325 138f 9C       		.byte	0x9c
 6326 1390 C1130000 		.4byte	0x13c1
 6327 1394 14       		.uleb128 0x14
 6328 1395 90070000 		.4byte	.LASF71
 6329 1399 01       		.byte	0x1
 6330 139a E40B     		.2byte	0xbe4
 6331 139c 83000000 		.4byte	0x83
 6332 13a0 32140000 		.4byte	.LLST119
 6333 13a4 17       		.uleb128 0x17
 6334 13a5 ED080000 		.4byte	.LASF141
 6335 13a9 01       		.byte	0x1
 6336 13aa E40B     		.2byte	0xbe4
 6337 13ac FF000000 		.4byte	0xff
 6338 13b0 01       		.uleb128 0x1
 6339 13b1 51       		.byte	0x51
 6340 13b2 19       		.uleb128 0x19
 6341 13b3 6B080000 		.4byte	.LASF142
 6342 13b7 01       		.byte	0x1
 6343 13b8 E60B     		.2byte	0xbe6
 6344 13ba FF000000 		.4byte	0xff
 6345 13be 01       		.uleb128 0x1
 6346 13bf 50       		.byte	0x50
 6347 13c0 00       		.byte	0
 6348 13c1 18       		.uleb128 0x18
 6349 13c2 3A030000 		.4byte	.LASF143
 6350 13c6 01       		.byte	0x1
 6351 13c7 FC0B     		.2byte	0xbfc
 6352 13c9 FF000000 		.4byte	0xff
 6353 13cd 00000000 		.4byte	.LFB61
 6354 13d1 0C000000 		.4byte	.LFE61-.LFB61
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 175


 6355 13d5 01       		.uleb128 0x1
 6356 13d6 9C       		.byte	0x9c
 6357 13d7 EC130000 		.4byte	0x13ec
 6358 13db 14       		.uleb128 0x14
 6359 13dc 90070000 		.4byte	.LASF71
 6360 13e0 01       		.byte	0x1
 6361 13e1 FC0B     		.2byte	0xbfc
 6362 13e3 83000000 		.4byte	0x83
 6363 13e7 53140000 		.4byte	.LLST120
 6364 13eb 00       		.byte	0
 6365 13ec 13       		.uleb128 0x13
 6366 13ed DF080000 		.4byte	.LASF144
 6367 13f1 01       		.byte	0x1
 6368 13f2 290C     		.2byte	0xc29
 6369 13f4 00000000 		.4byte	.LFB63
 6370 13f8 70000000 		.4byte	.LFE63-.LFB63
 6371 13fc 01       		.uleb128 0x1
 6372 13fd 9C       		.byte	0x9c
 6373 13fe 11140000 		.4byte	0x1411
 6374 1402 17       		.uleb128 0x17
 6375 1403 10080000 		.4byte	.LASF145
 6376 1407 01       		.byte	0x1
 6377 1408 290C     		.2byte	0xc29
 6378 140a 11140000 		.4byte	0x1411
 6379 140e 01       		.uleb128 0x1
 6380 140f 50       		.byte	0x50
 6381 1410 00       		.byte	0
 6382 1411 06       		.uleb128 0x6
 6383 1412 04       		.byte	0x4
 6384 1413 83000000 		.4byte	0x83
 6385 1417 13       		.uleb128 0x13
 6386 1418 54040000 		.4byte	.LASF146
 6387 141c 01       		.byte	0x1
 6388 141d 560C     		.2byte	0xc56
 6389 141f 00000000 		.4byte	.LFB64
 6390 1423 20000000 		.4byte	.LFE64-.LFB64
 6391 1427 01       		.uleb128 0x1
 6392 1428 9C       		.byte	0x9c
 6393 1429 4E140000 		.4byte	0x144e
 6394 142d 14       		.uleb128 0x14
 6395 142e 89070000 		.4byte	.LASF63
 6396 1432 01       		.byte	0x1
 6397 1433 560C     		.2byte	0xc56
 6398 1435 83000000 		.4byte	0x83
 6399 1439 74140000 		.4byte	.LLST121
 6400 143d 15       		.uleb128 0x15
 6401 143e DC020000 		.4byte	.LASF51
 6402 1442 01       		.byte	0x1
 6403 1443 580C     		.2byte	0xc58
 6404 1445 83000000 		.4byte	0x83
 6405 1449 95140000 		.4byte	.LLST122
 6406 144d 00       		.byte	0
 6407 144e 13       		.uleb128 0x13
 6408 144f 28050000 		.4byte	.LASF147
 6409 1453 01       		.byte	0x1
 6410 1454 720C     		.2byte	0xc72
 6411 1456 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 176


 6412 145a 20000000 		.4byte	.LFE65-.LFB65
 6413 145e 01       		.uleb128 0x1
 6414 145f 9C       		.byte	0x9c
 6415 1460 85140000 		.4byte	0x1485
 6416 1464 14       		.uleb128 0x14
 6417 1465 89070000 		.4byte	.LASF63
 6418 1469 01       		.byte	0x1
 6419 146a 720C     		.2byte	0xc72
 6420 146c 83000000 		.4byte	0x83
 6421 1470 B3140000 		.4byte	.LLST123
 6422 1474 15       		.uleb128 0x15
 6423 1475 DC020000 		.4byte	.LASF51
 6424 1479 01       		.byte	0x1
 6425 147a 740C     		.2byte	0xc74
 6426 147c 83000000 		.4byte	0x83
 6427 1480 D4140000 		.4byte	.LLST124
 6428 1484 00       		.byte	0
 6429 1485 13       		.uleb128 0x13
 6430 1486 6B000000 		.4byte	.LASF148
 6431 148a 01       		.byte	0x1
 6432 148b 8E0C     		.2byte	0xc8e
 6433 148d 00000000 		.4byte	.LFB66
 6434 1491 20000000 		.4byte	.LFE66-.LFB66
 6435 1495 01       		.uleb128 0x1
 6436 1496 9C       		.byte	0x9c
 6437 1497 BC140000 		.4byte	0x14bc
 6438 149b 14       		.uleb128 0x14
 6439 149c 89070000 		.4byte	.LASF63
 6440 14a0 01       		.byte	0x1
 6441 14a1 8E0C     		.2byte	0xc8e
 6442 14a3 83000000 		.4byte	0x83
 6443 14a7 F2140000 		.4byte	.LLST125
 6444 14ab 15       		.uleb128 0x15
 6445 14ac DC020000 		.4byte	.LASF51
 6446 14b0 01       		.byte	0x1
 6447 14b1 900C     		.2byte	0xc90
 6448 14b3 83000000 		.4byte	0x83
 6449 14b7 13150000 		.4byte	.LLST126
 6450 14bb 00       		.byte	0
 6451 14bc 13       		.uleb128 0x13
 6452 14bd B1040000 		.4byte	.LASF149
 6453 14c1 01       		.byte	0x1
 6454 14c2 AC0C     		.2byte	0xcac
 6455 14c4 00000000 		.4byte	.LFB67
 6456 14c8 68000000 		.4byte	.LFE67-.LFB67
 6457 14cc 01       		.uleb128 0x1
 6458 14cd 9C       		.byte	0x9c
 6459 14ce 12150000 		.4byte	0x1512
 6460 14d2 14       		.uleb128 0x14
 6461 14d3 EE000000 		.4byte	.LASF150
 6462 14d7 01       		.byte	0x1
 6463 14d8 AC0C     		.2byte	0xcac
 6464 14da 83000000 		.4byte	0x83
 6465 14de 31150000 		.4byte	.LLST127
 6466 14e2 14       		.uleb128 0x14
 6467 14e3 89070000 		.4byte	.LASF63
 6468 14e7 01       		.byte	0x1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 177


 6469 14e8 AC0C     		.2byte	0xcac
 6470 14ea 83000000 		.4byte	0x83
 6471 14ee 9D150000 		.4byte	.LLST128
 6472 14f2 15       		.uleb128 0x15
 6473 14f3 DC020000 		.4byte	.LASF51
 6474 14f7 01       		.byte	0x1
 6475 14f8 AE0C     		.2byte	0xcae
 6476 14fa 83000000 		.4byte	0x83
 6477 14fe 09160000 		.4byte	.LLST129
 6478 1502 1C       		.uleb128 0x1c
 6479 1503 56000000 		.4byte	.LVL433
 6480 1507 C7070000 		.4byte	0x7c7
 6481 150b 1D       		.uleb128 0x1d
 6482 150c 01       		.uleb128 0x1
 6483 150d 50       		.byte	0x50
 6484 150e 01       		.uleb128 0x1
 6485 150f 30       		.byte	0x30
 6486 1510 00       		.byte	0
 6487 1511 00       		.byte	0
 6488 1512 0C       		.uleb128 0xc
 6489 1513 FF000000 		.4byte	0xff
 6490 1517 22150000 		.4byte	0x1522
 6491 151b 0D       		.uleb128 0xd
 6492 151c F8000000 		.4byte	0xf8
 6493 1520 04       		.byte	0x4
 6494 1521 00       		.byte	0
 6495 1522 22       		.uleb128 0x22
 6496 1523 59050000 		.4byte	.LASF151
 6497 1527 01       		.byte	0x1
 6498 1528 22       		.byte	0x22
 6499 1529 12150000 		.4byte	0x1512
 6500 152d 05       		.uleb128 0x5
 6501 152e 03       		.byte	0x3
 6502 152f 00000000 		.4byte	CySysTickCallbacks
 6503 1533 25       		.uleb128 0x25
 6504 1534 22030000 		.4byte	.LASF152
 6505 1538 01       		.byte	0x1
 6506 1539 1B       		.byte	0x1b
 6507 153a 83000000 		.4byte	0x83
 6508 153e 05       		.uleb128 0x5
 6509 153f 03       		.byte	0x3
 6510 1540 00000000 		.4byte	cydelayFreqHz
 6511 1544 25       		.uleb128 0x25
 6512 1545 B1000000 		.4byte	.LASF153
 6513 1549 01       		.byte	0x1
 6514 154a 1C       		.byte	0x1c
 6515 154b 83000000 		.4byte	0x83
 6516 154f 05       		.uleb128 0x5
 6517 1550 03       		.byte	0x3
 6518 1551 00000000 		.4byte	cydelayFreqKhz
 6519 1555 25       		.uleb128 0x25
 6520 1556 C1080000 		.4byte	.LASF154
 6521 155a 01       		.byte	0x1
 6522 155b 1D       		.byte	0x1d
 6523 155c 6B000000 		.4byte	0x6b
 6524 1560 05       		.uleb128 0x5
 6525 1561 03       		.byte	0x3
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 178


 6526 1562 00000000 		.4byte	cydelayFreqMhz
 6527 1566 25       		.uleb128 0x25
 6528 1567 5E090000 		.4byte	.LASF155
 6529 156b 01       		.byte	0x1
 6530 156c 1E       		.byte	0x1e
 6531 156d 83000000 		.4byte	0x83
 6532 1571 05       		.uleb128 0x5
 6533 1572 03       		.byte	0x3
 6534 1573 00000000 		.4byte	cydelay32kMs
 6535 1577 25       		.uleb128 0x25
 6536 1578 68010000 		.4byte	.LASF156
 6537 157c 01       		.byte	0x1
 6538 157d 36       		.byte	0x36
 6539 157e 83000000 		.4byte	0x83
 6540 1582 05       		.uleb128 0x5
 6541 1583 03       		.byte	0x3
 6542 1584 00000000 		.4byte	CySysTickInitVar
 6543 1588 0C       		.uleb128 0xc
 6544 1589 98150000 		.4byte	0x1598
 6545 158d 98150000 		.4byte	0x1598
 6546 1591 0D       		.uleb128 0xd
 6547 1592 F8000000 		.4byte	0xf8
 6548 1596 16       		.byte	0x16
 6549 1597 00       		.byte	0
 6550 1598 26       		.uleb128 0x26
 6551 1599 6B000000 		.4byte	0x6b
 6552 159d 25       		.uleb128 0x25
 6553 159e 6B090000 		.4byte	.LASF157
 6554 15a2 01       		.byte	0x1
 6555 15a3 4C       		.byte	0x4c
 6556 15a4 AE150000 		.4byte	0x15ae
 6557 15a8 05       		.uleb128 0x5
 6558 15a9 03       		.byte	0x3
 6559 15aa 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 6560 15ae 26       		.uleb128 0x26
 6561 15af 88150000 		.4byte	0x1588
 6562 15b3 25       		.uleb128 0x25
 6563 15b4 1B070000 		.4byte	.LASF158
 6564 15b8 01       		.byte	0x1
 6565 15b9 5C       		.byte	0x5c
 6566 15ba 83000000 		.4byte	0x83
 6567 15be 05       		.uleb128 0x5
 6568 15bf 03       		.byte	0x3
 6569 15c0 00000000 		.4byte	CySysClkPumpConfig
 6570 15c4 27       		.uleb128 0x27
 6571 15c5 EF090000 		.4byte	.LASF159
 6572 15c9 EF090000 		.4byte	.LASF159
 6573 15cd 03       		.byte	0x3
 6574 15ce E5       		.byte	0xe5
 6575 15cf 27       		.uleb128 0x27
 6576 15d0 C0000000 		.4byte	.LASF160
 6577 15d4 C0000000 		.4byte	.LASF160
 6578 15d8 03       		.byte	0x3
 6579 15d9 E6       		.byte	0xe6
 6580 15da 27       		.uleb128 0x27
 6581 15db D0030000 		.4byte	.LASF161
 6582 15df D0030000 		.4byte	.LASF161
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 179


 6583 15e3 03       		.byte	0x3
 6584 15e4 DC       		.byte	0xdc
 6585 15e5 27       		.uleb128 0x27
 6586 15e6 21090000 		.4byte	.LASF162
 6587 15ea 21090000 		.4byte	.LASF162
 6588 15ee 04       		.byte	0x4
 6589 15ef 54       		.byte	0x54
 6590 15f0 27       		.uleb128 0x27
 6591 15f1 85060000 		.4byte	.LASF163
 6592 15f5 85060000 		.4byte	.LASF163
 6593 15f9 05       		.byte	0x5
 6594 15fa 52       		.byte	0x52
 6595 15fb 00       		.byte	0
 6596              		.section	.debug_abbrev,"",%progbits
 6597              	.Ldebug_abbrev0:
 6598 0000 01       		.uleb128 0x1
 6599 0001 11       		.uleb128 0x11
 6600 0002 01       		.byte	0x1
 6601 0003 25       		.uleb128 0x25
 6602 0004 0E       		.uleb128 0xe
 6603 0005 13       		.uleb128 0x13
 6604 0006 0B       		.uleb128 0xb
 6605 0007 03       		.uleb128 0x3
 6606 0008 0E       		.uleb128 0xe
 6607 0009 1B       		.uleb128 0x1b
 6608 000a 0E       		.uleb128 0xe
 6609 000b 55       		.uleb128 0x55
 6610 000c 17       		.uleb128 0x17
 6611 000d 11       		.uleb128 0x11
 6612 000e 01       		.uleb128 0x1
 6613 000f 10       		.uleb128 0x10
 6614 0010 17       		.uleb128 0x17
 6615 0011 00       		.byte	0
 6616 0012 00       		.byte	0
 6617 0013 02       		.uleb128 0x2
 6618 0014 24       		.uleb128 0x24
 6619 0015 00       		.byte	0
 6620 0016 0B       		.uleb128 0xb
 6621 0017 0B       		.uleb128 0xb
 6622 0018 3E       		.uleb128 0x3e
 6623 0019 0B       		.uleb128 0xb
 6624 001a 03       		.uleb128 0x3
 6625 001b 0E       		.uleb128 0xe
 6626 001c 00       		.byte	0
 6627 001d 00       		.byte	0
 6628 001e 03       		.uleb128 0x3
 6629 001f 24       		.uleb128 0x24
 6630 0020 00       		.byte	0
 6631 0021 0B       		.uleb128 0xb
 6632 0022 0B       		.uleb128 0xb
 6633 0023 3E       		.uleb128 0x3e
 6634 0024 0B       		.uleb128 0xb
 6635 0025 03       		.uleb128 0x3
 6636 0026 08       		.uleb128 0x8
 6637 0027 00       		.byte	0
 6638 0028 00       		.byte	0
 6639 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 180


 6640 002a 16       		.uleb128 0x16
 6641 002b 00       		.byte	0
 6642 002c 03       		.uleb128 0x3
 6643 002d 0E       		.uleb128 0xe
 6644 002e 3A       		.uleb128 0x3a
 6645 002f 0B       		.uleb128 0xb
 6646 0030 3B       		.uleb128 0x3b
 6647 0031 05       		.uleb128 0x5
 6648 0032 49       		.uleb128 0x49
 6649 0033 13       		.uleb128 0x13
 6650 0034 00       		.byte	0
 6651 0035 00       		.byte	0
 6652 0036 05       		.uleb128 0x5
 6653 0037 35       		.uleb128 0x35
 6654 0038 00       		.byte	0
 6655 0039 49       		.uleb128 0x49
 6656 003a 13       		.uleb128 0x13
 6657 003b 00       		.byte	0
 6658 003c 00       		.byte	0
 6659 003d 06       		.uleb128 0x6
 6660 003e 0F       		.uleb128 0xf
 6661 003f 00       		.byte	0
 6662 0040 0B       		.uleb128 0xb
 6663 0041 0B       		.uleb128 0xb
 6664 0042 49       		.uleb128 0x49
 6665 0043 13       		.uleb128 0x13
 6666 0044 00       		.byte	0
 6667 0045 00       		.byte	0
 6668 0046 07       		.uleb128 0x7
 6669 0047 15       		.uleb128 0x15
 6670 0048 00       		.byte	0
 6671 0049 27       		.uleb128 0x27
 6672 004a 19       		.uleb128 0x19
 6673 004b 00       		.byte	0
 6674 004c 00       		.byte	0
 6675 004d 08       		.uleb128 0x8
 6676 004e 16       		.uleb128 0x16
 6677 004f 00       		.byte	0
 6678 0050 03       		.uleb128 0x3
 6679 0051 0E       		.uleb128 0xe
 6680 0052 3A       		.uleb128 0x3a
 6681 0053 0B       		.uleb128 0xb
 6682 0054 3B       		.uleb128 0x3b
 6683 0055 0B       		.uleb128 0xb
 6684 0056 49       		.uleb128 0x49
 6685 0057 13       		.uleb128 0x13
 6686 0058 00       		.byte	0
 6687 0059 00       		.byte	0
 6688 005a 09       		.uleb128 0x9
 6689 005b 13       		.uleb128 0x13
 6690 005c 01       		.byte	0x1
 6691 005d 0B       		.uleb128 0xb
 6692 005e 0B       		.uleb128 0xb
 6693 005f 3A       		.uleb128 0x3a
 6694 0060 0B       		.uleb128 0xb
 6695 0061 3B       		.uleb128 0x3b
 6696 0062 05       		.uleb128 0x5
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 181


 6697 0063 01       		.uleb128 0x1
 6698 0064 13       		.uleb128 0x13
 6699 0065 00       		.byte	0
 6700 0066 00       		.byte	0
 6701 0067 0A       		.uleb128 0xa
 6702 0068 0D       		.uleb128 0xd
 6703 0069 00       		.byte	0
 6704 006a 03       		.uleb128 0x3
 6705 006b 0E       		.uleb128 0xe
 6706 006c 3A       		.uleb128 0x3a
 6707 006d 0B       		.uleb128 0xb
 6708 006e 3B       		.uleb128 0x3b
 6709 006f 05       		.uleb128 0x5
 6710 0070 49       		.uleb128 0x49
 6711 0071 13       		.uleb128 0x13
 6712 0072 38       		.uleb128 0x38
 6713 0073 0B       		.uleb128 0xb
 6714 0074 00       		.byte	0
 6715 0075 00       		.byte	0
 6716 0076 0B       		.uleb128 0xb
 6717 0077 0D       		.uleb128 0xd
 6718 0078 00       		.byte	0
 6719 0079 03       		.uleb128 0x3
 6720 007a 08       		.uleb128 0x8
 6721 007b 3A       		.uleb128 0x3a
 6722 007c 0B       		.uleb128 0xb
 6723 007d 3B       		.uleb128 0x3b
 6724 007e 05       		.uleb128 0x5
 6725 007f 49       		.uleb128 0x49
 6726 0080 13       		.uleb128 0x13
 6727 0081 38       		.uleb128 0x38
 6728 0082 0B       		.uleb128 0xb
 6729 0083 00       		.byte	0
 6730 0084 00       		.byte	0
 6731 0085 0C       		.uleb128 0xc
 6732 0086 01       		.uleb128 0x1
 6733 0087 01       		.byte	0x1
 6734 0088 49       		.uleb128 0x49
 6735 0089 13       		.uleb128 0x13
 6736 008a 01       		.uleb128 0x1
 6737 008b 13       		.uleb128 0x13
 6738 008c 00       		.byte	0
 6739 008d 00       		.byte	0
 6740 008e 0D       		.uleb128 0xd
 6741 008f 21       		.uleb128 0x21
 6742 0090 00       		.byte	0
 6743 0091 49       		.uleb128 0x49
 6744 0092 13       		.uleb128 0x13
 6745 0093 2F       		.uleb128 0x2f
 6746 0094 0B       		.uleb128 0xb
 6747 0095 00       		.byte	0
 6748 0096 00       		.byte	0
 6749 0097 0E       		.uleb128 0xe
 6750 0098 2E       		.uleb128 0x2e
 6751 0099 00       		.byte	0
 6752 009a 3F       		.uleb128 0x3f
 6753 009b 19       		.uleb128 0x19
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 182


 6754 009c 03       		.uleb128 0x3
 6755 009d 0E       		.uleb128 0xe
 6756 009e 3A       		.uleb128 0x3a
 6757 009f 0B       		.uleb128 0xb
 6758 00a0 3B       		.uleb128 0x3b
 6759 00a1 0B       		.uleb128 0xb
 6760 00a2 27       		.uleb128 0x27
 6761 00a3 19       		.uleb128 0x19
 6762 00a4 11       		.uleb128 0x11
 6763 00a5 01       		.uleb128 0x1
 6764 00a6 12       		.uleb128 0x12
 6765 00a7 06       		.uleb128 0x6
 6766 00a8 40       		.uleb128 0x40
 6767 00a9 18       		.uleb128 0x18
 6768 00aa 9742     		.uleb128 0x2117
 6769 00ac 19       		.uleb128 0x19
 6770 00ad 00       		.byte	0
 6771 00ae 00       		.byte	0
 6772 00af 0F       		.uleb128 0xf
 6773 00b0 2E       		.uleb128 0x2e
 6774 00b1 00       		.byte	0
 6775 00b2 3F       		.uleb128 0x3f
 6776 00b3 19       		.uleb128 0x19
 6777 00b4 03       		.uleb128 0x3
 6778 00b5 0E       		.uleb128 0xe
 6779 00b6 3A       		.uleb128 0x3a
 6780 00b7 0B       		.uleb128 0xb
 6781 00b8 3B       		.uleb128 0x3b
 6782 00b9 05       		.uleb128 0x5
 6783 00ba 27       		.uleb128 0x27
 6784 00bb 19       		.uleb128 0x19
 6785 00bc 11       		.uleb128 0x11
 6786 00bd 01       		.uleb128 0x1
 6787 00be 12       		.uleb128 0x12
 6788 00bf 06       		.uleb128 0x6
 6789 00c0 40       		.uleb128 0x40
 6790 00c1 18       		.uleb128 0x18
 6791 00c2 9742     		.uleb128 0x2117
 6792 00c4 19       		.uleb128 0x19
 6793 00c5 00       		.byte	0
 6794 00c6 00       		.byte	0
 6795 00c7 10       		.uleb128 0x10
 6796 00c8 2E       		.uleb128 0x2e
 6797 00c9 01       		.byte	0x1
 6798 00ca 3F       		.uleb128 0x3f
 6799 00cb 19       		.uleb128 0x19
 6800 00cc 03       		.uleb128 0x3
 6801 00cd 0E       		.uleb128 0xe
 6802 00ce 3A       		.uleb128 0x3a
 6803 00cf 0B       		.uleb128 0xb
 6804 00d0 3B       		.uleb128 0x3b
 6805 00d1 0B       		.uleb128 0xb
 6806 00d2 27       		.uleb128 0x27
 6807 00d3 19       		.uleb128 0x19
 6808 00d4 11       		.uleb128 0x11
 6809 00d5 01       		.uleb128 0x1
 6810 00d6 12       		.uleb128 0x12
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 183


 6811 00d7 06       		.uleb128 0x6
 6812 00d8 40       		.uleb128 0x40
 6813 00d9 18       		.uleb128 0x18
 6814 00da 9742     		.uleb128 0x2117
 6815 00dc 19       		.uleb128 0x19
 6816 00dd 01       		.uleb128 0x1
 6817 00de 13       		.uleb128 0x13
 6818 00df 00       		.byte	0
 6819 00e0 00       		.byte	0
 6820 00e1 11       		.uleb128 0x11
 6821 00e2 898201   		.uleb128 0x4109
 6822 00e5 00       		.byte	0
 6823 00e6 11       		.uleb128 0x11
 6824 00e7 01       		.uleb128 0x1
 6825 00e8 31       		.uleb128 0x31
 6826 00e9 13       		.uleb128 0x13
 6827 00ea 00       		.byte	0
 6828 00eb 00       		.byte	0
 6829 00ec 12       		.uleb128 0x12
 6830 00ed 2E       		.uleb128 0x2e
 6831 00ee 00       		.byte	0
 6832 00ef 3F       		.uleb128 0x3f
 6833 00f0 19       		.uleb128 0x19
 6834 00f1 03       		.uleb128 0x3
 6835 00f2 0E       		.uleb128 0xe
 6836 00f3 3A       		.uleb128 0x3a
 6837 00f4 0B       		.uleb128 0xb
 6838 00f5 3B       		.uleb128 0x3b
 6839 00f6 05       		.uleb128 0x5
 6840 00f7 27       		.uleb128 0x27
 6841 00f8 19       		.uleb128 0x19
 6842 00f9 49       		.uleb128 0x49
 6843 00fa 13       		.uleb128 0x13
 6844 00fb 11       		.uleb128 0x11
 6845 00fc 01       		.uleb128 0x1
 6846 00fd 12       		.uleb128 0x12
 6847 00fe 06       		.uleb128 0x6
 6848 00ff 40       		.uleb128 0x40
 6849 0100 18       		.uleb128 0x18
 6850 0101 9742     		.uleb128 0x2117
 6851 0103 19       		.uleb128 0x19
 6852 0104 00       		.byte	0
 6853 0105 00       		.byte	0
 6854 0106 13       		.uleb128 0x13
 6855 0107 2E       		.uleb128 0x2e
 6856 0108 01       		.byte	0x1
 6857 0109 3F       		.uleb128 0x3f
 6858 010a 19       		.uleb128 0x19
 6859 010b 03       		.uleb128 0x3
 6860 010c 0E       		.uleb128 0xe
 6861 010d 3A       		.uleb128 0x3a
 6862 010e 0B       		.uleb128 0xb
 6863 010f 3B       		.uleb128 0x3b
 6864 0110 05       		.uleb128 0x5
 6865 0111 27       		.uleb128 0x27
 6866 0112 19       		.uleb128 0x19
 6867 0113 11       		.uleb128 0x11
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 184


 6868 0114 01       		.uleb128 0x1
 6869 0115 12       		.uleb128 0x12
 6870 0116 06       		.uleb128 0x6
 6871 0117 40       		.uleb128 0x40
 6872 0118 18       		.uleb128 0x18
 6873 0119 9742     		.uleb128 0x2117
 6874 011b 19       		.uleb128 0x19
 6875 011c 01       		.uleb128 0x1
 6876 011d 13       		.uleb128 0x13
 6877 011e 00       		.byte	0
 6878 011f 00       		.byte	0
 6879 0120 14       		.uleb128 0x14
 6880 0121 05       		.uleb128 0x5
 6881 0122 00       		.byte	0
 6882 0123 03       		.uleb128 0x3
 6883 0124 0E       		.uleb128 0xe
 6884 0125 3A       		.uleb128 0x3a
 6885 0126 0B       		.uleb128 0xb
 6886 0127 3B       		.uleb128 0x3b
 6887 0128 05       		.uleb128 0x5
 6888 0129 49       		.uleb128 0x49
 6889 012a 13       		.uleb128 0x13
 6890 012b 02       		.uleb128 0x2
 6891 012c 17       		.uleb128 0x17
 6892 012d 00       		.byte	0
 6893 012e 00       		.byte	0
 6894 012f 15       		.uleb128 0x15
 6895 0130 34       		.uleb128 0x34
 6896 0131 00       		.byte	0
 6897 0132 03       		.uleb128 0x3
 6898 0133 0E       		.uleb128 0xe
 6899 0134 3A       		.uleb128 0x3a
 6900 0135 0B       		.uleb128 0xb
 6901 0136 3B       		.uleb128 0x3b
 6902 0137 05       		.uleb128 0x5
 6903 0138 49       		.uleb128 0x49
 6904 0139 13       		.uleb128 0x13
 6905 013a 02       		.uleb128 0x2
 6906 013b 17       		.uleb128 0x17
 6907 013c 00       		.byte	0
 6908 013d 00       		.byte	0
 6909 013e 16       		.uleb128 0x16
 6910 013f 34       		.uleb128 0x34
 6911 0140 00       		.byte	0
 6912 0141 03       		.uleb128 0x3
 6913 0142 08       		.uleb128 0x8
 6914 0143 3A       		.uleb128 0x3a
 6915 0144 0B       		.uleb128 0xb
 6916 0145 3B       		.uleb128 0x3b
 6917 0146 05       		.uleb128 0x5
 6918 0147 49       		.uleb128 0x49
 6919 0148 13       		.uleb128 0x13
 6920 0149 02       		.uleb128 0x2
 6921 014a 17       		.uleb128 0x17
 6922 014b 00       		.byte	0
 6923 014c 00       		.byte	0
 6924 014d 17       		.uleb128 0x17
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 185


 6925 014e 05       		.uleb128 0x5
 6926 014f 00       		.byte	0
 6927 0150 03       		.uleb128 0x3
 6928 0151 0E       		.uleb128 0xe
 6929 0152 3A       		.uleb128 0x3a
 6930 0153 0B       		.uleb128 0xb
 6931 0154 3B       		.uleb128 0x3b
 6932 0155 05       		.uleb128 0x5
 6933 0156 49       		.uleb128 0x49
 6934 0157 13       		.uleb128 0x13
 6935 0158 02       		.uleb128 0x2
 6936 0159 18       		.uleb128 0x18
 6937 015a 00       		.byte	0
 6938 015b 00       		.byte	0
 6939 015c 18       		.uleb128 0x18
 6940 015d 2E       		.uleb128 0x2e
 6941 015e 01       		.byte	0x1
 6942 015f 3F       		.uleb128 0x3f
 6943 0160 19       		.uleb128 0x19
 6944 0161 03       		.uleb128 0x3
 6945 0162 0E       		.uleb128 0xe
 6946 0163 3A       		.uleb128 0x3a
 6947 0164 0B       		.uleb128 0xb
 6948 0165 3B       		.uleb128 0x3b
 6949 0166 05       		.uleb128 0x5
 6950 0167 27       		.uleb128 0x27
 6951 0168 19       		.uleb128 0x19
 6952 0169 49       		.uleb128 0x49
 6953 016a 13       		.uleb128 0x13
 6954 016b 11       		.uleb128 0x11
 6955 016c 01       		.uleb128 0x1
 6956 016d 12       		.uleb128 0x12
 6957 016e 06       		.uleb128 0x6
 6958 016f 40       		.uleb128 0x40
 6959 0170 18       		.uleb128 0x18
 6960 0171 9742     		.uleb128 0x2117
 6961 0173 19       		.uleb128 0x19
 6962 0174 01       		.uleb128 0x1
 6963 0175 13       		.uleb128 0x13
 6964 0176 00       		.byte	0
 6965 0177 00       		.byte	0
 6966 0178 19       		.uleb128 0x19
 6967 0179 34       		.uleb128 0x34
 6968 017a 00       		.byte	0
 6969 017b 03       		.uleb128 0x3
 6970 017c 0E       		.uleb128 0xe
 6971 017d 3A       		.uleb128 0x3a
 6972 017e 0B       		.uleb128 0xb
 6973 017f 3B       		.uleb128 0x3b
 6974 0180 05       		.uleb128 0x5
 6975 0181 49       		.uleb128 0x49
 6976 0182 13       		.uleb128 0x13
 6977 0183 02       		.uleb128 0x2
 6978 0184 18       		.uleb128 0x18
 6979 0185 00       		.byte	0
 6980 0186 00       		.byte	0
 6981 0187 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 186


 6982 0188 2E       		.uleb128 0x2e
 6983 0189 01       		.byte	0x1
 6984 018a 3F       		.uleb128 0x3f
 6985 018b 19       		.uleb128 0x19
 6986 018c 03       		.uleb128 0x3
 6987 018d 0E       		.uleb128 0xe
 6988 018e 3A       		.uleb128 0x3a
 6989 018f 0B       		.uleb128 0xb
 6990 0190 3B       		.uleb128 0x3b
 6991 0191 05       		.uleb128 0x5
 6992 0192 27       		.uleb128 0x27
 6993 0193 19       		.uleb128 0x19
 6994 0194 49       		.uleb128 0x49
 6995 0195 13       		.uleb128 0x13
 6996 0196 11       		.uleb128 0x11
 6997 0197 01       		.uleb128 0x1
 6998 0198 12       		.uleb128 0x12
 6999 0199 06       		.uleb128 0x6
 7000 019a 40       		.uleb128 0x40
 7001 019b 18       		.uleb128 0x18
 7002 019c 9642     		.uleb128 0x2116
 7003 019e 19       		.uleb128 0x19
 7004 019f 01       		.uleb128 0x1
 7005 01a0 13       		.uleb128 0x13
 7006 01a1 00       		.byte	0
 7007 01a2 00       		.byte	0
 7008 01a3 1B       		.uleb128 0x1b
 7009 01a4 05       		.uleb128 0x5
 7010 01a5 00       		.byte	0
 7011 01a6 03       		.uleb128 0x3
 7012 01a7 08       		.uleb128 0x8
 7013 01a8 3A       		.uleb128 0x3a
 7014 01a9 0B       		.uleb128 0xb
 7015 01aa 3B       		.uleb128 0x3b
 7016 01ab 05       		.uleb128 0x5
 7017 01ac 49       		.uleb128 0x49
 7018 01ad 13       		.uleb128 0x13
 7019 01ae 02       		.uleb128 0x2
 7020 01af 17       		.uleb128 0x17
 7021 01b0 00       		.byte	0
 7022 01b1 00       		.byte	0
 7023 01b2 1C       		.uleb128 0x1c
 7024 01b3 898201   		.uleb128 0x4109
 7025 01b6 01       		.byte	0x1
 7026 01b7 11       		.uleb128 0x11
 7027 01b8 01       		.uleb128 0x1
 7028 01b9 31       		.uleb128 0x31
 7029 01ba 13       		.uleb128 0x13
 7030 01bb 00       		.byte	0
 7031 01bc 00       		.byte	0
 7032 01bd 1D       		.uleb128 0x1d
 7033 01be 8A8201   		.uleb128 0x410a
 7034 01c1 00       		.byte	0
 7035 01c2 02       		.uleb128 0x2
 7036 01c3 18       		.uleb128 0x18
 7037 01c4 9142     		.uleb128 0x2111
 7038 01c6 18       		.uleb128 0x18
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 187


 7039 01c7 00       		.byte	0
 7040 01c8 00       		.byte	0
 7041 01c9 1E       		.uleb128 0x1e
 7042 01ca 898201   		.uleb128 0x4109
 7043 01cd 01       		.byte	0x1
 7044 01ce 11       		.uleb128 0x11
 7045 01cf 01       		.uleb128 0x1
 7046 01d0 31       		.uleb128 0x31
 7047 01d1 13       		.uleb128 0x13
 7048 01d2 01       		.uleb128 0x1
 7049 01d3 13       		.uleb128 0x13
 7050 01d4 00       		.byte	0
 7051 01d5 00       		.byte	0
 7052 01d6 1F       		.uleb128 0x1f
 7053 01d7 2E       		.uleb128 0x2e
 7054 01d8 01       		.byte	0x1
 7055 01d9 03       		.uleb128 0x3
 7056 01da 0E       		.uleb128 0xe
 7057 01db 3A       		.uleb128 0x3a
 7058 01dc 0B       		.uleb128 0xb
 7059 01dd 3B       		.uleb128 0x3b
 7060 01de 05       		.uleb128 0x5
 7061 01df 27       		.uleb128 0x27
 7062 01e0 19       		.uleb128 0x19
 7063 01e1 49       		.uleb128 0x49
 7064 01e2 13       		.uleb128 0x13
 7065 01e3 11       		.uleb128 0x11
 7066 01e4 01       		.uleb128 0x1
 7067 01e5 12       		.uleb128 0x12
 7068 01e6 06       		.uleb128 0x6
 7069 01e7 40       		.uleb128 0x40
 7070 01e8 18       		.uleb128 0x18
 7071 01e9 9742     		.uleb128 0x2117
 7072 01eb 19       		.uleb128 0x19
 7073 01ec 01       		.uleb128 0x1
 7074 01ed 13       		.uleb128 0x13
 7075 01ee 00       		.byte	0
 7076 01ef 00       		.byte	0
 7077 01f0 20       		.uleb128 0x20
 7078 01f1 34       		.uleb128 0x34
 7079 01f2 00       		.byte	0
 7080 01f3 03       		.uleb128 0x3
 7081 01f4 0E       		.uleb128 0xe
 7082 01f5 3A       		.uleb128 0x3a
 7083 01f6 0B       		.uleb128 0xb
 7084 01f7 3B       		.uleb128 0x3b
 7085 01f8 05       		.uleb128 0x5
 7086 01f9 49       		.uleb128 0x49
 7087 01fa 13       		.uleb128 0x13
 7088 01fb 1C       		.uleb128 0x1c
 7089 01fc 06       		.uleb128 0x6
 7090 01fd 00       		.byte	0
 7091 01fe 00       		.byte	0
 7092 01ff 21       		.uleb128 0x21
 7093 0200 34       		.uleb128 0x34
 7094 0201 00       		.byte	0
 7095 0202 03       		.uleb128 0x3
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 188


 7096 0203 0E       		.uleb128 0xe
 7097 0204 3A       		.uleb128 0x3a
 7098 0205 0B       		.uleb128 0xb
 7099 0206 3B       		.uleb128 0x3b
 7100 0207 0B       		.uleb128 0xb
 7101 0208 49       		.uleb128 0x49
 7102 0209 13       		.uleb128 0x13
 7103 020a 02       		.uleb128 0x2
 7104 020b 17       		.uleb128 0x17
 7105 020c 00       		.byte	0
 7106 020d 00       		.byte	0
 7107 020e 22       		.uleb128 0x22
 7108 020f 34       		.uleb128 0x34
 7109 0210 00       		.byte	0
 7110 0211 03       		.uleb128 0x3
 7111 0212 0E       		.uleb128 0xe
 7112 0213 3A       		.uleb128 0x3a
 7113 0214 0B       		.uleb128 0xb
 7114 0215 3B       		.uleb128 0x3b
 7115 0216 0B       		.uleb128 0xb
 7116 0217 49       		.uleb128 0x49
 7117 0218 13       		.uleb128 0x13
 7118 0219 02       		.uleb128 0x2
 7119 021a 18       		.uleb128 0x18
 7120 021b 00       		.byte	0
 7121 021c 00       		.byte	0
 7122 021d 23       		.uleb128 0x23
 7123 021e 2E       		.uleb128 0x2e
 7124 021f 01       		.byte	0x1
 7125 0220 3F       		.uleb128 0x3f
 7126 0221 19       		.uleb128 0x19
 7127 0222 03       		.uleb128 0x3
 7128 0223 0E       		.uleb128 0xe
 7129 0224 3A       		.uleb128 0x3a
 7130 0225 0B       		.uleb128 0xb
 7131 0226 3B       		.uleb128 0x3b
 7132 0227 05       		.uleb128 0x5
 7133 0228 27       		.uleb128 0x27
 7134 0229 19       		.uleb128 0x19
 7135 022a 11       		.uleb128 0x11
 7136 022b 01       		.uleb128 0x1
 7137 022c 12       		.uleb128 0x12
 7138 022d 06       		.uleb128 0x6
 7139 022e 40       		.uleb128 0x40
 7140 022f 18       		.uleb128 0x18
 7141 0230 9642     		.uleb128 0x2116
 7142 0232 19       		.uleb128 0x19
 7143 0233 01       		.uleb128 0x1
 7144 0234 13       		.uleb128 0x13
 7145 0235 00       		.byte	0
 7146 0236 00       		.byte	0
 7147 0237 24       		.uleb128 0x24
 7148 0238 2E       		.uleb128 0x2e
 7149 0239 01       		.byte	0x1
 7150 023a 03       		.uleb128 0x3
 7151 023b 0E       		.uleb128 0xe
 7152 023c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 189


 7153 023d 0B       		.uleb128 0xb
 7154 023e 3B       		.uleb128 0x3b
 7155 023f 05       		.uleb128 0x5
 7156 0240 27       		.uleb128 0x27
 7157 0241 19       		.uleb128 0x19
 7158 0242 11       		.uleb128 0x11
 7159 0243 01       		.uleb128 0x1
 7160 0244 12       		.uleb128 0x12
 7161 0245 06       		.uleb128 0x6
 7162 0246 40       		.uleb128 0x40
 7163 0247 18       		.uleb128 0x18
 7164 0248 9642     		.uleb128 0x2116
 7165 024a 19       		.uleb128 0x19
 7166 024b 01       		.uleb128 0x1
 7167 024c 13       		.uleb128 0x13
 7168 024d 00       		.byte	0
 7169 024e 00       		.byte	0
 7170 024f 25       		.uleb128 0x25
 7171 0250 34       		.uleb128 0x34
 7172 0251 00       		.byte	0
 7173 0252 03       		.uleb128 0x3
 7174 0253 0E       		.uleb128 0xe
 7175 0254 3A       		.uleb128 0x3a
 7176 0255 0B       		.uleb128 0xb
 7177 0256 3B       		.uleb128 0x3b
 7178 0257 0B       		.uleb128 0xb
 7179 0258 49       		.uleb128 0x49
 7180 0259 13       		.uleb128 0x13
 7181 025a 3F       		.uleb128 0x3f
 7182 025b 19       		.uleb128 0x19
 7183 025c 02       		.uleb128 0x2
 7184 025d 18       		.uleb128 0x18
 7185 025e 00       		.byte	0
 7186 025f 00       		.byte	0
 7187 0260 26       		.uleb128 0x26
 7188 0261 26       		.uleb128 0x26
 7189 0262 00       		.byte	0
 7190 0263 49       		.uleb128 0x49
 7191 0264 13       		.uleb128 0x13
 7192 0265 00       		.byte	0
 7193 0266 00       		.byte	0
 7194 0267 27       		.uleb128 0x27
 7195 0268 2E       		.uleb128 0x2e
 7196 0269 00       		.byte	0
 7197 026a 3F       		.uleb128 0x3f
 7198 026b 19       		.uleb128 0x19
 7199 026c 3C       		.uleb128 0x3c
 7200 026d 19       		.uleb128 0x19
 7201 026e 6E       		.uleb128 0x6e
 7202 026f 0E       		.uleb128 0xe
 7203 0270 03       		.uleb128 0x3
 7204 0271 0E       		.uleb128 0xe
 7205 0272 3A       		.uleb128 0x3a
 7206 0273 0B       		.uleb128 0xb
 7207 0274 3B       		.uleb128 0x3b
 7208 0275 0B       		.uleb128 0xb
 7209 0276 00       		.byte	0
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 190


 7210 0277 00       		.byte	0
 7211 0278 00       		.byte	0
 7212              		.section	.debug_loc,"",%progbits
 7213              	.Ldebug_loc0:
 7214              	.LLST0:
 7215 0000 00000000 		.4byte	.LVL1
 7216 0004 07000000 		.4byte	.LVL3-1
 7217 0008 0100     		.2byte	0x1
 7218 000a 50       		.byte	0x50
 7219 000b 07000000 		.4byte	.LVL3-1
 7220 000f 66000000 		.4byte	.LVL15
 7221 0013 0100     		.2byte	0x1
 7222 0015 54       		.byte	0x54
 7223 0016 66000000 		.4byte	.LVL15
 7224 001a 7C000000 		.4byte	.LFE6
 7225 001e 0400     		.2byte	0x4
 7226 0020 F3       		.byte	0xf3
 7227 0021 01       		.uleb128 0x1
 7228 0022 50       		.byte	0x50
 7229 0023 9F       		.byte	0x9f
 7230 0024 00000000 		.4byte	0
 7231 0028 00000000 		.4byte	0
 7232              	.LLST1:
 7233 002c 08000000 		.4byte	.LVL3
 7234 0030 6D000000 		.4byte	.LVL17-1
 7235 0034 0100     		.2byte	0x1
 7236 0036 50       		.byte	0x50
 7237 0037 00000000 		.4byte	0
 7238 003b 00000000 		.4byte	0
 7239              	.LLST2:
 7240 003f 18000000 		.4byte	.LVL4
 7241 0043 20000000 		.4byte	.LVL5
 7242 0047 0100     		.2byte	0x1
 7243 0049 53       		.byte	0x53
 7244 004a 20000000 		.4byte	.LVL5
 7245 004e 22000000 		.4byte	.LVL6
 7246 0052 0200     		.2byte	0x2
 7247 0054 72       		.byte	0x72
 7248 0055 00       		.sleb128 0
 7249 0056 22000000 		.4byte	.LVL6
 7250 005a 28000000 		.4byte	.LVL7
 7251 005e 0100     		.2byte	0x1
 7252 0060 51       		.byte	0x51
 7253 0061 28000000 		.4byte	.LVL7
 7254 0065 2E000000 		.4byte	.LVL8
 7255 0069 0100     		.2byte	0x1
 7256 006b 53       		.byte	0x53
 7257 006c 2E000000 		.4byte	.LVL8
 7258 0070 36000000 		.4byte	.LVL9
 7259 0074 0200     		.2byte	0x2
 7260 0076 75       		.byte	0x75
 7261 0077 00       		.sleb128 0
 7262 0078 64000000 		.4byte	.LVL14
 7263 007c 68000000 		.4byte	.LVL16
 7264 0080 0100     		.2byte	0x1
 7265 0082 53       		.byte	0x53
 7266 0083 68000000 		.4byte	.LVL16
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 191


 7267 0087 6E000000 		.4byte	.LVL18
 7268 008b 0100     		.2byte	0x1
 7269 008d 54       		.byte	0x54
 7270 008e 00000000 		.4byte	0
 7271 0092 00000000 		.4byte	0
 7272              	.LLST3:
 7273 0096 04000000 		.4byte	.LVL2
 7274 009a 3A000000 		.4byte	.LVL10
 7275 009e 0200     		.2byte	0x2
 7276 00a0 30       		.byte	0x30
 7277 00a1 9F       		.byte	0x9f
 7278 00a2 3A000000 		.4byte	.LVL10
 7279 00a6 4C000000 		.4byte	.LVL11
 7280 00aa 0100     		.2byte	0x1
 7281 00ac 53       		.byte	0x53
 7282 00ad 4E000000 		.4byte	.LVL12
 7283 00b1 56000000 		.4byte	.LVL13
 7284 00b5 0100     		.2byte	0x1
 7285 00b7 53       		.byte	0x53
 7286 00b8 00000000 		.4byte	0
 7287 00bc 00000000 		.4byte	0
 7288              	.LLST4:
 7289 00c0 06000000 		.4byte	.LVL20
 7290 00c4 1F000000 		.4byte	.LVL23-1
 7291 00c8 0100     		.2byte	0x1
 7292 00ca 50       		.byte	0x50
 7293 00cb 00000000 		.4byte	0
 7294 00cf 00000000 		.4byte	0
 7295              	.LLST5:
 7296 00d3 10000000 		.4byte	.LVL21
 7297 00d7 1C000000 		.4byte	.LVL22
 7298 00db 0100     		.2byte	0x1
 7299 00dd 52       		.byte	0x52
 7300 00de 1C000000 		.4byte	.LVL22
 7301 00e2 22000000 		.4byte	.LVL24
 7302 00e6 0100     		.2byte	0x1
 7303 00e8 54       		.byte	0x54
 7304 00e9 22000000 		.4byte	.LVL24
 7305 00ed 2C000000 		.4byte	.LFE8
 7306 00f1 0100     		.2byte	0x1
 7307 00f3 50       		.byte	0x50
 7308 00f4 00000000 		.4byte	0
 7309 00f8 00000000 		.4byte	0
 7310              	.LLST6:
 7311 00fc 00000000 		.4byte	.LVL25
 7312 0100 07000000 		.4byte	.LVL26-1
 7313 0104 0100     		.2byte	0x1
 7314 0106 50       		.byte	0x50
 7315 0107 07000000 		.4byte	.LVL26-1
 7316 010b 0A000000 		.4byte	.LVL27
 7317 010f 0100     		.2byte	0x1
 7318 0111 54       		.byte	0x54
 7319 0112 0A000000 		.4byte	.LVL27
 7320 0116 24000000 		.4byte	.LFE9
 7321 011a 0400     		.2byte	0x4
 7322 011c F3       		.byte	0xf3
 7323 011d 01       		.uleb128 0x1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 192


 7324 011e 50       		.byte	0x50
 7325 011f 9F       		.byte	0x9f
 7326 0120 00000000 		.4byte	0
 7327 0124 00000000 		.4byte	0
 7328              	.LLST7:
 7329 0128 08000000 		.4byte	.LVL26
 7330 012c 1D000000 		.4byte	.LVL28-1
 7331 0130 0100     		.2byte	0x1
 7332 0132 50       		.byte	0x50
 7333 0133 00000000 		.4byte	0
 7334 0137 00000000 		.4byte	0
 7335              	.LLST8:
 7336 013b 00000000 		.4byte	.LVL29
 7337 013f 07000000 		.4byte	.LVL30-1
 7338 0143 0100     		.2byte	0x1
 7339 0145 50       		.byte	0x50
 7340 0146 07000000 		.4byte	.LVL30-1
 7341 014a 14000000 		.4byte	.LVL31
 7342 014e 0100     		.2byte	0x1
 7343 0150 54       		.byte	0x54
 7344 0151 14000000 		.4byte	.LVL31
 7345 0155 24000000 		.4byte	.LFE11
 7346 0159 0400     		.2byte	0x4
 7347 015b F3       		.byte	0xf3
 7348 015c 01       		.uleb128 0x1
 7349 015d 50       		.byte	0x50
 7350 015e 9F       		.byte	0x9f
 7351 015f 00000000 		.4byte	0
 7352 0163 00000000 		.4byte	0
 7353              	.LLST9:
 7354 0167 08000000 		.4byte	.LVL30
 7355 016b 1D000000 		.4byte	.LVL32-1
 7356 016f 0100     		.2byte	0x1
 7357 0171 50       		.byte	0x50
 7358 0172 00000000 		.4byte	0
 7359 0176 00000000 		.4byte	0
 7360              	.LLST10:
 7361 017a 00000000 		.4byte	.LVL34
 7362 017e 11000000 		.4byte	.LVL35-1
 7363 0182 0100     		.2byte	0x1
 7364 0184 50       		.byte	0x50
 7365 0185 11000000 		.4byte	.LVL35-1
 7366 0189 1E000000 		.4byte	.LVL37
 7367 018d 0100     		.2byte	0x1
 7368 018f 57       		.byte	0x57
 7369 0190 1E000000 		.4byte	.LVL37
 7370 0194 60000000 		.4byte	.LFE15
 7371 0198 0400     		.2byte	0x4
 7372 019a F3       		.byte	0xf3
 7373 019b 01       		.uleb128 0x1
 7374 019c 50       		.byte	0x50
 7375 019d 9F       		.byte	0x9f
 7376 019e 00000000 		.4byte	0
 7377 01a2 00000000 		.4byte	0
 7378              	.LLST11:
 7379 01a6 00000000 		.4byte	.LVL34
 7380 01aa 11000000 		.4byte	.LVL35-1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 193


 7381 01ae 0100     		.2byte	0x1
 7382 01b0 51       		.byte	0x51
 7383 01b1 11000000 		.4byte	.LVL35-1
 7384 01b5 24000000 		.4byte	.LVL39
 7385 01b9 0100     		.2byte	0x1
 7386 01bb 55       		.byte	0x55
 7387 01bc 24000000 		.4byte	.LVL39
 7388 01c0 60000000 		.4byte	.LFE15
 7389 01c4 0400     		.2byte	0x4
 7390 01c6 F3       		.byte	0xf3
 7391 01c7 01       		.uleb128 0x1
 7392 01c8 51       		.byte	0x51
 7393 01c9 9F       		.byte	0x9f
 7394 01ca 00000000 		.4byte	0
 7395 01ce 00000000 		.4byte	0
 7396              	.LLST12:
 7397 01d2 00000000 		.4byte	.LVL34
 7398 01d6 11000000 		.4byte	.LVL35-1
 7399 01da 0100     		.2byte	0x1
 7400 01dc 52       		.byte	0x52
 7401 01dd 11000000 		.4byte	.LVL35-1
 7402 01e1 34000000 		.4byte	.LVL42
 7403 01e5 0100     		.2byte	0x1
 7404 01e7 56       		.byte	0x56
 7405 01e8 34000000 		.4byte	.LVL42
 7406 01ec 60000000 		.4byte	.LFE15
 7407 01f0 0400     		.2byte	0x4
 7408 01f2 F3       		.byte	0xf3
 7409 01f3 01       		.uleb128 0x1
 7410 01f4 52       		.byte	0x52
 7411 01f5 9F       		.byte	0x9f
 7412 01f6 00000000 		.4byte	0
 7413 01fa 00000000 		.4byte	0
 7414              	.LLST13:
 7415 01fe 00000000 		.4byte	.LVL34
 7416 0202 11000000 		.4byte	.LVL35-1
 7417 0206 0100     		.2byte	0x1
 7418 0208 53       		.byte	0x53
 7419 0209 11000000 		.4byte	.LVL35-1
 7420 020d 52000000 		.4byte	.LVL47
 7421 0211 0100     		.2byte	0x1
 7422 0213 58       		.byte	0x58
 7423 0214 52000000 		.4byte	.LVL47
 7424 0218 60000000 		.4byte	.LFE15
 7425 021c 0400     		.2byte	0x4
 7426 021e F3       		.byte	0xf3
 7427 021f 01       		.uleb128 0x1
 7428 0220 53       		.byte	0x53
 7429 0221 9F       		.byte	0x9f
 7430 0222 00000000 		.4byte	0
 7431 0226 00000000 		.4byte	0
 7432              	.LLST14:
 7433 022a 12000000 		.4byte	.LVL35
 7434 022e 51000000 		.4byte	.LVL46-1
 7435 0232 0100     		.2byte	0x1
 7436 0234 50       		.byte	0x50
 7437 0235 00000000 		.4byte	0
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 194


 7438 0239 00000000 		.4byte	0
 7439              	.LLST15:
 7440 023d 1A000000 		.4byte	.LVL36
 7441 0241 20000000 		.4byte	.LVL38
 7442 0245 0100     		.2byte	0x1
 7443 0247 53       		.byte	0x53
 7444 0248 20000000 		.4byte	.LVL38
 7445 024c 28000000 		.4byte	.LVL40
 7446 0250 0100     		.2byte	0x1
 7447 0252 57       		.byte	0x57
 7448 0253 28000000 		.4byte	.LVL40
 7449 0257 32000000 		.4byte	.LVL41
 7450 025b 0100     		.2byte	0x1
 7451 025d 55       		.byte	0x55
 7452 025e 32000000 		.4byte	.LVL41
 7453 0262 40000000 		.4byte	.LVL44
 7454 0266 0100     		.2byte	0x1
 7455 0268 53       		.byte	0x53
 7456 0269 40000000 		.4byte	.LVL44
 7457 026d 4C000000 		.4byte	.LVL45
 7458 0271 0100     		.2byte	0x1
 7459 0273 54       		.byte	0x54
 7460 0274 4C000000 		.4byte	.LVL45
 7461 0278 51000000 		.4byte	.LVL46-1
 7462 027c 0100     		.2byte	0x1
 7463 027e 53       		.byte	0x53
 7464 027f 00000000 		.4byte	0
 7465 0283 00000000 		.4byte	0
 7466              	.LLST16:
 7467 0287 00000000 		.4byte	.LVL48
 7468 028b 8C000000 		.4byte	.LVL53
 7469 028f 0100     		.2byte	0x1
 7470 0291 50       		.byte	0x50
 7471 0292 8C000000 		.4byte	.LVL53
 7472 0296 96000000 		.4byte	.LVL55
 7473 029a 0100     		.2byte	0x1
 7474 029c 56       		.byte	0x56
 7475 029d 96000000 		.4byte	.LVL55
 7476 02a1 9A000000 		.4byte	.LVL56
 7477 02a5 0100     		.2byte	0x1
 7478 02a7 50       		.byte	0x50
 7479 02a8 9A000000 		.4byte	.LVL56
 7480 02ac 28010000 		.4byte	.LVL74
 7481 02b0 0100     		.2byte	0x1
 7482 02b2 56       		.byte	0x56
 7483 02b3 28010000 		.4byte	.LVL74
 7484 02b7 32010000 		.4byte	.LVL75
 7485 02bb 0100     		.2byte	0x1
 7486 02bd 50       		.byte	0x50
 7487 02be 32010000 		.4byte	.LVL75
 7488 02c2 36010000 		.4byte	.LVL78
 7489 02c6 0100     		.2byte	0x1
 7490 02c8 56       		.byte	0x56
 7491 02c9 36010000 		.4byte	.LVL78
 7492 02cd 74010000 		.4byte	.LFE16
 7493 02d1 0400     		.2byte	0x4
 7494 02d3 F3       		.byte	0xf3
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 195


 7495 02d4 01       		.uleb128 0x1
 7496 02d5 50       		.byte	0x50
 7497 02d6 9F       		.byte	0x9f
 7498 02d7 00000000 		.4byte	0
 7499 02db 00000000 		.4byte	0
 7500              	.LLST17:
 7501 02df 00000000 		.4byte	.LVL48
 7502 02e3 8A000000 		.4byte	.LVL52
 7503 02e7 0100     		.2byte	0x1
 7504 02e9 51       		.byte	0x51
 7505 02ea 8A000000 		.4byte	.LVL52
 7506 02ee 96000000 		.4byte	.LVL55
 7507 02f2 0100     		.2byte	0x1
 7508 02f4 54       		.byte	0x54
 7509 02f5 96000000 		.4byte	.LVL55
 7510 02f9 9A000000 		.4byte	.LVL56
 7511 02fd 0100     		.2byte	0x1
 7512 02ff 51       		.byte	0x51
 7513 0300 9A000000 		.4byte	.LVL56
 7514 0304 9C000000 		.4byte	.LVL57
 7515 0308 0100     		.2byte	0x1
 7516 030a 54       		.byte	0x54
 7517 030b 9C000000 		.4byte	.LVL57
 7518 030f 28010000 		.4byte	.LVL74
 7519 0313 0400     		.2byte	0x4
 7520 0315 F3       		.byte	0xf3
 7521 0316 01       		.uleb128 0x1
 7522 0317 51       		.byte	0x51
 7523 0318 9F       		.byte	0x9f
 7524 0319 28010000 		.4byte	.LVL74
 7525 031d 32010000 		.4byte	.LVL75
 7526 0321 0100     		.2byte	0x1
 7527 0323 51       		.byte	0x51
 7528 0324 32010000 		.4byte	.LVL75
 7529 0328 74010000 		.4byte	.LFE16
 7530 032c 0400     		.2byte	0x4
 7531 032e F3       		.byte	0xf3
 7532 032f 01       		.uleb128 0x1
 7533 0330 51       		.byte	0x51
 7534 0331 9F       		.byte	0x9f
 7535 0332 00000000 		.4byte	0
 7536 0336 00000000 		.4byte	0
 7537              	.LLST18:
 7538 033a 00000000 		.4byte	.LVL48
 7539 033e 8F000000 		.4byte	.LVL54-1
 7540 0342 0100     		.2byte	0x1
 7541 0344 52       		.byte	0x52
 7542 0345 8F000000 		.4byte	.LVL54-1
 7543 0349 96000000 		.4byte	.LVL55
 7544 034d 0100     		.2byte	0x1
 7545 034f 55       		.byte	0x55
 7546 0350 96000000 		.4byte	.LVL55
 7547 0354 9A000000 		.4byte	.LVL56
 7548 0358 0100     		.2byte	0x1
 7549 035a 52       		.byte	0x52
 7550 035b 9A000000 		.4byte	.LVL56
 7551 035f 28010000 		.4byte	.LVL74
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 196


 7552 0363 0100     		.2byte	0x1
 7553 0365 55       		.byte	0x55
 7554 0366 28010000 		.4byte	.LVL74
 7555 036a 32010000 		.4byte	.LVL75
 7556 036e 0100     		.2byte	0x1
 7557 0370 52       		.byte	0x52
 7558 0371 32010000 		.4byte	.LVL75
 7559 0375 36010000 		.4byte	.LVL77
 7560 0379 0100     		.2byte	0x1
 7561 037b 55       		.byte	0x55
 7562 037c 36010000 		.4byte	.LVL77
 7563 0380 74010000 		.4byte	.LFE16
 7564 0384 0400     		.2byte	0x4
 7565 0386 F3       		.byte	0xf3
 7566 0387 01       		.uleb128 0x1
 7567 0388 52       		.byte	0x52
 7568 0389 9F       		.byte	0x9f
 7569 038a 00000000 		.4byte	0
 7570 038e 00000000 		.4byte	0
 7571              	.LLST19:
 7572 0392 00000000 		.4byte	.LVL48
 7573 0396 12000000 		.4byte	.LVL50
 7574 039a 0100     		.2byte	0x1
 7575 039c 53       		.byte	0x53
 7576 039d 12000000 		.4byte	.LVL50
 7577 03a1 36010000 		.4byte	.LVL79
 7578 03a5 0100     		.2byte	0x1
 7579 03a7 57       		.byte	0x57
 7580 03a8 36010000 		.4byte	.LVL79
 7581 03ac 74010000 		.4byte	.LFE16
 7582 03b0 0400     		.2byte	0x4
 7583 03b2 F3       		.byte	0xf3
 7584 03b3 01       		.uleb128 0x1
 7585 03b4 53       		.byte	0x53
 7586 03b5 9F       		.byte	0x9f
 7587 03b6 00000000 		.4byte	0
 7588 03ba 00000000 		.4byte	0
 7589              	.LLST20:
 7590 03be 10000000 		.4byte	.LVL49
 7591 03c2 E0000000 		.4byte	.LVL67
 7592 03c6 0200     		.2byte	0x2
 7593 03c8 30       		.byte	0x30
 7594 03c9 9F       		.byte	0x9f
 7595 03ca E0000000 		.4byte	.LVL67
 7596 03ce 28010000 		.4byte	.LVL74
 7597 03d2 0100     		.2byte	0x1
 7598 03d4 54       		.byte	0x54
 7599 03d5 28010000 		.4byte	.LVL74
 7600 03d9 32010000 		.4byte	.LVL75
 7601 03dd 0200     		.2byte	0x2
 7602 03df 30       		.byte	0x30
 7603 03e0 9F       		.byte	0x9f
 7604 03e1 32010000 		.4byte	.LVL75
 7605 03e5 36010000 		.4byte	.LVL76
 7606 03e9 0100     		.2byte	0x1
 7607 03eb 54       		.byte	0x54
 7608 03ec 36010000 		.4byte	.LVL76
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 197


 7609 03f0 74010000 		.4byte	.LFE16
 7610 03f4 0100     		.2byte	0x1
 7611 03f6 50       		.byte	0x50
 7612 03f7 00000000 		.4byte	0
 7613 03fb 00000000 		.4byte	0
 7614              	.LLST21:
 7615 03ff 9A000000 		.4byte	.LVL56
 7616 0403 1A010000 		.4byte	.LVL71
 7617 0407 0200     		.2byte	0x2
 7618 0409 91       		.byte	0x91
 7619 040a 60       		.sleb128 -32
 7620 040b 1C010000 		.4byte	.LVL72
 7621 040f 26010000 		.4byte	.LVL73
 7622 0413 0200     		.2byte	0x2
 7623 0415 91       		.byte	0x91
 7624 0416 60       		.sleb128 -32
 7625 0417 00000000 		.4byte	0
 7626 041b 00000000 		.4byte	0
 7627              	.LLST22:
 7628 041f 82000000 		.4byte	.LVL51
 7629 0423 1A010000 		.4byte	.LVL71
 7630 0427 0200     		.2byte	0x2
 7631 0429 91       		.byte	0x91
 7632 042a 64       		.sleb128 -28
 7633 042b 1C010000 		.4byte	.LVL72
 7634 042f 26010000 		.4byte	.LVL73
 7635 0433 0200     		.2byte	0x2
 7636 0435 91       		.byte	0x91
 7637 0436 64       		.sleb128 -28
 7638 0437 00000000 		.4byte	0
 7639 043b 00000000 		.4byte	0
 7640              	.LLST23:
 7641 043f 00010000 		.4byte	.LVL68
 7642 0443 0B010000 		.4byte	.LVL70-1
 7643 0447 0100     		.2byte	0x1
 7644 0449 52       		.byte	0x52
 7645 044a 00000000 		.4byte	0
 7646 044e 00000000 		.4byte	0
 7647              	.LLST25:
 7648 0452 D4000000 		.4byte	.LVL63
 7649 0456 D8000000 		.4byte	.LVL64
 7650 045a 0100     		.2byte	0x1
 7651 045c 50       		.byte	0x50
 7652 045d E0000000 		.4byte	.LVL67
 7653 0461 08010000 		.4byte	.LVL69
 7654 0465 0100     		.2byte	0x1
 7655 0467 50       		.byte	0x50
 7656 0468 08010000 		.4byte	.LVL69
 7657 046c 0B010000 		.4byte	.LVL70-1
 7658 0470 0200     		.2byte	0x2
 7659 0472 7D       		.byte	0x7d
 7660 0473 00       		.sleb128 0
 7661 0474 00000000 		.4byte	0
 7662 0478 00000000 		.4byte	0
 7663              	.LLST26:
 7664 047c C4000000 		.4byte	.LVL60
 7665 0480 CE000000 		.4byte	.LVL61
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 198


 7666 0484 0100     		.2byte	0x1
 7667 0486 50       		.byte	0x50
 7668 0487 CE000000 		.4byte	.LVL61
 7669 048b D2000000 		.4byte	.LVL62
 7670 048f 0300     		.2byte	0x3
 7671 0491 70       		.byte	0x70
 7672 0492 01       		.sleb128 1
 7673 0493 9F       		.byte	0x9f
 7674 0494 D8000000 		.4byte	.LVL64
 7675 0498 DA000000 		.4byte	.LVL65
 7676 049c 0100     		.2byte	0x1
 7677 049e 50       		.byte	0x50
 7678 049f DE000000 		.4byte	.LVL66
 7679 04a3 E0000000 		.4byte	.LVL67
 7680 04a7 0100     		.2byte	0x1
 7681 04a9 50       		.byte	0x50
 7682 04aa 00000000 		.4byte	0
 7683 04ae 00000000 		.4byte	0
 7684              	.LLST27:
 7685 04b2 00000000 		.4byte	.LVL80
 7686 04b6 09000000 		.4byte	.LVL81-1
 7687 04ba 0100     		.2byte	0x1
 7688 04bc 50       		.byte	0x50
 7689 04bd 09000000 		.4byte	.LVL81-1
 7690 04c1 20000000 		.4byte	.LVL83
 7691 04c5 0100     		.2byte	0x1
 7692 04c7 54       		.byte	0x54
 7693 04c8 20000000 		.4byte	.LVL83
 7694 04cc 28000000 		.4byte	.LFE19
 7695 04d0 0400     		.2byte	0x4
 7696 04d2 F3       		.byte	0xf3
 7697 04d3 01       		.uleb128 0x1
 7698 04d4 50       		.byte	0x50
 7699 04d5 9F       		.byte	0x9f
 7700 04d6 00000000 		.4byte	0
 7701 04da 00000000 		.4byte	0
 7702              	.LLST28:
 7703 04de 0A000000 		.4byte	.LVL81
 7704 04e2 1F000000 		.4byte	.LVL82-1
 7705 04e6 0100     		.2byte	0x1
 7706 04e8 50       		.byte	0x50
 7707 04e9 00000000 		.4byte	0
 7708 04ed 00000000 		.4byte	0
 7709              	.LLST29:
 7710 04f1 00000000 		.4byte	.LVL84
 7711 04f5 09000000 		.4byte	.LVL85-1
 7712 04f9 0100     		.2byte	0x1
 7713 04fb 50       		.byte	0x50
 7714 04fc 09000000 		.4byte	.LVL85-1
 7715 0500 26000000 		.4byte	.LVL89
 7716 0504 0100     		.2byte	0x1
 7717 0506 54       		.byte	0x54
 7718 0507 26000000 		.4byte	.LVL89
 7719 050b 38000000 		.4byte	.LFE21
 7720 050f 0400     		.2byte	0x4
 7721 0511 F3       		.byte	0xf3
 7722 0512 01       		.uleb128 0x1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 199


 7723 0513 50       		.byte	0x50
 7724 0514 9F       		.byte	0x9f
 7725 0515 00000000 		.4byte	0
 7726 0519 00000000 		.4byte	0
 7727              	.LLST30:
 7728 051d 00000000 		.4byte	.LVL84
 7729 0521 09000000 		.4byte	.LVL85-1
 7730 0525 0100     		.2byte	0x1
 7731 0527 51       		.byte	0x51
 7732 0528 09000000 		.4byte	.LVL85-1
 7733 052c 22000000 		.4byte	.LVL87
 7734 0530 0100     		.2byte	0x1
 7735 0532 55       		.byte	0x55
 7736 0533 22000000 		.4byte	.LVL87
 7737 0537 38000000 		.4byte	.LFE21
 7738 053b 0400     		.2byte	0x4
 7739 053d F3       		.byte	0xf3
 7740 053e 01       		.uleb128 0x1
 7741 053f 51       		.byte	0x51
 7742 0540 9F       		.byte	0x9f
 7743 0541 00000000 		.4byte	0
 7744 0545 00000000 		.4byte	0
 7745              	.LLST31:
 7746 0549 20000000 		.4byte	.LVL86
 7747 054d 24000000 		.4byte	.LVL88
 7748 0551 0100     		.2byte	0x1
 7749 0553 53       		.byte	0x53
 7750 0554 24000000 		.4byte	.LVL88
 7751 0558 2A000000 		.4byte	.LVL90
 7752 055c 0100     		.2byte	0x1
 7753 055e 55       		.byte	0x55
 7754 055f 00000000 		.4byte	0
 7755 0563 00000000 		.4byte	0
 7756              	.LLST32:
 7757 0567 0A000000 		.4byte	.LVL85
 7758 056b 2D000000 		.4byte	.LVL91-1
 7759 056f 0100     		.2byte	0x1
 7760 0571 50       		.byte	0x50
 7761 0572 00000000 		.4byte	0
 7762 0576 00000000 		.4byte	0
 7763              	.LLST33:
 7764 057a 00000000 		.4byte	.LVL92
 7765 057e 07000000 		.4byte	.LVL94-1
 7766 0582 0100     		.2byte	0x1
 7767 0584 50       		.byte	0x50
 7768 0585 07000000 		.4byte	.LVL94-1
 7769 0589 20000000 		.4byte	.LVL96
 7770 058d 0100     		.2byte	0x1
 7771 058f 54       		.byte	0x54
 7772 0590 20000000 		.4byte	.LVL96
 7773 0594 34000000 		.4byte	.LFE24
 7774 0598 0400     		.2byte	0x4
 7775 059a F3       		.byte	0xf3
 7776 059b 01       		.uleb128 0x1
 7777 059c 50       		.byte	0x50
 7778 059d 9F       		.byte	0x9f
 7779 059e 00000000 		.4byte	0
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 200


 7780 05a2 00000000 		.4byte	0
 7781              	.LLST34:
 7782 05a6 04000000 		.4byte	.LVL93
 7783 05aa 1A000000 		.4byte	.LVL95
 7784 05ae 0200     		.2byte	0x2
 7785 05b0 30       		.byte	0x30
 7786 05b1 9F       		.byte	0x9f
 7787 05b2 1A000000 		.4byte	.LVL95
 7788 05b6 2C000000 		.4byte	.LVL98
 7789 05ba 0100     		.2byte	0x1
 7790 05bc 55       		.byte	0x55
 7791 05bd 2C000000 		.4byte	.LVL98
 7792 05c1 34000000 		.4byte	.LFE24
 7793 05c5 0100     		.2byte	0x1
 7794 05c7 50       		.byte	0x50
 7795 05c8 00000000 		.4byte	0
 7796 05cc 00000000 		.4byte	0
 7797              	.LLST35:
 7798 05d0 08000000 		.4byte	.LVL94
 7799 05d4 29000000 		.4byte	.LVL97-1
 7800 05d8 0100     		.2byte	0x1
 7801 05da 50       		.byte	0x50
 7802 05db 00000000 		.4byte	0
 7803 05df 00000000 		.4byte	0
 7804              	.LLST36:
 7805 05e3 00000000 		.4byte	.LVL99
 7806 05e7 09000000 		.4byte	.LVL101-1
 7807 05eb 0100     		.2byte	0x1
 7808 05ed 50       		.byte	0x50
 7809 05ee 09000000 		.4byte	.LVL101-1
 7810 05f2 14000000 		.4byte	.LVL102
 7811 05f6 0100     		.2byte	0x1
 7812 05f8 55       		.byte	0x55
 7813 05f9 14000000 		.4byte	.LVL102
 7814 05fd 52000000 		.4byte	.LVL110
 7815 0601 0300     		.2byte	0x3
 7816 0603 75       		.byte	0x75
 7817 0604 7E       		.sleb128 -2
 7818 0605 9F       		.byte	0x9f
 7819 0606 52000000 		.4byte	.LVL110
 7820 060a 60000000 		.4byte	.LFE26
 7821 060e 0400     		.2byte	0x4
 7822 0610 F3       		.byte	0xf3
 7823 0611 01       		.uleb128 0x1
 7824 0612 50       		.byte	0x50
 7825 0613 9F       		.byte	0x9f
 7826 0614 00000000 		.4byte	0
 7827 0618 00000000 		.4byte	0
 7828              	.LLST37:
 7829 061c 00000000 		.4byte	.LVL99
 7830 0620 09000000 		.4byte	.LVL101-1
 7831 0624 0100     		.2byte	0x1
 7832 0626 51       		.byte	0x51
 7833 0627 09000000 		.4byte	.LVL101-1
 7834 062b 1A000000 		.4byte	.LVL104
 7835 062f 0100     		.2byte	0x1
 7836 0631 54       		.byte	0x54
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 201


 7837 0632 1A000000 		.4byte	.LVL104
 7838 0636 60000000 		.4byte	.LFE26
 7839 063a 0400     		.2byte	0x4
 7840 063c F3       		.byte	0xf3
 7841 063d 01       		.uleb128 0x1
 7842 063e 51       		.byte	0x51
 7843 063f 9F       		.byte	0x9f
 7844 0640 00000000 		.4byte	0
 7845 0644 00000000 		.4byte	0
 7846              	.LLST38:
 7847 0648 16000000 		.4byte	.LVL103
 7848 064c 1E000000 		.4byte	.LVL105
 7849 0650 0100     		.2byte	0x1
 7850 0652 52       		.byte	0x52
 7851 0653 1E000000 		.4byte	.LVL105
 7852 0657 30000000 		.4byte	.LVL106
 7853 065b 0100     		.2byte	0x1
 7854 065d 54       		.byte	0x54
 7855 065e 00000000 		.4byte	0
 7856 0662 00000000 		.4byte	0
 7857              	.LLST39:
 7858 0666 0A000000 		.4byte	.LVL101
 7859 066a 55000000 		.4byte	.LVL111-1
 7860 066e 0100     		.2byte	0x1
 7861 0670 50       		.byte	0x50
 7862 0671 00000000 		.4byte	0
 7863 0675 00000000 		.4byte	0
 7864              	.LLST40:
 7865 0679 06000000 		.4byte	.LVL100
 7866 067d 30000000 		.4byte	.LVL106
 7867 0681 0200     		.2byte	0x2
 7868 0683 30       		.byte	0x30
 7869 0684 9F       		.byte	0x9f
 7870 0685 30000000 		.4byte	.LVL106
 7871 0689 42000000 		.4byte	.LVL107
 7872 068d 0100     		.2byte	0x1
 7873 068f 53       		.byte	0x53
 7874 0690 44000000 		.4byte	.LVL108
 7875 0694 4C000000 		.4byte	.LVL109
 7876 0698 0100     		.2byte	0x1
 7877 069a 53       		.byte	0x53
 7878 069b 00000000 		.4byte	0
 7879 069f 00000000 		.4byte	0
 7880              	.LLST41:
 7881 06a3 00000000 		.4byte	.LVL112
 7882 06a7 04000000 		.4byte	.LVL113
 7883 06ab 0100     		.2byte	0x1
 7884 06ad 50       		.byte	0x50
 7885 06ae 04000000 		.4byte	.LVL113
 7886 06b2 14000000 		.4byte	.LFE28
 7887 06b6 0100     		.2byte	0x1
 7888 06b8 52       		.byte	0x52
 7889 06b9 00000000 		.4byte	0
 7890 06bd 00000000 		.4byte	0
 7891              	.LLST42:
 7892 06c1 00000000 		.4byte	.LVL118
 7893 06c5 04000000 		.4byte	.LVL119
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 202


 7894 06c9 0100     		.2byte	0x1
 7895 06cb 50       		.byte	0x50
 7896 06cc 04000000 		.4byte	.LVL119
 7897 06d0 14000000 		.4byte	.LFE37
 7898 06d4 0400     		.2byte	0x4
 7899 06d6 F3       		.byte	0xf3
 7900 06d7 01       		.uleb128 0x1
 7901 06d8 50       		.byte	0x50
 7902 06d9 9F       		.byte	0x9f
 7903 06da 00000000 		.4byte	0
 7904 06de 00000000 		.4byte	0
 7905              	.LLST43:
 7906 06e2 00000000 		.4byte	.LVL120
 7907 06e6 08000000 		.4byte	.LVL121
 7908 06ea 0100     		.2byte	0x1
 7909 06ec 50       		.byte	0x50
 7910 06ed 08000000 		.4byte	.LVL121
 7911 06f1 18000000 		.4byte	.LFE38
 7912 06f5 0400     		.2byte	0x4
 7913 06f7 F3       		.byte	0xf3
 7914 06f8 01       		.uleb128 0x1
 7915 06f9 50       		.byte	0x50
 7916 06fa 9F       		.byte	0x9f
 7917 06fb 00000000 		.4byte	0
 7918 06ff 00000000 		.4byte	0
 7919              	.LLST44:
 7920 0703 00000000 		.4byte	.LVL122
 7921 0707 04000000 		.4byte	.LVL123
 7922 070b 0100     		.2byte	0x1
 7923 070d 50       		.byte	0x50
 7924 070e 04000000 		.4byte	.LVL123
 7925 0712 14000000 		.4byte	.LFE39
 7926 0716 0400     		.2byte	0x4
 7927 0718 F3       		.byte	0xf3
 7928 0719 01       		.uleb128 0x1
 7929 071a 50       		.byte	0x50
 7930 071b 9F       		.byte	0x9f
 7931 071c 00000000 		.4byte	0
 7932 0720 00000000 		.4byte	0
 7933              	.LLST45:
 7934 0724 00000000 		.4byte	.LVL124
 7935 0728 04000000 		.4byte	.LVL125
 7936 072c 0100     		.2byte	0x1
 7937 072e 50       		.byte	0x50
 7938 072f 04000000 		.4byte	.LVL125
 7939 0733 14000000 		.4byte	.LFE40
 7940 0737 0400     		.2byte	0x4
 7941 0739 F3       		.byte	0xf3
 7942 073a 01       		.uleb128 0x1
 7943 073b 50       		.byte	0x50
 7944 073c 9F       		.byte	0x9f
 7945 073d 00000000 		.4byte	0
 7946 0741 00000000 		.4byte	0
 7947              	.LLST46:
 7948 0745 00000000 		.4byte	.LVL126
 7949 0749 04000000 		.4byte	.LVL127
 7950 074d 0100     		.2byte	0x1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 203


 7951 074f 50       		.byte	0x50
 7952 0750 04000000 		.4byte	.LVL127
 7953 0754 14000000 		.4byte	.LFE41
 7954 0758 0400     		.2byte	0x4
 7955 075a F3       		.byte	0xf3
 7956 075b 01       		.uleb128 0x1
 7957 075c 50       		.byte	0x50
 7958 075d 9F       		.byte	0x9f
 7959 075e 00000000 		.4byte	0
 7960 0762 00000000 		.4byte	0
 7961              	.LLST47:
 7962 0766 00000000 		.4byte	.LVL129
 7963 076a 08000000 		.4byte	.LVL130
 7964 076e 0100     		.2byte	0x1
 7965 0770 50       		.byte	0x50
 7966 0771 08000000 		.4byte	.LVL130
 7967 0775 28000000 		.4byte	.LVL134
 7968 0779 0100     		.2byte	0x1
 7969 077b 54       		.byte	0x54
 7970 077c 28000000 		.4byte	.LVL134
 7971 0780 40000000 		.4byte	.LFE18
 7972 0784 0400     		.2byte	0x4
 7973 0786 F3       		.byte	0xf3
 7974 0787 01       		.uleb128 0x1
 7975 0788 50       		.byte	0x50
 7976 0789 9F       		.byte	0x9f
 7977 078a 00000000 		.4byte	0
 7978 078e 00000000 		.4byte	0
 7979              	.LLST48:
 7980 0792 10000000 		.4byte	.LVL132
 7981 0796 35000000 		.4byte	.LVL137-1
 7982 079a 0100     		.2byte	0x1
 7983 079c 50       		.byte	0x50
 7984 079d 00000000 		.4byte	0
 7985 07a1 00000000 		.4byte	0
 7986              	.LLST49:
 7987 07a5 22000000 		.4byte	.LVL133
 7988 07a9 30000000 		.4byte	.LVL135
 7989 07ad 0100     		.2byte	0x1
 7990 07af 55       		.byte	0x55
 7991 07b0 32000000 		.4byte	.LVL136
 7992 07b4 38000000 		.4byte	.LVL138
 7993 07b8 0100     		.2byte	0x1
 7994 07ba 55       		.byte	0x55
 7995 07bb 38000000 		.4byte	.LVL138
 7996 07bf 40000000 		.4byte	.LFE18
 7997 07c3 0100     		.2byte	0x1
 7998 07c5 50       		.byte	0x50
 7999 07c6 00000000 		.4byte	0
 8000 07ca 00000000 		.4byte	0
 8001              	.LLST50:
 8002 07ce 00000000 		.4byte	.LVL139
 8003 07d2 08000000 		.4byte	.LVL140
 8004 07d6 0100     		.2byte	0x1
 8005 07d8 50       		.byte	0x50
 8006 07d9 08000000 		.4byte	.LVL140
 8007 07dd 14000000 		.4byte	.LVL143
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 204


 8008 07e1 0100     		.2byte	0x1
 8009 07e3 54       		.byte	0x54
 8010 07e4 14000000 		.4byte	.LVL143
 8011 07e8 2C000000 		.4byte	.LFE22
 8012 07ec 0400     		.2byte	0x4
 8013 07ee F3       		.byte	0xf3
 8014 07ef 01       		.uleb128 0x1
 8015 07f0 50       		.byte	0x50
 8016 07f1 9F       		.byte	0x9f
 8017 07f2 00000000 		.4byte	0
 8018 07f6 00000000 		.4byte	0
 8019              	.LLST51:
 8020 07fa 1A000000 		.4byte	.LVL144
 8021 07fe 1C000000 		.4byte	.LVL145
 8022 0802 0700     		.2byte	0x7
 8023 0804 74       		.byte	0x74
 8024 0805 00       		.sleb128 0
 8025 0806 48       		.byte	0x48
 8026 0807 41       		.byte	0x41
 8027 0808 24       		.byte	0x24
 8028 0809 1A       		.byte	0x1a
 8029 080a 9F       		.byte	0x9f
 8030 080b 20000000 		.4byte	.LVL146
 8031 080f 26000000 		.4byte	.LVL148
 8032 0813 0100     		.2byte	0x1
 8033 0815 54       		.byte	0x54
 8034 0816 26000000 		.4byte	.LVL148
 8035 081a 2C000000 		.4byte	.LFE22
 8036 081e 0100     		.2byte	0x1
 8037 0820 50       		.byte	0x50
 8038 0821 00000000 		.4byte	0
 8039 0825 00000000 		.4byte	0
 8040              	.LLST52:
 8041 0829 10000000 		.4byte	.LVL142
 8042 082d 23000000 		.4byte	.LVL147-1
 8043 0831 0100     		.2byte	0x1
 8044 0833 50       		.byte	0x50
 8045 0834 00000000 		.4byte	0
 8046 0838 00000000 		.4byte	0
 8047              	.LLST53:
 8048 083c 00000000 		.4byte	.LVL149
 8049 0840 07000000 		.4byte	.LVL151-1
 8050 0844 0100     		.2byte	0x1
 8051 0846 50       		.byte	0x50
 8052 0847 07000000 		.4byte	.LVL151-1
 8053 084b 2A000000 		.4byte	.LVL162
 8054 084f 0100     		.2byte	0x1
 8055 0851 54       		.byte	0x54
 8056 0852 2A000000 		.4byte	.LVL162
 8057 0856 2C000000 		.4byte	.LFE23
 8058 085a 0400     		.2byte	0x4
 8059 085c F3       		.byte	0xf3
 8060 085d 01       		.uleb128 0x1
 8061 085e 50       		.byte	0x50
 8062 085f 9F       		.byte	0x9f
 8063 0860 00000000 		.4byte	0
 8064 0864 00000000 		.4byte	0
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 205


 8065              	.LLST54:
 8066 0868 10000000 		.4byte	.LVL154
 8067 086c 1E000000 		.4byte	.LVL155
 8068 0870 0100     		.2byte	0x1
 8069 0872 50       		.byte	0x50
 8070 0873 20000000 		.4byte	.LVL156
 8071 0877 22000000 		.4byte	.LVL157
 8072 087b 0100     		.2byte	0x1
 8073 087d 50       		.byte	0x50
 8074 087e 24000000 		.4byte	.LVL158
 8075 0882 26000000 		.4byte	.LVL159
 8076 0886 0100     		.2byte	0x1
 8077 0888 50       		.byte	0x50
 8078 0889 28000000 		.4byte	.LVL160
 8079 088d 2A000000 		.4byte	.LVL161
 8080 0891 0100     		.2byte	0x1
 8081 0893 50       		.byte	0x50
 8082 0894 00000000 		.4byte	0
 8083 0898 00000000 		.4byte	0
 8084              	.LLST55:
 8085 089c 0A000000 		.4byte	.LVL152
 8086 08a0 0C000000 		.4byte	.LVL153
 8087 08a4 0100     		.2byte	0x1
 8088 08a6 50       		.byte	0x50
 8089 08a7 0C000000 		.4byte	.LVL153
 8090 08ab 2A000000 		.4byte	.LVL163
 8091 08af 0100     		.2byte	0x1
 8092 08b1 55       		.byte	0x55
 8093 08b2 00000000 		.4byte	0
 8094 08b6 00000000 		.4byte	0
 8095              	.LLST56:
 8096 08ba 04000000 		.4byte	.LVL150
 8097 08be 2A000000 		.4byte	.LVL161
 8098 08c2 0200     		.2byte	0x2
 8099 08c4 34       		.byte	0x34
 8100 08c5 9F       		.byte	0x9f
 8101 08c6 2A000000 		.4byte	.LVL161
 8102 08ca 2C000000 		.4byte	.LFE23
 8103 08ce 0100     		.2byte	0x1
 8104 08d0 50       		.byte	0x50
 8105 08d1 00000000 		.4byte	0
 8106 08d5 00000000 		.4byte	0
 8107              	.LLST57:
 8108 08d9 00000000 		.4byte	.LVL164
 8109 08dd 0F000000 		.4byte	.LVL166-1
 8110 08e1 0100     		.2byte	0x1
 8111 08e3 50       		.byte	0x50
 8112 08e4 0F000000 		.4byte	.LVL166-1
 8113 08e8 68000000 		.4byte	.LVL177
 8114 08ec 0100     		.2byte	0x1
 8115 08ee 54       		.byte	0x54
 8116 08ef 68000000 		.4byte	.LVL177
 8117 08f3 70000000 		.4byte	.LVL179
 8118 08f7 0400     		.2byte	0x4
 8119 08f9 F3       		.byte	0xf3
 8120 08fa 01       		.uleb128 0x1
 8121 08fb 50       		.byte	0x50
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 206


 8122 08fc 9F       		.byte	0x9f
 8123 08fd 70000000 		.4byte	.LVL179
 8124 0901 72000000 		.4byte	.LVL180
 8125 0905 0100     		.2byte	0x1
 8126 0907 54       		.byte	0x54
 8127 0908 72000000 		.4byte	.LVL180
 8128 090c 74000000 		.4byte	.LVL181
 8129 0910 0400     		.2byte	0x4
 8130 0912 F3       		.byte	0xf3
 8131 0913 01       		.uleb128 0x1
 8132 0914 50       		.byte	0x50
 8133 0915 9F       		.byte	0x9f
 8134 0916 74000000 		.4byte	.LVL181
 8135 091a 76000000 		.4byte	.LVL182
 8136 091e 0100     		.2byte	0x1
 8137 0920 54       		.byte	0x54
 8138 0921 76000000 		.4byte	.LVL182
 8139 0925 78000000 		.4byte	.LVL183
 8140 0929 0400     		.2byte	0x4
 8141 092b F3       		.byte	0xf3
 8142 092c 01       		.uleb128 0x1
 8143 092d 50       		.byte	0x50
 8144 092e 9F       		.byte	0x9f
 8145 092f 78000000 		.4byte	.LVL183
 8146 0933 7A000000 		.4byte	.LVL184
 8147 0937 0100     		.2byte	0x1
 8148 0939 54       		.byte	0x54
 8149 093a 7A000000 		.4byte	.LVL184
 8150 093e 7C000000 		.4byte	.LVL185
 8151 0942 0400     		.2byte	0x4
 8152 0944 F3       		.byte	0xf3
 8153 0945 01       		.uleb128 0x1
 8154 0946 50       		.byte	0x50
 8155 0947 9F       		.byte	0x9f
 8156 0948 7C000000 		.4byte	.LVL185
 8157 094c 7E000000 		.4byte	.LVL186
 8158 0950 0100     		.2byte	0x1
 8159 0952 54       		.byte	0x54
 8160 0953 7E000000 		.4byte	.LVL186
 8161 0957 80000000 		.4byte	.LVL187
 8162 095b 0400     		.2byte	0x4
 8163 095d F3       		.byte	0xf3
 8164 095e 01       		.uleb128 0x1
 8165 095f 50       		.byte	0x50
 8166 0960 9F       		.byte	0x9f
 8167 0961 80000000 		.4byte	.LVL187
 8168 0965 82000000 		.4byte	.LVL188
 8169 0969 0100     		.2byte	0x1
 8170 096b 54       		.byte	0x54
 8171 096c 82000000 		.4byte	.LVL188
 8172 0970 84000000 		.4byte	.LVL189
 8173 0974 0400     		.2byte	0x4
 8174 0976 F3       		.byte	0xf3
 8175 0977 01       		.uleb128 0x1
 8176 0978 50       		.byte	0x50
 8177 0979 9F       		.byte	0x9f
 8178 097a 84000000 		.4byte	.LVL189
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 207


 8179 097e 86000000 		.4byte	.LVL190
 8180 0982 0100     		.2byte	0x1
 8181 0984 54       		.byte	0x54
 8182 0985 86000000 		.4byte	.LVL190
 8183 0989 88000000 		.4byte	.LVL191
 8184 098d 0400     		.2byte	0x4
 8185 098f F3       		.byte	0xf3
 8186 0990 01       		.uleb128 0x1
 8187 0991 50       		.byte	0x50
 8188 0992 9F       		.byte	0x9f
 8189 0993 88000000 		.4byte	.LVL191
 8190 0997 8A000000 		.4byte	.LVL192
 8191 099b 0100     		.2byte	0x1
 8192 099d 54       		.byte	0x54
 8193 099e 8A000000 		.4byte	.LVL192
 8194 09a2 8C000000 		.4byte	.LVL193
 8195 09a6 0400     		.2byte	0x4
 8196 09a8 F3       		.byte	0xf3
 8197 09a9 01       		.uleb128 0x1
 8198 09aa 50       		.byte	0x50
 8199 09ab 9F       		.byte	0x9f
 8200 09ac 8C000000 		.4byte	.LVL193
 8201 09b0 8E000000 		.4byte	.LVL194
 8202 09b4 0100     		.2byte	0x1
 8203 09b6 54       		.byte	0x54
 8204 09b7 8E000000 		.4byte	.LVL194
 8205 09bb A4000000 		.4byte	.LFE20
 8206 09bf 0400     		.2byte	0x4
 8207 09c1 F3       		.byte	0xf3
 8208 09c2 01       		.uleb128 0x1
 8209 09c3 50       		.byte	0x50
 8210 09c4 9F       		.byte	0x9f
 8211 09c5 00000000 		.4byte	0
 8212 09c9 00000000 		.4byte	0
 8213              	.LLST58:
 8214 09cd 00000000 		.4byte	.LVL164
 8215 09d1 0F000000 		.4byte	.LVL166-1
 8216 09d5 0100     		.2byte	0x1
 8217 09d7 51       		.byte	0x51
 8218 09d8 0F000000 		.4byte	.LVL166-1
 8219 09dc 98000000 		.4byte	.LVL197
 8220 09e0 0100     		.2byte	0x1
 8221 09e2 55       		.byte	0x55
 8222 09e3 98000000 		.4byte	.LVL197
 8223 09e7 A4000000 		.4byte	.LFE20
 8224 09eb 0400     		.2byte	0x4
 8225 09ed F3       		.byte	0xf3
 8226 09ee 01       		.uleb128 0x1
 8227 09ef 51       		.byte	0x51
 8228 09f0 9F       		.byte	0x9f
 8229 09f1 00000000 		.4byte	0
 8230 09f5 00000000 		.4byte	0
 8231              	.LLST59:
 8232 09f9 00000000 		.4byte	.LVL164
 8233 09fd 0F000000 		.4byte	.LVL166-1
 8234 0a01 0100     		.2byte	0x1
 8235 0a03 52       		.byte	0x52
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 208


 8236 0a04 0F000000 		.4byte	.LVL166-1
 8237 0a08 52000000 		.4byte	.LVL172
 8238 0a0c 0100     		.2byte	0x1
 8239 0a0e 56       		.byte	0x56
 8240 0a0f 52000000 		.4byte	.LVL172
 8241 0a13 54000000 		.4byte	.LVL173
 8242 0a17 0300     		.2byte	0x3
 8243 0a19 76       		.byte	0x76
 8244 0a1a 01       		.sleb128 1
 8245 0a1b 9F       		.byte	0x9f
 8246 0a1c 54000000 		.4byte	.LVL173
 8247 0a20 70000000 		.4byte	.LVL179
 8248 0a24 0400     		.2byte	0x4
 8249 0a26 F3       		.byte	0xf3
 8250 0a27 01       		.uleb128 0x1
 8251 0a28 52       		.byte	0x52
 8252 0a29 9F       		.byte	0x9f
 8253 0a2a 70000000 		.4byte	.LVL179
 8254 0a2e 8E000000 		.4byte	.LVL194
 8255 0a32 0100     		.2byte	0x1
 8256 0a34 56       		.byte	0x56
 8257 0a35 8E000000 		.4byte	.LVL194
 8258 0a39 A4000000 		.4byte	.LFE20
 8259 0a3d 0400     		.2byte	0x4
 8260 0a3f F3       		.byte	0xf3
 8261 0a40 01       		.uleb128 0x1
 8262 0a41 52       		.byte	0x52
 8263 0a42 9F       		.byte	0x9f
 8264 0a43 00000000 		.4byte	0
 8265 0a47 00000000 		.4byte	0
 8266              	.LLST60:
 8267 0a4b 00000000 		.4byte	.LVL164
 8268 0a4f 0F000000 		.4byte	.LVL166-1
 8269 0a53 0100     		.2byte	0x1
 8270 0a55 53       		.byte	0x53
 8271 0a56 0F000000 		.4byte	.LVL166-1
 8272 0a5a 5E000000 		.4byte	.LVL175
 8273 0a5e 0100     		.2byte	0x1
 8274 0a60 57       		.byte	0x57
 8275 0a61 5E000000 		.4byte	.LVL175
 8276 0a65 70000000 		.4byte	.LVL179
 8277 0a69 0400     		.2byte	0x4
 8278 0a6b F3       		.byte	0xf3
 8279 0a6c 01       		.uleb128 0x1
 8280 0a6d 53       		.byte	0x53
 8281 0a6e 9F       		.byte	0x9f
 8282 0a6f 70000000 		.4byte	.LVL179
 8283 0a73 8E000000 		.4byte	.LVL194
 8284 0a77 0100     		.2byte	0x1
 8285 0a79 57       		.byte	0x57
 8286 0a7a 8E000000 		.4byte	.LVL194
 8287 0a7e A4000000 		.4byte	.LFE20
 8288 0a82 0400     		.2byte	0x4
 8289 0a84 F3       		.byte	0xf3
 8290 0a85 01       		.uleb128 0x1
 8291 0a86 53       		.byte	0x53
 8292 0a87 9F       		.byte	0x9f
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 209


 8293 0a88 00000000 		.4byte	0
 8294 0a8c 00000000 		.4byte	0
 8295              	.LLST61:
 8296 0a90 4A000000 		.4byte	.LVL170
 8297 0a94 66000000 		.4byte	.LVL176
 8298 0a98 0100     		.2byte	0x1
 8299 0a9a 53       		.byte	0x53
 8300 0a9b 66000000 		.4byte	.LVL176
 8301 0a9f 70000000 		.4byte	.LVL179
 8302 0aa3 0100     		.2byte	0x1
 8303 0aa5 57       		.byte	0x57
 8304 0aa6 00000000 		.4byte	0
 8305 0aaa 00000000 		.4byte	0
 8306              	.LLST62:
 8307 0aae 18000000 		.4byte	.LVL168
 8308 0ab2 40000000 		.4byte	.LVL169
 8309 0ab6 0100     		.2byte	0x1
 8310 0ab8 50       		.byte	0x50
 8311 0ab9 70000000 		.4byte	.LVL179
 8312 0abd 8E000000 		.4byte	.LVL194
 8313 0ac1 0100     		.2byte	0x1
 8314 0ac3 50       		.byte	0x50
 8315 0ac4 00000000 		.4byte	0
 8316 0ac8 00000000 		.4byte	0
 8317              	.LLST63:
 8318 0acc 12000000 		.4byte	.LVL167
 8319 0ad0 6C000000 		.4byte	.LVL178
 8320 0ad4 0200     		.2byte	0x2
 8321 0ad6 91       		.byte	0x91
 8322 0ad7 64       		.sleb128 -28
 8323 0ad8 70000000 		.4byte	.LVL179
 8324 0adc 8E000000 		.4byte	.LVL194
 8325 0ae0 0200     		.2byte	0x2
 8326 0ae2 91       		.byte	0x91
 8327 0ae3 64       		.sleb128 -28
 8328 0ae4 00000000 		.4byte	0
 8329 0ae8 00000000 		.4byte	0
 8330              	.LLST64:
 8331 0aec 0C000000 		.4byte	.LVL165
 8332 0af0 6C000000 		.4byte	.LVL178
 8333 0af4 0200     		.2byte	0x2
 8334 0af6 31       		.byte	0x31
 8335 0af7 9F       		.byte	0x9f
 8336 0af8 6C000000 		.4byte	.LVL178
 8337 0afc 70000000 		.4byte	.LVL179
 8338 0b00 0200     		.2byte	0x2
 8339 0b02 30       		.byte	0x30
 8340 0b03 9F       		.byte	0x9f
 8341 0b04 70000000 		.4byte	.LVL179
 8342 0b08 8E000000 		.4byte	.LVL194
 8343 0b0c 0200     		.2byte	0x2
 8344 0b0e 31       		.byte	0x31
 8345 0b0f 9F       		.byte	0x9f
 8346 0b10 8E000000 		.4byte	.LVL194
 8347 0b14 98000000 		.4byte	.LVL196
 8348 0b18 0100     		.2byte	0x1
 8349 0b1a 54       		.byte	0x54
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 210


 8350 0b1b 98000000 		.4byte	.LVL196
 8351 0b1f A4000000 		.4byte	.LFE20
 8352 0b23 0100     		.2byte	0x1
 8353 0b25 50       		.byte	0x50
 8354 0b26 00000000 		.4byte	0
 8355 0b2a 00000000 		.4byte	0
 8356              	.LLST65:
 8357 0b2e 00000000 		.4byte	.LVL198
 8358 0b32 09000000 		.4byte	.LVL200-1
 8359 0b36 0100     		.2byte	0x1
 8360 0b38 50       		.byte	0x50
 8361 0b39 09000000 		.4byte	.LVL200-1
 8362 0b3d 34000000 		.4byte	.LVL207
 8363 0b41 0100     		.2byte	0x1
 8364 0b43 54       		.byte	0x54
 8365 0b44 34000000 		.4byte	.LVL207
 8366 0b48 3C000000 		.4byte	.LVL209
 8367 0b4c 0400     		.2byte	0x4
 8368 0b4e F3       		.byte	0xf3
 8369 0b4f 01       		.uleb128 0x1
 8370 0b50 50       		.byte	0x50
 8371 0b51 9F       		.byte	0x9f
 8372 0b52 3C000000 		.4byte	.LVL209
 8373 0b56 3E000000 		.4byte	.LVL210
 8374 0b5a 0100     		.2byte	0x1
 8375 0b5c 54       		.byte	0x54
 8376 0b5d 3E000000 		.4byte	.LVL210
 8377 0b61 40000000 		.4byte	.LVL211
 8378 0b65 0400     		.2byte	0x4
 8379 0b67 F3       		.byte	0xf3
 8380 0b68 01       		.uleb128 0x1
 8381 0b69 50       		.byte	0x50
 8382 0b6a 9F       		.byte	0x9f
 8383 0b6b 40000000 		.4byte	.LVL211
 8384 0b6f 42000000 		.4byte	.LVL212
 8385 0b73 0100     		.2byte	0x1
 8386 0b75 54       		.byte	0x54
 8387 0b76 42000000 		.4byte	.LVL212
 8388 0b7a 44000000 		.4byte	.LVL213
 8389 0b7e 0400     		.2byte	0x4
 8390 0b80 F3       		.byte	0xf3
 8391 0b81 01       		.uleb128 0x1
 8392 0b82 50       		.byte	0x50
 8393 0b83 9F       		.byte	0x9f
 8394 0b84 44000000 		.4byte	.LVL213
 8395 0b88 46000000 		.4byte	.LVL214
 8396 0b8c 0100     		.2byte	0x1
 8397 0b8e 54       		.byte	0x54
 8398 0b8f 46000000 		.4byte	.LVL214
 8399 0b93 58000000 		.4byte	.LFE27
 8400 0b97 0400     		.2byte	0x4
 8401 0b99 F3       		.byte	0xf3
 8402 0b9a 01       		.uleb128 0x1
 8403 0b9b 50       		.byte	0x50
 8404 0b9c 9F       		.byte	0x9f
 8405 0b9d 00000000 		.4byte	0
 8406 0ba1 00000000 		.4byte	0
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 211


 8407              	.LLST66:
 8408 0ba5 00000000 		.4byte	.LVL198
 8409 0ba9 09000000 		.4byte	.LVL200-1
 8410 0bad 0100     		.2byte	0x1
 8411 0baf 51       		.byte	0x51
 8412 0bb0 09000000 		.4byte	.LVL200-1
 8413 0bb4 2E000000 		.4byte	.LVL205
 8414 0bb8 0100     		.2byte	0x1
 8415 0bba 55       		.byte	0x55
 8416 0bbb 2E000000 		.4byte	.LVL205
 8417 0bbf 3C000000 		.4byte	.LVL209
 8418 0bc3 0400     		.2byte	0x4
 8419 0bc5 F3       		.byte	0xf3
 8420 0bc6 01       		.uleb128 0x1
 8421 0bc7 51       		.byte	0x51
 8422 0bc8 9F       		.byte	0x9f
 8423 0bc9 3C000000 		.4byte	.LVL209
 8424 0bcd 46000000 		.4byte	.LVL214
 8425 0bd1 0100     		.2byte	0x1
 8426 0bd3 55       		.byte	0x55
 8427 0bd4 46000000 		.4byte	.LVL214
 8428 0bd8 58000000 		.4byte	.LFE27
 8429 0bdc 0400     		.2byte	0x4
 8430 0bde F3       		.byte	0xf3
 8431 0bdf 01       		.uleb128 0x1
 8432 0be0 51       		.byte	0x51
 8433 0be1 9F       		.byte	0x9f
 8434 0be2 00000000 		.4byte	0
 8435 0be6 00000000 		.4byte	0
 8436              	.LLST67:
 8437 0bea 2C000000 		.4byte	.LVL204
 8438 0bee 32000000 		.4byte	.LVL206
 8439 0bf2 0100     		.2byte	0x1
 8440 0bf4 53       		.byte	0x53
 8441 0bf5 32000000 		.4byte	.LVL206
 8442 0bf9 3C000000 		.4byte	.LVL209
 8443 0bfd 0100     		.2byte	0x1
 8444 0bff 55       		.byte	0x55
 8445 0c00 00000000 		.4byte	0
 8446 0c04 00000000 		.4byte	0
 8447              	.LLST68:
 8448 0c08 0C000000 		.4byte	.LVL201
 8449 0c0c 4E000000 		.4byte	.LVL217
 8450 0c10 0100     		.2byte	0x1
 8451 0c12 56       		.byte	0x56
 8452 0c13 00000000 		.4byte	0
 8453 0c17 00000000 		.4byte	0
 8454              	.LLST69:
 8455 0c1b 06000000 		.4byte	.LVL199
 8456 0c1f 38000000 		.4byte	.LVL208
 8457 0c23 0200     		.2byte	0x2
 8458 0c25 31       		.byte	0x31
 8459 0c26 9F       		.byte	0x9f
 8460 0c27 38000000 		.4byte	.LVL208
 8461 0c2b 3C000000 		.4byte	.LVL209
 8462 0c2f 0200     		.2byte	0x2
 8463 0c31 30       		.byte	0x30
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 212


 8464 0c32 9F       		.byte	0x9f
 8465 0c33 3C000000 		.4byte	.LVL209
 8466 0c37 46000000 		.4byte	.LVL214
 8467 0c3b 0200     		.2byte	0x2
 8468 0c3d 31       		.byte	0x31
 8469 0c3e 9F       		.byte	0x9f
 8470 0c3f 46000000 		.4byte	.LVL214
 8471 0c43 4E000000 		.4byte	.LVL216
 8472 0c47 0100     		.2byte	0x1
 8473 0c49 54       		.byte	0x54
 8474 0c4a 4E000000 		.4byte	.LVL216
 8475 0c4e 58000000 		.4byte	.LFE27
 8476 0c52 0100     		.2byte	0x1
 8477 0c54 50       		.byte	0x50
 8478 0c55 00000000 		.4byte	0
 8479 0c59 00000000 		.4byte	0
 8480              	.LLST70:
 8481 0c5d 12000000 		.4byte	.LVL202
 8482 0c61 24000000 		.4byte	.LVL203
 8483 0c65 0100     		.2byte	0x1
 8484 0c67 50       		.byte	0x50
 8485 0c68 3C000000 		.4byte	.LVL209
 8486 0c6c 46000000 		.4byte	.LVL214
 8487 0c70 0100     		.2byte	0x1
 8488 0c72 50       		.byte	0x50
 8489 0c73 00000000 		.4byte	0
 8490 0c77 00000000 		.4byte	0
 8491              	.LLST71:
 8492 0c7b 00000000 		.4byte	.LVL218
 8493 0c7f 17000000 		.4byte	.LVL220-1
 8494 0c83 0100     		.2byte	0x1
 8495 0c85 50       		.byte	0x50
 8496 0c86 17000000 		.4byte	.LVL220-1
 8497 0c8a F4000000 		.4byte	.LVL255
 8498 0c8e 0100     		.2byte	0x1
 8499 0c90 54       		.byte	0x54
 8500 0c91 F4000000 		.4byte	.LVL255
 8501 0c95 10010000 		.4byte	.LFE25
 8502 0c99 0400     		.2byte	0x4
 8503 0c9b F3       		.byte	0xf3
 8504 0c9c 01       		.uleb128 0x1
 8505 0c9d 50       		.byte	0x50
 8506 0c9e 9F       		.byte	0x9f
 8507 0c9f 00000000 		.4byte	0
 8508 0ca3 00000000 		.4byte	0
 8509              	.LLST72:
 8510 0ca7 00000000 		.4byte	.LVL218
 8511 0cab 17000000 		.4byte	.LVL220-1
 8512 0caf 0100     		.2byte	0x1
 8513 0cb1 51       		.byte	0x51
 8514 0cb2 17000000 		.4byte	.LVL220-1
 8515 0cb6 F4000000 		.4byte	.LVL256
 8516 0cba 0100     		.2byte	0x1
 8517 0cbc 55       		.byte	0x55
 8518 0cbd F4000000 		.4byte	.LVL256
 8519 0cc1 10010000 		.4byte	.LFE25
 8520 0cc5 0400     		.2byte	0x4
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 213


 8521 0cc7 F3       		.byte	0xf3
 8522 0cc8 01       		.uleb128 0x1
 8523 0cc9 51       		.byte	0x51
 8524 0cca 9F       		.byte	0x9f
 8525 0ccb 00000000 		.4byte	0
 8526 0ccf 00000000 		.4byte	0
 8527              	.LLST73:
 8528 0cd3 00000000 		.4byte	.LVL218
 8529 0cd7 17000000 		.4byte	.LVL220-1
 8530 0cdb 0100     		.2byte	0x1
 8531 0cdd 52       		.byte	0x52
 8532 0cde 17000000 		.4byte	.LVL220-1
 8533 0ce2 F4000000 		.4byte	.LVL257
 8534 0ce6 0100     		.2byte	0x1
 8535 0ce8 56       		.byte	0x56
 8536 0ce9 F4000000 		.4byte	.LVL257
 8537 0ced 10010000 		.4byte	.LFE25
 8538 0cf1 0400     		.2byte	0x4
 8539 0cf3 F3       		.byte	0xf3
 8540 0cf4 01       		.uleb128 0x1
 8541 0cf5 52       		.byte	0x52
 8542 0cf6 9F       		.byte	0x9f
 8543 0cf7 00000000 		.4byte	0
 8544 0cfb 00000000 		.4byte	0
 8545              	.LLST74:
 8546 0cff 00000000 		.4byte	.LVL218
 8547 0d03 17000000 		.4byte	.LVL220-1
 8548 0d07 0100     		.2byte	0x1
 8549 0d09 53       		.byte	0x53
 8550 0d0a 17000000 		.4byte	.LVL220-1
 8551 0d0e 4C000000 		.4byte	.LVL223
 8552 0d12 0100     		.2byte	0x1
 8553 0d14 57       		.byte	0x57
 8554 0d15 4C000000 		.4byte	.LVL223
 8555 0d19 CC000000 		.4byte	.LVL238
 8556 0d1d 0200     		.2byte	0x2
 8557 0d1f 91       		.byte	0x91
 8558 0d20 5C       		.sleb128 -36
 8559 0d21 CC000000 		.4byte	.LVL238
 8560 0d25 E8000000 		.4byte	.LVL252
 8561 0d29 0100     		.2byte	0x1
 8562 0d2b 57       		.byte	0x57
 8563 0d2c E8000000 		.4byte	.LVL252
 8564 0d30 10010000 		.4byte	.LFE25
 8565 0d34 0200     		.2byte	0x2
 8566 0d36 91       		.byte	0x91
 8567 0d37 5C       		.sleb128 -36
 8568 0d38 00000000 		.4byte	0
 8569 0d3c 00000000 		.4byte	0
 8570              	.LLST75:
 8571 0d40 4C000000 		.4byte	.LVL223
 8572 0d44 50000000 		.4byte	.LVL224
 8573 0d48 0100     		.2byte	0x1
 8574 0d4a 50       		.byte	0x50
 8575 0d4b 50000000 		.4byte	.LVL224
 8576 0d4f 6C000000 		.4byte	.LVL227
 8577 0d53 0100     		.2byte	0x1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 214


 8578 0d55 57       		.byte	0x57
 8579 0d56 00000000 		.4byte	0
 8580 0d5a 00000000 		.4byte	0
 8581              	.LLST76:
 8582 0d5e 5A000000 		.4byte	.LVL225
 8583 0d62 64000000 		.4byte	.LVL226
 8584 0d66 0100     		.2byte	0x1
 8585 0d68 50       		.byte	0x50
 8586 0d69 64000000 		.4byte	.LVL226
 8587 0d6d CC000000 		.4byte	.LVL238
 8588 0d71 0100     		.2byte	0x1
 8589 0d73 5A       		.byte	0x5a
 8590 0d74 E8000000 		.4byte	.LVL252
 8591 0d78 F2000000 		.4byte	.LVL254
 8592 0d7c 0100     		.2byte	0x1
 8593 0d7e 5A       		.byte	0x5a
 8594 0d7f 00000000 		.4byte	0
 8595 0d83 00000000 		.4byte	0
 8596              	.LLST77:
 8597 0d87 14000000 		.4byte	.LVL219
 8598 0d8b A8000000 		.4byte	.LVL235
 8599 0d8f 0200     		.2byte	0x2
 8600 0d91 30       		.byte	0x30
 8601 0d92 9F       		.byte	0x9f
 8602 0d93 A8000000 		.4byte	.LVL235
 8603 0d97 CC000000 		.4byte	.LVL238
 8604 0d9b 0100     		.2byte	0x1
 8605 0d9d 57       		.byte	0x57
 8606 0d9e CC000000 		.4byte	.LVL238
 8607 0da2 E8000000 		.4byte	.LVL252
 8608 0da6 0200     		.2byte	0x2
 8609 0da8 30       		.byte	0x30
 8610 0da9 9F       		.byte	0x9f
 8611 0daa E8000000 		.4byte	.LVL252
 8612 0dae F2000000 		.4byte	.LVL254
 8613 0db2 0100     		.2byte	0x1
 8614 0db4 57       		.byte	0x57
 8615 0db5 00000000 		.4byte	0
 8616 0db9 00000000 		.4byte	0
 8617              	.LLST78:
 8618 0dbd 14000000 		.4byte	.LVL219
 8619 0dc1 A8000000 		.4byte	.LVL235
 8620 0dc5 0200     		.2byte	0x2
 8621 0dc7 30       		.byte	0x30
 8622 0dc8 9F       		.byte	0x9f
 8623 0dc9 A8000000 		.4byte	.LVL235
 8624 0dcd CC000000 		.4byte	.LVL238
 8625 0dd1 0100     		.2byte	0x1
 8626 0dd3 58       		.byte	0x58
 8627 0dd4 CC000000 		.4byte	.LVL238
 8628 0dd8 E8000000 		.4byte	.LVL252
 8629 0ddc 0200     		.2byte	0x2
 8630 0dde 30       		.byte	0x30
 8631 0ddf 9F       		.byte	0x9f
 8632 0de0 E8000000 		.4byte	.LVL252
 8633 0de4 F0000000 		.4byte	.LVL253
 8634 0de8 0100     		.2byte	0x1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 215


 8635 0dea 53       		.byte	0x53
 8636 0deb F0000000 		.4byte	.LVL253
 8637 0def F2000000 		.4byte	.LVL254
 8638 0df3 0100     		.2byte	0x1
 8639 0df5 58       		.byte	0x58
 8640 0df6 00000000 		.4byte	0
 8641 0dfa 00000000 		.4byte	0
 8642              	.LLST79:
 8643 0dfe 6C000000 		.4byte	.LVL227
 8644 0e02 A8000000 		.4byte	.LVL235
 8645 0e06 0100     		.2byte	0x1
 8646 0e08 57       		.byte	0x57
 8647 0e09 00000000 		.4byte	0
 8648 0e0d 00000000 		.4byte	0
 8649              	.LLST80:
 8650 0e11 7C000000 		.4byte	.LVL229
 8651 0e15 7E000000 		.4byte	.LVL230
 8652 0e19 0100     		.2byte	0x1
 8653 0e1b 50       		.byte	0x50
 8654 0e1c 7E000000 		.4byte	.LVL230
 8655 0e20 9E000000 		.4byte	.LVL234
 8656 0e24 0100     		.2byte	0x1
 8657 0e26 58       		.byte	0x58
 8658 0e27 00000000 		.4byte	0
 8659 0e2b 00000000 		.4byte	0
 8660              	.LLST81:
 8661 0e2f 84000000 		.4byte	.LVL231
 8662 0e33 86000000 		.4byte	.LVL232
 8663 0e37 0100     		.2byte	0x1
 8664 0e39 50       		.byte	0x50
 8665 0e3a 00000000 		.4byte	0
 8666 0e3e 00000000 		.4byte	0
 8667              	.LLST82:
 8668 0e42 90000000 		.4byte	.LVL233
 8669 0e46 9E000000 		.4byte	.LVL234
 8670 0e4a 0100     		.2byte	0x1
 8671 0e4c 50       		.byte	0x50
 8672 0e4d 00000000 		.4byte	0
 8673 0e51 00000000 		.4byte	0
 8674              	.LLST83:
 8675 0e55 18000000 		.4byte	.LVL220
 8676 0e59 46000000 		.4byte	.LVL221
 8677 0e5d 0100     		.2byte	0x1
 8678 0e5f 50       		.byte	0x50
 8679 0e60 CC000000 		.4byte	.LVL238
 8680 0e64 CE000000 		.4byte	.LVL239
 8681 0e68 0100     		.2byte	0x1
 8682 0e6a 50       		.byte	0x50
 8683 0e6b D0000000 		.4byte	.LVL240
 8684 0e6f D2000000 		.4byte	.LVL241
 8685 0e73 0100     		.2byte	0x1
 8686 0e75 50       		.byte	0x50
 8687 0e76 D4000000 		.4byte	.LVL242
 8688 0e7a D6000000 		.4byte	.LVL243
 8689 0e7e 0100     		.2byte	0x1
 8690 0e80 50       		.byte	0x50
 8691 0e81 D8000000 		.4byte	.LVL244
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 216


 8692 0e85 DA000000 		.4byte	.LVL245
 8693 0e89 0100     		.2byte	0x1
 8694 0e8b 50       		.byte	0x50
 8695 0e8c DC000000 		.4byte	.LVL246
 8696 0e90 DE000000 		.4byte	.LVL247
 8697 0e94 0100     		.2byte	0x1
 8698 0e96 50       		.byte	0x50
 8699 0e97 E0000000 		.4byte	.LVL248
 8700 0e9b E2000000 		.4byte	.LVL249
 8701 0e9f 0100     		.2byte	0x1
 8702 0ea1 50       		.byte	0x50
 8703 0ea2 E4000000 		.4byte	.LVL250
 8704 0ea6 E6000000 		.4byte	.LVL251
 8705 0eaa 0100     		.2byte	0x1
 8706 0eac 50       		.byte	0x50
 8707 0ead 00000000 		.4byte	0
 8708 0eb1 00000000 		.4byte	0
 8709              	.LLST84:
 8710 0eb5 14000000 		.4byte	.LVL219
 8711 0eb9 CA000000 		.4byte	.LVL237
 8712 0ebd 0200     		.2byte	0x2
 8713 0ebf 31       		.byte	0x31
 8714 0ec0 9F       		.byte	0x9f
 8715 0ec1 CA000000 		.4byte	.LVL237
 8716 0ec5 CC000000 		.4byte	.LVL238
 8717 0ec9 0100     		.2byte	0x1
 8718 0ecb 50       		.byte	0x50
 8719 0ecc CC000000 		.4byte	.LVL238
 8720 0ed0 F2000000 		.4byte	.LVL254
 8721 0ed4 0200     		.2byte	0x2
 8722 0ed6 31       		.byte	0x31
 8723 0ed7 9F       		.byte	0x9f
 8724 0ed8 F2000000 		.4byte	.LVL254
 8725 0edc 10010000 		.4byte	.LFE25
 8726 0ee0 0100     		.2byte	0x1
 8727 0ee2 50       		.byte	0x50
 8728 0ee3 00000000 		.4byte	0
 8729 0ee7 00000000 		.4byte	0
 8730              	.LLST85:
 8731 0eeb 00000000 		.4byte	.LVL258
 8732 0eef 0C000000 		.4byte	.LVL260
 8733 0ef3 0100     		.2byte	0x1
 8734 0ef5 50       		.byte	0x50
 8735 0ef6 0C000000 		.4byte	.LVL260
 8736 0efa 20000000 		.4byte	.LFE31
 8737 0efe 0400     		.2byte	0x4
 8738 0f00 F3       		.byte	0xf3
 8739 0f01 01       		.uleb128 0x1
 8740 0f02 50       		.byte	0x50
 8741 0f03 9F       		.byte	0x9f
 8742 0f04 00000000 		.4byte	0
 8743 0f08 00000000 		.4byte	0
 8744              	.LLST86:
 8745 0f0c 00000000 		.4byte	.LVL258
 8746 0f10 0F000000 		.4byte	.LVL261-1
 8747 0f14 0100     		.2byte	0x1
 8748 0f16 51       		.byte	0x51
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 217


 8749 0f17 0F000000 		.4byte	.LVL261-1
 8750 0f1b 1E000000 		.4byte	.LVL263
 8751 0f1f 0100     		.2byte	0x1
 8752 0f21 55       		.byte	0x55
 8753 0f22 1E000000 		.4byte	.LVL263
 8754 0f26 20000000 		.4byte	.LFE31
 8755 0f2a 0400     		.2byte	0x4
 8756 0f2c F3       		.byte	0xf3
 8757 0f2d 01       		.uleb128 0x1
 8758 0f2e 51       		.byte	0x51
 8759 0f2f 9F       		.byte	0x9f
 8760 0f30 00000000 		.4byte	0
 8761 0f34 00000000 		.4byte	0
 8762              	.LLST87:
 8763 0f38 00000000 		.4byte	.LVL264
 8764 0f3c 0A000000 		.4byte	.LVL266
 8765 0f40 0100     		.2byte	0x1
 8766 0f42 50       		.byte	0x50
 8767 0f43 0A000000 		.4byte	.LVL266
 8768 0f47 1C000000 		.4byte	.LFE32
 8769 0f4b 0400     		.2byte	0x4
 8770 0f4d F3       		.byte	0xf3
 8771 0f4e 01       		.uleb128 0x1
 8772 0f4f 50       		.byte	0x50
 8773 0f50 9F       		.byte	0x9f
 8774 0f51 00000000 		.4byte	0
 8775 0f55 00000000 		.4byte	0
 8776              	.LLST88:
 8777 0f59 00000000 		.4byte	.LVL268
 8778 0f5d 0C000000 		.4byte	.LVL270
 8779 0f61 0100     		.2byte	0x1
 8780 0f63 50       		.byte	0x50
 8781 0f64 0C000000 		.4byte	.LVL270
 8782 0f68 22000000 		.4byte	.LFE33
 8783 0f6c 0400     		.2byte	0x4
 8784 0f6e F3       		.byte	0xf3
 8785 0f6f 01       		.uleb128 0x1
 8786 0f70 50       		.byte	0x50
 8787 0f71 9F       		.byte	0x9f
 8788 0f72 00000000 		.4byte	0
 8789 0f76 00000000 		.4byte	0
 8790              	.LLST89:
 8791 0f7a 00000000 		.4byte	.LVL268
 8792 0f7e 0F000000 		.4byte	.LVL271-1
 8793 0f82 0100     		.2byte	0x1
 8794 0f84 51       		.byte	0x51
 8795 0f85 0F000000 		.4byte	.LVL271-1
 8796 0f89 20000000 		.4byte	.LVL273
 8797 0f8d 0100     		.2byte	0x1
 8798 0f8f 55       		.byte	0x55
 8799 0f90 20000000 		.4byte	.LVL273
 8800 0f94 22000000 		.4byte	.LFE33
 8801 0f98 0400     		.2byte	0x4
 8802 0f9a F3       		.byte	0xf3
 8803 0f9b 01       		.uleb128 0x1
 8804 0f9c 51       		.byte	0x51
 8805 0f9d 9F       		.byte	0x9f
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 218


 8806 0f9e 00000000 		.4byte	0
 8807 0fa2 00000000 		.4byte	0
 8808              	.LLST90:
 8809 0fa6 00000000 		.4byte	.LVL274
 8810 0faa 0A000000 		.4byte	.LVL276
 8811 0fae 0100     		.2byte	0x1
 8812 0fb0 50       		.byte	0x50
 8813 0fb1 0A000000 		.4byte	.LVL276
 8814 0fb5 1E000000 		.4byte	.LFE34
 8815 0fb9 0400     		.2byte	0x4
 8816 0fbb F3       		.byte	0xf3
 8817 0fbc 01       		.uleb128 0x1
 8818 0fbd 50       		.byte	0x50
 8819 0fbe 9F       		.byte	0x9f
 8820 0fbf 00000000 		.4byte	0
 8821 0fc3 00000000 		.4byte	0
 8822              	.LLST91:
 8823 0fc7 00000000 		.4byte	.LVL278
 8824 0fcb 0C000000 		.4byte	.LVL279
 8825 0fcf 0100     		.2byte	0x1
 8826 0fd1 50       		.byte	0x50
 8827 0fd2 0C000000 		.4byte	.LVL279
 8828 0fd6 4C000000 		.4byte	.LFE35
 8829 0fda 0400     		.2byte	0x4
 8830 0fdc F3       		.byte	0xf3
 8831 0fdd 01       		.uleb128 0x1
 8832 0fde 50       		.byte	0x50
 8833 0fdf 9F       		.byte	0x9f
 8834 0fe0 00000000 		.4byte	0
 8835 0fe4 00000000 		.4byte	0
 8836              	.LLST92:
 8837 0fe8 00000000 		.4byte	.LVL278
 8838 0fec 0F000000 		.4byte	.LVL280-1
 8839 0ff0 0100     		.2byte	0x1
 8840 0ff2 51       		.byte	0x51
 8841 0ff3 0F000000 		.4byte	.LVL280-1
 8842 0ff7 4C000000 		.4byte	.LFE35
 8843 0ffb 0400     		.2byte	0x4
 8844 0ffd F3       		.byte	0xf3
 8845 0ffe 01       		.uleb128 0x1
 8846 0fff 51       		.byte	0x51
 8847 1000 9F       		.byte	0x9f
 8848 1001 00000000 		.4byte	0
 8849 1005 00000000 		.4byte	0
 8850              	.LLST93:
 8851 1009 26000000 		.4byte	.LVL283
 8852 100d 45000000 		.4byte	.LVL289-1
 8853 1011 0100     		.2byte	0x1
 8854 1013 50       		.byte	0x50
 8855 1014 00000000 		.4byte	0
 8856 1018 00000000 		.4byte	0
 8857              	.LLST94:
 8858 101c 22000000 		.4byte	.LVL282
 8859 1020 46000000 		.4byte	.LVL290
 8860 1024 0100     		.2byte	0x1
 8861 1026 55       		.byte	0x55
 8862 1027 00000000 		.4byte	0
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 219


 8863 102b 00000000 		.4byte	0
 8864              	.LLST95:
 8865 102f 32000000 		.4byte	.LVL284
 8866 1033 38000000 		.4byte	.LVL285
 8867 1037 0100     		.2byte	0x1
 8868 1039 51       		.byte	0x51
 8869 103a 3A000000 		.4byte	.LVL286
 8870 103e 3C000000 		.4byte	.LVL287
 8871 1042 0100     		.2byte	0x1
 8872 1044 51       		.byte	0x51
 8873 1045 3C000000 		.4byte	.LVL287
 8874 1049 40000000 		.4byte	.LVL288
 8875 104d 0100     		.2byte	0x1
 8876 104f 53       		.byte	0x53
 8877 1050 40000000 		.4byte	.LVL288
 8878 1054 45000000 		.4byte	.LVL289-1
 8879 1058 0100     		.2byte	0x1
 8880 105a 51       		.byte	0x51
 8881 105b 00000000 		.4byte	0
 8882 105f 00000000 		.4byte	0
 8883              	.LLST96:
 8884 1063 00000000 		.4byte	.LVL291
 8885 1067 0A000000 		.4byte	.LVL292
 8886 106b 0100     		.2byte	0x1
 8887 106d 50       		.byte	0x50
 8888 106e 0A000000 		.4byte	.LVL292
 8889 1072 2C000000 		.4byte	.LFE36
 8890 1076 0400     		.2byte	0x4
 8891 1078 F3       		.byte	0xf3
 8892 1079 01       		.uleb128 0x1
 8893 107a 50       		.byte	0x50
 8894 107b 9F       		.byte	0x9f
 8895 107c 00000000 		.4byte	0
 8896 1080 00000000 		.4byte	0
 8897              	.LLST97:
 8898 1084 24000000 		.4byte	.LVL294
 8899 1088 26000000 		.4byte	.LVL295
 8900 108c 0100     		.2byte	0x1
 8901 108e 50       		.byte	0x50
 8902 108f 00000000 		.4byte	0
 8903 1093 00000000 		.4byte	0
 8904              	.LLST98:
 8905 1097 00000000 		.4byte	.LVL296
 8906 109b 06000000 		.4byte	.LVL297
 8907 109f 0100     		.2byte	0x1
 8908 10a1 50       		.byte	0x50
 8909 10a2 06000000 		.4byte	.LVL297
 8910 10a6 26000000 		.4byte	.LVL301
 8911 10aa 0100     		.2byte	0x1
 8912 10ac 54       		.byte	0x54
 8913 10ad 00000000 		.4byte	0
 8914 10b1 00000000 		.4byte	0
 8915              	.LLST99:
 8916 10b5 2A000000 		.4byte	.LVL306
 8917 10b9 62000000 		.4byte	.LVL312
 8918 10bd 0100     		.2byte	0x1
 8919 10bf 51       		.byte	0x51
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 220


 8920 10c0 62000000 		.4byte	.LVL312
 8921 10c4 74000000 		.4byte	.LVL316
 8922 10c8 0300     		.2byte	0x3
 8923 10ca 71       		.byte	0x71
 8924 10cb 1A       		.sleb128 26
 8925 10cc 9F       		.byte	0x9f
 8926 10cd 00000000 		.4byte	0
 8927 10d1 00000000 		.4byte	0
 8928              	.LLST100:
 8929 10d5 12000000 		.4byte	.LVL305
 8930 10d9 A0000000 		.4byte	.LVL321
 8931 10dd 0100     		.2byte	0x1
 8932 10df 54       		.byte	0x54
 8933 10e0 00000000 		.4byte	0
 8934 10e4 00000000 		.4byte	0
 8935              	.LLST101:
 8936 10e8 32000000 		.4byte	.LVL307
 8937 10ec 50000000 		.4byte	.LVL309
 8938 10f0 0100     		.2byte	0x1
 8939 10f2 53       		.byte	0x53
 8940 10f3 50000000 		.4byte	.LVL309
 8941 10f7 58000000 		.4byte	.LVL310
 8942 10fb 0100     		.2byte	0x1
 8943 10fd 50       		.byte	0x50
 8944 10fe 58000000 		.4byte	.LVL310
 8945 1102 5A000000 		.4byte	.LVL311
 8946 1106 0100     		.2byte	0x1
 8947 1108 53       		.byte	0x53
 8948 1109 5A000000 		.4byte	.LVL311
 8949 110d 74000000 		.4byte	.LVL316
 8950 1111 0100     		.2byte	0x1
 8951 1113 50       		.byte	0x50
 8952 1114 74000000 		.4byte	.LVL316
 8953 1118 7C000000 		.4byte	.LVL317
 8954 111c 0100     		.2byte	0x1
 8955 111e 53       		.byte	0x53
 8956 111f 7C000000 		.4byte	.LVL317
 8957 1123 7E000000 		.4byte	.LVL318
 8958 1127 0200     		.2byte	0x2
 8959 1129 72       		.byte	0x72
 8960 112a 00       		.sleb128 0
 8961 112b 00000000 		.4byte	0
 8962 112f 00000000 		.4byte	0
 8963              	.LLST102:
 8964 1133 04000000 		.4byte	.LVL302
 8965 1137 68000000 		.4byte	.LVL313
 8966 113b 0200     		.2byte	0x2
 8967 113d 30       		.byte	0x30
 8968 113e 9F       		.byte	0x9f
 8969 113f 6E000000 		.4byte	.LVL314
 8970 1143 70000000 		.4byte	.LVL315
 8971 1147 0100     		.2byte	0x1
 8972 1149 52       		.byte	0x52
 8973 114a 00000000 		.4byte	0
 8974 114e 00000000 		.4byte	0
 8975              	.LLST103:
 8976 1152 00000000 		.4byte	.LVL322
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 221


 8977 1156 25000000 		.4byte	.LVL324-1
 8978 115a 0100     		.2byte	0x1
 8979 115c 50       		.byte	0x50
 8980 115d 25000000 		.4byte	.LVL324-1
 8981 1161 A0000000 		.4byte	.LVL337
 8982 1165 0100     		.2byte	0x1
 8983 1167 54       		.byte	0x54
 8984 1168 A0000000 		.4byte	.LVL337
 8985 116c B6000000 		.4byte	.LVL340
 8986 1170 0400     		.2byte	0x4
 8987 1172 F3       		.byte	0xf3
 8988 1173 01       		.uleb128 0x1
 8989 1174 50       		.byte	0x50
 8990 1175 9F       		.byte	0x9f
 8991 1176 B6000000 		.4byte	.LVL340
 8992 117a B8000000 		.4byte	.LVL341
 8993 117e 0100     		.2byte	0x1
 8994 1180 50       		.byte	0x50
 8995 1181 B8000000 		.4byte	.LVL341
 8996 1185 BC000000 		.4byte	.LVL342
 8997 1189 0100     		.2byte	0x1
 8998 118b 54       		.byte	0x54
 8999 118c BC000000 		.4byte	.LVL342
 9000 1190 D8000000 		.4byte	.LFE10
 9001 1194 0400     		.2byte	0x4
 9002 1196 F3       		.byte	0xf3
 9003 1197 01       		.uleb128 0x1
 9004 1198 50       		.byte	0x50
 9005 1199 9F       		.byte	0x9f
 9006 119a 00000000 		.4byte	0
 9007 119e 00000000 		.4byte	0
 9008              	.LLST104:
 9009 11a2 28000000 		.4byte	.LVL325
 9010 11a6 44000000 		.4byte	.LVL331
 9011 11aa 0200     		.2byte	0x2
 9012 11ac 91       		.byte	0x91
 9013 11ad 64       		.sleb128 -28
 9014 11ae 00000000 		.4byte	0
 9015 11b2 00000000 		.4byte	0
 9016              	.LLST105:
 9017 11b6 4C000000 		.4byte	.LVL332
 9018 11ba 54000000 		.4byte	.LVL333
 9019 11be 0100     		.2byte	0x1
 9020 11c0 53       		.byte	0x53
 9021 11c1 54000000 		.4byte	.LVL333
 9022 11c5 58000000 		.4byte	.LVL334
 9023 11c9 0700     		.2byte	0x7
 9024 11cb 0C       		.byte	0xc
 9025 11cc 0C0F0340 		.4byte	0x40030f0c
 9026 11d0 06       		.byte	0x6
 9027 11d1 9F       		.byte	0x9f
 9028 11d2 00000000 		.4byte	0
 9029 11d6 00000000 		.4byte	0
 9030              	.LLST106:
 9031 11da 06000000 		.4byte	.LVL323
 9032 11de 30000000 		.4byte	.LVL327
 9033 11e2 0200     		.2byte	0x2
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 222


 9034 11e4 30       		.byte	0x30
 9035 11e5 9F       		.byte	0x9f
 9036 11e6 30000000 		.4byte	.LVL327
 9037 11ea 38000000 		.4byte	.LVL329
 9038 11ee 0200     		.2byte	0x2
 9039 11f0 31       		.byte	0x31
 9040 11f1 9F       		.byte	0x9f
 9041 11f2 38000000 		.4byte	.LVL329
 9042 11f6 3A000000 		.4byte	.LVL330
 9043 11fa 0200     		.2byte	0x2
 9044 11fc 30       		.byte	0x30
 9045 11fd 9F       		.byte	0x9f
 9046 11fe 3A000000 		.4byte	.LVL330
 9047 1202 B6000000 		.4byte	.LVL340
 9048 1206 0100     		.2byte	0x1
 9049 1208 56       		.byte	0x56
 9050 1209 B6000000 		.4byte	.LVL340
 9051 120d BC000000 		.4byte	.LVL342
 9052 1211 0200     		.2byte	0x2
 9053 1213 30       		.byte	0x30
 9054 1214 9F       		.byte	0x9f
 9055 1215 00000000 		.4byte	0
 9056 1219 00000000 		.4byte	0
 9057              	.LLST107:
 9058 121d 00000000 		.4byte	.LVL343
 9059 1221 08000000 		.4byte	.LVL344
 9060 1225 0100     		.2byte	0x1
 9061 1227 50       		.byte	0x50
 9062 1228 08000000 		.4byte	.LVL344
 9063 122c 14000000 		.4byte	.LFE45
 9064 1230 0400     		.2byte	0x4
 9065 1232 F3       		.byte	0xf3
 9066 1233 01       		.uleb128 0x1
 9067 1234 50       		.byte	0x50
 9068 1235 9F       		.byte	0x9f
 9069 1236 00000000 		.4byte	0
 9070 123a 00000000 		.4byte	0
 9071              	.LLST108:
 9072 123e 00000000 		.4byte	.LVL346
 9073 1242 12000000 		.4byte	.LVL348
 9074 1246 0100     		.2byte	0x1
 9075 1248 50       		.byte	0x50
 9076 1249 12000000 		.4byte	.LVL348
 9077 124d 40000000 		.4byte	.LVL354
 9078 1251 0100     		.2byte	0x1
 9079 1253 54       		.byte	0x54
 9080 1254 00000000 		.4byte	0
 9081 1258 00000000 		.4byte	0
 9082              	.LLST109:
 9083 125c 04000000 		.4byte	.LVL347
 9084 1260 40000000 		.4byte	.LVL353
 9085 1264 0200     		.2byte	0x2
 9086 1266 30       		.byte	0x30
 9087 1267 9F       		.byte	0x9f
 9088 1268 40000000 		.4byte	.LVL353
 9089 126c 48000000 		.4byte	.LFE12
 9090 1270 0100     		.2byte	0x1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 223


 9091 1272 50       		.byte	0x50
 9092 1273 00000000 		.4byte	0
 9093 1277 00000000 		.4byte	0
 9094              	.LLST110:
 9095 127b 00000000 		.4byte	.LVL355
 9096 127f 11000000 		.4byte	.LVL357-1
 9097 1283 0100     		.2byte	0x1
 9098 1285 50       		.byte	0x50
 9099 1286 11000000 		.4byte	.LVL357-1
 9100 128a 8A000000 		.4byte	.LVL369
 9101 128e 0100     		.2byte	0x1
 9102 1290 54       		.byte	0x54
 9103 1291 8A000000 		.4byte	.LVL369
 9104 1295 8C000000 		.4byte	.LVL370
 9105 1299 0100     		.2byte	0x1
 9106 129b 50       		.byte	0x50
 9107 129c 8C000000 		.4byte	.LVL370
 9108 12a0 8E000000 		.4byte	.LVL371
 9109 12a4 0100     		.2byte	0x1
 9110 12a6 54       		.byte	0x54
 9111 12a7 8E000000 		.4byte	.LVL371
 9112 12ab 90000000 		.4byte	.LVL372
 9113 12af 0100     		.2byte	0x1
 9114 12b1 50       		.byte	0x50
 9115 12b2 90000000 		.4byte	.LVL372
 9116 12b6 90000000 		.4byte	.LVL373
 9117 12ba 0100     		.2byte	0x1
 9118 12bc 54       		.byte	0x54
 9119 12bd 90000000 		.4byte	.LVL373
 9120 12c1 9C000000 		.4byte	.LFE17
 9121 12c5 0400     		.2byte	0x4
 9122 12c7 F3       		.byte	0xf3
 9123 12c8 01       		.uleb128 0x1
 9124 12c9 50       		.byte	0x50
 9125 12ca 9F       		.byte	0x9f
 9126 12cb 00000000 		.4byte	0
 9127 12cf 00000000 		.4byte	0
 9128              	.LLST111:
 9129 12d3 00000000 		.4byte	.LVL355
 9130 12d7 11000000 		.4byte	.LVL357-1
 9131 12db 0100     		.2byte	0x1
 9132 12dd 51       		.byte	0x51
 9133 12de 11000000 		.4byte	.LVL357-1
 9134 12e2 62000000 		.4byte	.LVL362
 9135 12e6 0100     		.2byte	0x1
 9136 12e8 55       		.byte	0x55
 9137 12e9 62000000 		.4byte	.LVL362
 9138 12ed 80000000 		.4byte	.LVL367
 9139 12f1 0400     		.2byte	0x4
 9140 12f3 F3       		.byte	0xf3
 9141 12f4 01       		.uleb128 0x1
 9142 12f5 51       		.byte	0x51
 9143 12f6 9F       		.byte	0x9f
 9144 12f7 80000000 		.4byte	.LVL367
 9145 12fb 82000000 		.4byte	.LVL368
 9146 12ff 0100     		.2byte	0x1
 9147 1301 55       		.byte	0x55
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 224


 9148 1302 82000000 		.4byte	.LVL368
 9149 1306 8A000000 		.4byte	.LVL369
 9150 130a 0400     		.2byte	0x4
 9151 130c F3       		.byte	0xf3
 9152 130d 01       		.uleb128 0x1
 9153 130e 51       		.byte	0x51
 9154 130f 9F       		.byte	0x9f
 9155 1310 8A000000 		.4byte	.LVL369
 9156 1314 90000000 		.4byte	.LVL372
 9157 1318 0100     		.2byte	0x1
 9158 131a 51       		.byte	0x51
 9159 131b 90000000 		.4byte	.LVL372
 9160 131f 9C000000 		.4byte	.LFE17
 9161 1323 0400     		.2byte	0x4
 9162 1325 F3       		.byte	0xf3
 9163 1326 01       		.uleb128 0x1
 9164 1327 51       		.byte	0x51
 9165 1328 9F       		.byte	0x9f
 9166 1329 00000000 		.4byte	0
 9167 132d 00000000 		.4byte	0
 9168              	.LLST112:
 9169 1331 06000000 		.4byte	.LVL356
 9170 1335 62000000 		.4byte	.LVL362
 9171 1339 0300     		.2byte	0x3
 9172 133b 08       		.byte	0x8
 9173 133c FF       		.byte	0xff
 9174 133d 9F       		.byte	0x9f
 9175 133e 62000000 		.4byte	.LVL362
 9176 1342 80000000 		.4byte	.LVL367
 9177 1346 0100     		.2byte	0x1
 9178 1348 55       		.byte	0x55
 9179 1349 80000000 		.4byte	.LVL367
 9180 134d 82000000 		.4byte	.LVL368
 9181 1351 0300     		.2byte	0x3
 9182 1353 08       		.byte	0x8
 9183 1354 FF       		.byte	0xff
 9184 1355 9F       		.byte	0x9f
 9185 1356 82000000 		.4byte	.LVL368
 9186 135a 8A000000 		.4byte	.LVL369
 9187 135e 0100     		.2byte	0x1
 9188 1360 55       		.byte	0x55
 9189 1361 8A000000 		.4byte	.LVL369
 9190 1365 90000000 		.4byte	.LVL372
 9191 1369 0300     		.2byte	0x3
 9192 136b 08       		.byte	0x8
 9193 136c FF       		.byte	0xff
 9194 136d 9F       		.byte	0x9f
 9195 136e 00000000 		.4byte	0
 9196 1372 00000000 		.4byte	0
 9197              	.LLST113:
 9198 1376 12000000 		.4byte	.LVL357
 9199 137a 39000000 		.4byte	.LVL358-1
 9200 137e 0100     		.2byte	0x1
 9201 1380 50       		.byte	0x50
 9202 1381 44000000 		.4byte	.LVL360
 9203 1385 59000000 		.4byte	.LVL361-1
 9204 1389 0100     		.2byte	0x1
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 225


 9205 138b 50       		.byte	0x50
 9206 138c 00000000 		.4byte	0
 9207 1390 00000000 		.4byte	0
 9208              	.LLST114:
 9209 1394 06000000 		.4byte	.LVL356
 9210 1398 90000000 		.4byte	.LVL372
 9211 139c 0200     		.2byte	0x2
 9212 139e 30       		.byte	0x30
 9213 139f 9F       		.byte	0x9f
 9214 13a0 90000000 		.4byte	.LVL372
 9215 13a4 9C000000 		.4byte	.LFE17
 9216 13a8 0100     		.2byte	0x1
 9217 13aa 50       		.byte	0x50
 9218 13ab 00000000 		.4byte	0
 9219 13af 00000000 		.4byte	0
 9220              	.LLST115:
 9221 13b3 00000000 		.4byte	.LVL374
 9222 13b7 1A000000 		.4byte	.LVL375
 9223 13bb 0100     		.2byte	0x1
 9224 13bd 50       		.byte	0x50
 9225 13be 1A000000 		.4byte	.LVL375
 9226 13c2 4C000000 		.4byte	.LFE46
 9227 13c6 0400     		.2byte	0x4
 9228 13c8 F3       		.byte	0xf3
 9229 13c9 01       		.uleb128 0x1
 9230 13ca 50       		.byte	0x50
 9231 13cb 9F       		.byte	0x9f
 9232 13cc 00000000 		.4byte	0
 9233 13d0 00000000 		.4byte	0
 9234              	.LLST116:
 9235 13d4 00000000 		.4byte	.LVL379
 9236 13d8 02000000 		.4byte	.LVL380
 9237 13dc 0100     		.2byte	0x1
 9238 13de 50       		.byte	0x50
 9239 13df 02000000 		.4byte	.LVL380
 9240 13e3 10000000 		.4byte	.LFE53
 9241 13e7 0400     		.2byte	0x4
 9242 13e9 F3       		.byte	0xf3
 9243 13ea 01       		.uleb128 0x1
 9244 13eb 50       		.byte	0x50
 9245 13ec 9F       		.byte	0x9f
 9246 13ed 00000000 		.4byte	0
 9247 13f1 00000000 		.4byte	0
 9248              	.LLST117:
 9249 13f5 0C000000 		.4byte	.LVL383
 9250 13f9 1C000000 		.4byte	.LVL386
 9251 13fd 0100     		.2byte	0x1
 9252 13ff 54       		.byte	0x54
 9253 1400 1E000000 		.4byte	.LVL387
 9254 1404 22000000 		.4byte	.LVL388
 9255 1408 0100     		.2byte	0x1
 9256 140a 54       		.byte	0x54
 9257 140b 00000000 		.4byte	0
 9258 140f 00000000 		.4byte	0
 9259              	.LLST118:
 9260 1413 02000000 		.4byte	.LVL389
 9261 1417 06000000 		.4byte	.LVL390
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 226


 9262 141b 0200     		.2byte	0x2
 9263 141d 30       		.byte	0x30
 9264 141e 9F       		.byte	0x9f
 9265 141f 06000000 		.4byte	.LVL390
 9266 1423 1B000000 		.4byte	.LVL392-1
 9267 1427 0100     		.2byte	0x1
 9268 1429 53       		.byte	0x53
 9269 142a 00000000 		.4byte	0
 9270 142e 00000000 		.4byte	0
 9271              	.LLST119:
 9272 1432 00000000 		.4byte	.LVL399
 9273 1436 06000000 		.4byte	.LVL400
 9274 143a 0100     		.2byte	0x1
 9275 143c 50       		.byte	0x50
 9276 143d 06000000 		.4byte	.LVL400
 9277 1441 10000000 		.4byte	.LFE60
 9278 1445 0400     		.2byte	0x4
 9279 1447 F3       		.byte	0xf3
 9280 1448 01       		.uleb128 0x1
 9281 1449 50       		.byte	0x50
 9282 144a 9F       		.byte	0x9f
 9283 144b 00000000 		.4byte	0
 9284 144f 00000000 		.4byte	0
 9285              	.LLST120:
 9286 1453 00000000 		.4byte	.LVL401
 9287 1457 02000000 		.4byte	.LVL402
 9288 145b 0100     		.2byte	0x1
 9289 145d 50       		.byte	0x50
 9290 145e 02000000 		.4byte	.LVL402
 9291 1462 0C000000 		.4byte	.LFE61
 9292 1466 0400     		.2byte	0x4
 9293 1468 F3       		.byte	0xf3
 9294 1469 01       		.uleb128 0x1
 9295 146a 50       		.byte	0x50
 9296 146b 9F       		.byte	0x9f
 9297 146c 00000000 		.4byte	0
 9298 1470 00000000 		.4byte	0
 9299              	.LLST121:
 9300 1474 00000000 		.4byte	.LVL404
 9301 1478 0A000000 		.4byte	.LVL406
 9302 147c 0100     		.2byte	0x1
 9303 147e 50       		.byte	0x50
 9304 147f 0A000000 		.4byte	.LVL406
 9305 1483 20000000 		.4byte	.LFE64
 9306 1487 0400     		.2byte	0x4
 9307 1489 F3       		.byte	0xf3
 9308 148a 01       		.uleb128 0x1
 9309 148b 50       		.byte	0x50
 9310 148c 9F       		.byte	0x9f
 9311 148d 00000000 		.4byte	0
 9312 1491 00000000 		.4byte	0
 9313              	.LLST122:
 9314 1495 08000000 		.4byte	.LVL405
 9315 1499 12000000 		.4byte	.LVL407
 9316 149d 0100     		.2byte	0x1
 9317 149f 52       		.byte	0x52
 9318 14a0 12000000 		.4byte	.LVL407
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 227


 9319 14a4 20000000 		.4byte	.LFE64
 9320 14a8 0100     		.2byte	0x1
 9321 14aa 50       		.byte	0x50
 9322 14ab 00000000 		.4byte	0
 9323 14af 00000000 		.4byte	0
 9324              	.LLST123:
 9325 14b3 00000000 		.4byte	.LVL408
 9326 14b7 0A000000 		.4byte	.LVL410
 9327 14bb 0100     		.2byte	0x1
 9328 14bd 50       		.byte	0x50
 9329 14be 0A000000 		.4byte	.LVL410
 9330 14c2 20000000 		.4byte	.LFE65
 9331 14c6 0400     		.2byte	0x4
 9332 14c8 F3       		.byte	0xf3
 9333 14c9 01       		.uleb128 0x1
 9334 14ca 50       		.byte	0x50
 9335 14cb 9F       		.byte	0x9f
 9336 14cc 00000000 		.4byte	0
 9337 14d0 00000000 		.4byte	0
 9338              	.LLST124:
 9339 14d4 08000000 		.4byte	.LVL409
 9340 14d8 12000000 		.4byte	.LVL411
 9341 14dc 0100     		.2byte	0x1
 9342 14de 52       		.byte	0x52
 9343 14df 12000000 		.4byte	.LVL411
 9344 14e3 20000000 		.4byte	.LFE65
 9345 14e7 0100     		.2byte	0x1
 9346 14e9 50       		.byte	0x50
 9347 14ea 00000000 		.4byte	0
 9348 14ee 00000000 		.4byte	0
 9349              	.LLST125:
 9350 14f2 00000000 		.4byte	.LVL412
 9351 14f6 0A000000 		.4byte	.LVL414
 9352 14fa 0100     		.2byte	0x1
 9353 14fc 50       		.byte	0x50
 9354 14fd 0A000000 		.4byte	.LVL414
 9355 1501 20000000 		.4byte	.LFE66
 9356 1505 0400     		.2byte	0x4
 9357 1507 F3       		.byte	0xf3
 9358 1508 01       		.uleb128 0x1
 9359 1509 50       		.byte	0x50
 9360 150a 9F       		.byte	0x9f
 9361 150b 00000000 		.4byte	0
 9362 150f 00000000 		.4byte	0
 9363              	.LLST126:
 9364 1513 08000000 		.4byte	.LVL413
 9365 1517 12000000 		.4byte	.LVL415
 9366 151b 0100     		.2byte	0x1
 9367 151d 52       		.byte	0x52
 9368 151e 12000000 		.4byte	.LVL415
 9369 1522 20000000 		.4byte	.LFE66
 9370 1526 0100     		.2byte	0x1
 9371 1528 50       		.byte	0x50
 9372 1529 00000000 		.4byte	0
 9373 152d 00000000 		.4byte	0
 9374              	.LLST127:
 9375 1531 00000000 		.4byte	.LVL416
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 228


 9376 1535 08000000 		.4byte	.LVL417
 9377 1539 0100     		.2byte	0x1
 9378 153b 50       		.byte	0x50
 9379 153c 08000000 		.4byte	.LVL417
 9380 1540 1C000000 		.4byte	.LVL421
 9381 1544 0400     		.2byte	0x4
 9382 1546 F3       		.byte	0xf3
 9383 1547 01       		.uleb128 0x1
 9384 1548 50       		.byte	0x50
 9385 1549 9F       		.byte	0x9f
 9386 154a 1C000000 		.4byte	.LVL421
 9387 154e 22000000 		.4byte	.LVL422
 9388 1552 0100     		.2byte	0x1
 9389 1554 50       		.byte	0x50
 9390 1555 22000000 		.4byte	.LVL422
 9391 1559 36000000 		.4byte	.LVL426
 9392 155d 0400     		.2byte	0x4
 9393 155f F3       		.byte	0xf3
 9394 1560 01       		.uleb128 0x1
 9395 1561 50       		.byte	0x50
 9396 1562 9F       		.byte	0x9f
 9397 1563 36000000 		.4byte	.LVL426
 9398 1567 3C000000 		.4byte	.LVL427
 9399 156b 0100     		.2byte	0x1
 9400 156d 50       		.byte	0x50
 9401 156e 3C000000 		.4byte	.LVL427
 9402 1572 50000000 		.4byte	.LVL431
 9403 1576 0400     		.2byte	0x4
 9404 1578 F3       		.byte	0xf3
 9405 1579 01       		.uleb128 0x1
 9406 157a 50       		.byte	0x50
 9407 157b 9F       		.byte	0x9f
 9408 157c 50000000 		.4byte	.LVL431
 9409 1580 52000000 		.4byte	.LVL432
 9410 1584 0100     		.2byte	0x1
 9411 1586 50       		.byte	0x50
 9412 1587 52000000 		.4byte	.LVL432
 9413 158b 68000000 		.4byte	.LFE67
 9414 158f 0400     		.2byte	0x4
 9415 1591 F3       		.byte	0xf3
 9416 1592 01       		.uleb128 0x1
 9417 1593 50       		.byte	0x50
 9418 1594 9F       		.byte	0x9f
 9419 1595 00000000 		.4byte	0
 9420 1599 00000000 		.4byte	0
 9421              	.LLST128:
 9422 159d 00000000 		.4byte	.LVL416
 9423 15a1 10000000 		.4byte	.LVL419
 9424 15a5 0100     		.2byte	0x1
 9425 15a7 51       		.byte	0x51
 9426 15a8 10000000 		.4byte	.LVL419
 9427 15ac 1C000000 		.4byte	.LVL421
 9428 15b0 0400     		.2byte	0x4
 9429 15b2 F3       		.byte	0xf3
 9430 15b3 01       		.uleb128 0x1
 9431 15b4 51       		.byte	0x51
 9432 15b5 9F       		.byte	0x9f
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 229


 9433 15b6 1C000000 		.4byte	.LVL421
 9434 15ba 2A000000 		.4byte	.LVL424
 9435 15be 0100     		.2byte	0x1
 9436 15c0 51       		.byte	0x51
 9437 15c1 2A000000 		.4byte	.LVL424
 9438 15c5 36000000 		.4byte	.LVL426
 9439 15c9 0400     		.2byte	0x4
 9440 15cb F3       		.byte	0xf3
 9441 15cc 01       		.uleb128 0x1
 9442 15cd 51       		.byte	0x51
 9443 15ce 9F       		.byte	0x9f
 9444 15cf 36000000 		.4byte	.LVL426
 9445 15d3 44000000 		.4byte	.LVL429
 9446 15d7 0100     		.2byte	0x1
 9447 15d9 51       		.byte	0x51
 9448 15da 44000000 		.4byte	.LVL429
 9449 15de 50000000 		.4byte	.LVL431
 9450 15e2 0400     		.2byte	0x4
 9451 15e4 F3       		.byte	0xf3
 9452 15e5 01       		.uleb128 0x1
 9453 15e6 51       		.byte	0x51
 9454 15e7 9F       		.byte	0x9f
 9455 15e8 50000000 		.4byte	.LVL431
 9456 15ec 55000000 		.4byte	.LVL433-1
 9457 15f0 0100     		.2byte	0x1
 9458 15f2 51       		.byte	0x51
 9459 15f3 55000000 		.4byte	.LVL433-1
 9460 15f7 68000000 		.4byte	.LFE67
 9461 15fb 0400     		.2byte	0x4
 9462 15fd F3       		.byte	0xf3
 9463 15fe 01       		.uleb128 0x1
 9464 15ff 51       		.byte	0x51
 9465 1600 9F       		.byte	0x9f
 9466 1601 00000000 		.4byte	0
 9467 1605 00000000 		.4byte	0
 9468              	.LLST129:
 9469 1609 0E000000 		.4byte	.LVL418
 9470 160d 18000000 		.4byte	.LVL420
 9471 1611 0100     		.2byte	0x1
 9472 1613 52       		.byte	0x52
 9473 1614 18000000 		.4byte	.LVL420
 9474 1618 1C000000 		.4byte	.LVL421
 9475 161c 0100     		.2byte	0x1
 9476 161e 51       		.byte	0x51
 9477 161f 28000000 		.4byte	.LVL423
 9478 1623 32000000 		.4byte	.LVL425
 9479 1627 0100     		.2byte	0x1
 9480 1629 52       		.byte	0x52
 9481 162a 32000000 		.4byte	.LVL425
 9482 162e 36000000 		.4byte	.LVL426
 9483 1632 0100     		.2byte	0x1
 9484 1634 51       		.byte	0x51
 9485 1635 42000000 		.4byte	.LVL428
 9486 1639 4C000000 		.4byte	.LVL430
 9487 163d 0100     		.2byte	0x1
 9488 163f 52       		.byte	0x52
 9489 1640 4C000000 		.4byte	.LVL430
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 230


 9490 1644 50000000 		.4byte	.LVL431
 9491 1648 0100     		.2byte	0x1
 9492 164a 51       		.byte	0x51
 9493 164b 00000000 		.4byte	0
 9494 164f 00000000 		.4byte	0
 9495              		.section	.debug_aranges,"",%progbits
 9496 0000 2C020000 		.4byte	0x22c
 9497 0004 0200     		.2byte	0x2
 9498 0006 00000000 		.4byte	.Ldebug_info0
 9499 000a 04       		.byte	0x4
 9500 000b 00       		.byte	0
 9501 000c 0000     		.2byte	0
 9502 000e 0000     		.2byte	0
 9503 0010 00000000 		.4byte	.LFB1
 9504 0014 14000000 		.4byte	.LFE1-.LFB1
 9505 0018 00000000 		.4byte	.LFB4
 9506 001c 14000000 		.4byte	.LFE4-.LFB4
 9507 0020 00000000 		.4byte	.LFB2
 9508 0024 18000000 		.4byte	.LFE2-.LFB2
 9509 0028 00000000 		.4byte	.LFB5
 9510 002c 14000000 		.4byte	.LFE5-.LFB5
 9511 0030 00000000 		.4byte	.LFB6
 9512 0034 7C000000 		.4byte	.LFE6-.LFB6
 9513 0038 00000000 		.4byte	.LFB7
 9514 003c 34000000 		.4byte	.LFE7-.LFB7
 9515 0040 00000000 		.4byte	.LFB8
 9516 0044 2C000000 		.4byte	.LFE8-.LFB8
 9517 0048 00000000 		.4byte	.LFB9
 9518 004c 24000000 		.4byte	.LFE9-.LFB9
 9519 0050 00000000 		.4byte	.LFB11
 9520 0054 24000000 		.4byte	.LFE11-.LFB11
 9521 0058 00000000 		.4byte	.LFB13
 9522 005c 14000000 		.4byte	.LFE13-.LFB13
 9523 0060 00000000 		.4byte	.LFB14
 9524 0064 14000000 		.4byte	.LFE14-.LFB14
 9525 0068 00000000 		.4byte	.LFB15
 9526 006c 60000000 		.4byte	.LFE15-.LFB15
 9527 0070 00000000 		.4byte	.LFB16
 9528 0074 74010000 		.4byte	.LFE16-.LFB16
 9529 0078 00000000 		.4byte	.LFB19
 9530 007c 28000000 		.4byte	.LFE19-.LFB19
 9531 0080 00000000 		.4byte	.LFB21
 9532 0084 38000000 		.4byte	.LFE21-.LFB21
 9533 0088 00000000 		.4byte	.LFB24
 9534 008c 34000000 		.4byte	.LFE24-.LFB24
 9535 0090 00000000 		.4byte	.LFB26
 9536 0094 60000000 		.4byte	.LFE26-.LFB26
 9537 0098 00000000 		.4byte	.LFB28
 9538 009c 14000000 		.4byte	.LFE28-.LFB28
 9539 00a0 00000000 		.4byte	.LFB29
 9540 00a4 10000000 		.4byte	.LFE29-.LFB29
 9541 00a8 00000000 		.4byte	.LFB30
 9542 00ac 0C000000 		.4byte	.LFE30-.LFB30
 9543 00b0 00000000 		.4byte	.LFB37
 9544 00b4 14000000 		.4byte	.LFE37-.LFB37
 9545 00b8 00000000 		.4byte	.LFB38
 9546 00bc 18000000 		.4byte	.LFE38-.LFB38
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 231


 9547 00c0 00000000 		.4byte	.LFB39
 9548 00c4 14000000 		.4byte	.LFE39-.LFB39
 9549 00c8 00000000 		.4byte	.LFB40
 9550 00cc 14000000 		.4byte	.LFE40-.LFB40
 9551 00d0 00000000 		.4byte	.LFB41
 9552 00d4 14000000 		.4byte	.LFE41-.LFB41
 9553 00d8 00000000 		.4byte	.LFB42
 9554 00dc 04000000 		.4byte	.LFE42-.LFB42
 9555 00e0 00000000 		.4byte	.LFB18
 9556 00e4 40000000 		.4byte	.LFE18-.LFB18
 9557 00e8 00000000 		.4byte	.LFB22
 9558 00ec 2C000000 		.4byte	.LFE22-.LFB22
 9559 00f0 00000000 		.4byte	.LFB23
 9560 00f4 2C000000 		.4byte	.LFE23-.LFB23
 9561 00f8 00000000 		.4byte	.LFB20
 9562 00fc A4000000 		.4byte	.LFE20-.LFB20
 9563 0100 00000000 		.4byte	.LFB27
 9564 0104 58000000 		.4byte	.LFE27-.LFB27
 9565 0108 00000000 		.4byte	.LFB25
 9566 010c 10010000 		.4byte	.LFE25-.LFB25
 9567 0110 00000000 		.4byte	.LFB31
 9568 0114 20000000 		.4byte	.LFE31-.LFB31
 9569 0118 00000000 		.4byte	.LFB32
 9570 011c 1C000000 		.4byte	.LFE32-.LFB32
 9571 0120 00000000 		.4byte	.LFB33
 9572 0124 22000000 		.4byte	.LFE33-.LFB33
 9573 0128 00000000 		.4byte	.LFB34
 9574 012c 1E000000 		.4byte	.LFE34-.LFB34
 9575 0130 00000000 		.4byte	.LFB35
 9576 0134 4C000000 		.4byte	.LFE35-.LFB35
 9577 0138 00000000 		.4byte	.LFB36
 9578 013c 2C000000 		.4byte	.LFE36-.LFB36
 9579 0140 00000000 		.4byte	.LFB43
 9580 0144 18000000 		.4byte	.LFE43-.LFB43
 9581 0148 00000000 		.4byte	.LFB44
 9582 014c 30000000 		.4byte	.LFE44-.LFB44
 9583 0150 00000000 		.4byte	.LFB3
 9584 0154 CC000000 		.4byte	.LFE3-.LFB3
 9585 0158 00000000 		.4byte	.LFB10
 9586 015c D8000000 		.4byte	.LFE10-.LFB10
 9587 0160 00000000 		.4byte	.LFB45
 9588 0164 14000000 		.4byte	.LFE45-.LFB45
 9589 0168 00000000 		.4byte	.LFB12
 9590 016c 48000000 		.4byte	.LFE12-.LFB12
 9591 0170 00000000 		.4byte	.LFB17
 9592 0174 9C000000 		.4byte	.LFE17-.LFB17
 9593 0178 00000000 		.4byte	.LFB46
 9594 017c 4C000000 		.4byte	.LFE46-.LFB46
 9595 0180 00000000 		.4byte	.LFB50
 9596 0184 10000000 		.4byte	.LFE50-.LFB50
 9597 0188 00000000 		.4byte	.LFB51
 9598 018c 10000000 		.4byte	.LFE51-.LFB51
 9599 0190 00000000 		.4byte	.LFB49
 9600 0194 18000000 		.4byte	.LFE49-.LFB49
 9601 0198 00000000 		.4byte	.LFB52
 9602 019c 10000000 		.4byte	.LFE52-.LFB52
 9603 01a0 00000000 		.4byte	.LFB53
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 232


 9604 01a4 10000000 		.4byte	.LFE53-.LFB53
 9605 01a8 00000000 		.4byte	.LFB54
 9606 01ac 10000000 		.4byte	.LFE54-.LFB54
 9607 01b0 00000000 		.4byte	.LFB55
 9608 01b4 10000000 		.4byte	.LFE55-.LFB55
 9609 01b8 00000000 		.4byte	.LFB56
 9610 01bc 20000000 		.4byte	.LFE56-.LFB56
 9611 01c0 00000000 		.4byte	.LFB57
 9612 01c4 10000000 		.4byte	.LFE57-.LFB57
 9613 01c8 00000000 		.4byte	.LFB58
 9614 01cc 10000000 		.4byte	.LFE58-.LFB58
 9615 01d0 00000000 		.4byte	.LFB62
 9616 01d4 28000000 		.4byte	.LFE62-.LFB62
 9617 01d8 00000000 		.4byte	.LFB59
 9618 01dc 0C000000 		.4byte	.LFE59-.LFB59
 9619 01e0 00000000 		.4byte	.LFB48
 9620 01e4 44000000 		.4byte	.LFE48-.LFB48
 9621 01e8 00000000 		.4byte	.LFB47
 9622 01ec 20000000 		.4byte	.LFE47-.LFB47
 9623 01f0 00000000 		.4byte	.LFB60
 9624 01f4 10000000 		.4byte	.LFE60-.LFB60
 9625 01f8 00000000 		.4byte	.LFB61
 9626 01fc 0C000000 		.4byte	.LFE61-.LFB61
 9627 0200 00000000 		.4byte	.LFB63
 9628 0204 70000000 		.4byte	.LFE63-.LFB63
 9629 0208 00000000 		.4byte	.LFB64
 9630 020c 20000000 		.4byte	.LFE64-.LFB64
 9631 0210 00000000 		.4byte	.LFB65
 9632 0214 20000000 		.4byte	.LFE65-.LFB65
 9633 0218 00000000 		.4byte	.LFB66
 9634 021c 20000000 		.4byte	.LFE66-.LFB66
 9635 0220 00000000 		.4byte	.LFB67
 9636 0224 68000000 		.4byte	.LFE67-.LFB67
 9637 0228 00000000 		.4byte	0
 9638 022c 00000000 		.4byte	0
 9639              		.section	.debug_ranges,"",%progbits
 9640              	.Ldebug_ranges0:
 9641 0000 00000000 		.4byte	.LFB1
 9642 0004 14000000 		.4byte	.LFE1
 9643 0008 00000000 		.4byte	.LFB4
 9644 000c 14000000 		.4byte	.LFE4
 9645 0010 00000000 		.4byte	.LFB2
 9646 0014 18000000 		.4byte	.LFE2
 9647 0018 00000000 		.4byte	.LFB5
 9648 001c 14000000 		.4byte	.LFE5
 9649 0020 00000000 		.4byte	.LFB6
 9650 0024 7C000000 		.4byte	.LFE6
 9651 0028 00000000 		.4byte	.LFB7
 9652 002c 34000000 		.4byte	.LFE7
 9653 0030 00000000 		.4byte	.LFB8
 9654 0034 2C000000 		.4byte	.LFE8
 9655 0038 00000000 		.4byte	.LFB9
 9656 003c 24000000 		.4byte	.LFE9
 9657 0040 00000000 		.4byte	.LFB11
 9658 0044 24000000 		.4byte	.LFE11
 9659 0048 00000000 		.4byte	.LFB13
 9660 004c 14000000 		.4byte	.LFE13
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 233


 9661 0050 00000000 		.4byte	.LFB14
 9662 0054 14000000 		.4byte	.LFE14
 9663 0058 00000000 		.4byte	.LFB15
 9664 005c 60000000 		.4byte	.LFE15
 9665 0060 00000000 		.4byte	.LFB16
 9666 0064 74010000 		.4byte	.LFE16
 9667 0068 00000000 		.4byte	.LFB19
 9668 006c 28000000 		.4byte	.LFE19
 9669 0070 00000000 		.4byte	.LFB21
 9670 0074 38000000 		.4byte	.LFE21
 9671 0078 00000000 		.4byte	.LFB24
 9672 007c 34000000 		.4byte	.LFE24
 9673 0080 00000000 		.4byte	.LFB26
 9674 0084 60000000 		.4byte	.LFE26
 9675 0088 00000000 		.4byte	.LFB28
 9676 008c 14000000 		.4byte	.LFE28
 9677 0090 00000000 		.4byte	.LFB29
 9678 0094 10000000 		.4byte	.LFE29
 9679 0098 00000000 		.4byte	.LFB30
 9680 009c 0C000000 		.4byte	.LFE30
 9681 00a0 00000000 		.4byte	.LFB37
 9682 00a4 14000000 		.4byte	.LFE37
 9683 00a8 00000000 		.4byte	.LFB38
 9684 00ac 18000000 		.4byte	.LFE38
 9685 00b0 00000000 		.4byte	.LFB39
 9686 00b4 14000000 		.4byte	.LFE39
 9687 00b8 00000000 		.4byte	.LFB40
 9688 00bc 14000000 		.4byte	.LFE40
 9689 00c0 00000000 		.4byte	.LFB41
 9690 00c4 14000000 		.4byte	.LFE41
 9691 00c8 00000000 		.4byte	.LFB42
 9692 00cc 04000000 		.4byte	.LFE42
 9693 00d0 00000000 		.4byte	.LFB18
 9694 00d4 40000000 		.4byte	.LFE18
 9695 00d8 00000000 		.4byte	.LFB22
 9696 00dc 2C000000 		.4byte	.LFE22
 9697 00e0 00000000 		.4byte	.LFB23
 9698 00e4 2C000000 		.4byte	.LFE23
 9699 00e8 00000000 		.4byte	.LFB20
 9700 00ec A4000000 		.4byte	.LFE20
 9701 00f0 00000000 		.4byte	.LFB27
 9702 00f4 58000000 		.4byte	.LFE27
 9703 00f8 00000000 		.4byte	.LFB25
 9704 00fc 10010000 		.4byte	.LFE25
 9705 0100 00000000 		.4byte	.LFB31
 9706 0104 20000000 		.4byte	.LFE31
 9707 0108 00000000 		.4byte	.LFB32
 9708 010c 1C000000 		.4byte	.LFE32
 9709 0110 00000000 		.4byte	.LFB33
 9710 0114 22000000 		.4byte	.LFE33
 9711 0118 00000000 		.4byte	.LFB34
 9712 011c 1E000000 		.4byte	.LFE34
 9713 0120 00000000 		.4byte	.LFB35
 9714 0124 4C000000 		.4byte	.LFE35
 9715 0128 00000000 		.4byte	.LFB36
 9716 012c 2C000000 		.4byte	.LFE36
 9717 0130 00000000 		.4byte	.LFB43
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 234


 9718 0134 18000000 		.4byte	.LFE43
 9719 0138 00000000 		.4byte	.LFB44
 9720 013c 30000000 		.4byte	.LFE44
 9721 0140 00000000 		.4byte	.LFB3
 9722 0144 CC000000 		.4byte	.LFE3
 9723 0148 00000000 		.4byte	.LFB10
 9724 014c D8000000 		.4byte	.LFE10
 9725 0150 00000000 		.4byte	.LFB45
 9726 0154 14000000 		.4byte	.LFE45
 9727 0158 00000000 		.4byte	.LFB12
 9728 015c 48000000 		.4byte	.LFE12
 9729 0160 00000000 		.4byte	.LFB17
 9730 0164 9C000000 		.4byte	.LFE17
 9731 0168 00000000 		.4byte	.LFB46
 9732 016c 4C000000 		.4byte	.LFE46
 9733 0170 00000000 		.4byte	.LFB50
 9734 0174 10000000 		.4byte	.LFE50
 9735 0178 00000000 		.4byte	.LFB51
 9736 017c 10000000 		.4byte	.LFE51
 9737 0180 00000000 		.4byte	.LFB49
 9738 0184 18000000 		.4byte	.LFE49
 9739 0188 00000000 		.4byte	.LFB52
 9740 018c 10000000 		.4byte	.LFE52
 9741 0190 00000000 		.4byte	.LFB53
 9742 0194 10000000 		.4byte	.LFE53
 9743 0198 00000000 		.4byte	.LFB54
 9744 019c 10000000 		.4byte	.LFE54
 9745 01a0 00000000 		.4byte	.LFB55
 9746 01a4 10000000 		.4byte	.LFE55
 9747 01a8 00000000 		.4byte	.LFB56
 9748 01ac 20000000 		.4byte	.LFE56
 9749 01b0 00000000 		.4byte	.LFB57
 9750 01b4 10000000 		.4byte	.LFE57
 9751 01b8 00000000 		.4byte	.LFB58
 9752 01bc 10000000 		.4byte	.LFE58
 9753 01c0 00000000 		.4byte	.LFB62
 9754 01c4 28000000 		.4byte	.LFE62
 9755 01c8 00000000 		.4byte	.LFB59
 9756 01cc 0C000000 		.4byte	.LFE59
 9757 01d0 00000000 		.4byte	.LFB48
 9758 01d4 44000000 		.4byte	.LFE48
 9759 01d8 00000000 		.4byte	.LFB47
 9760 01dc 20000000 		.4byte	.LFE47
 9761 01e0 00000000 		.4byte	.LFB60
 9762 01e4 10000000 		.4byte	.LFE60
 9763 01e8 00000000 		.4byte	.LFB61
 9764 01ec 0C000000 		.4byte	.LFE61
 9765 01f0 00000000 		.4byte	.LFB63
 9766 01f4 70000000 		.4byte	.LFE63
 9767 01f8 00000000 		.4byte	.LFB64
 9768 01fc 20000000 		.4byte	.LFE64
 9769 0200 00000000 		.4byte	.LFB65
 9770 0204 20000000 		.4byte	.LFE65
 9771 0208 00000000 		.4byte	.LFB66
 9772 020c 20000000 		.4byte	.LFE66
 9773 0210 00000000 		.4byte	.LFB67
 9774 0214 68000000 		.4byte	.LFE67
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 235


 9775 0218 00000000 		.4byte	0
 9776 021c 00000000 		.4byte	0
 9777              		.section	.debug_line,"",%progbits
 9778              	.Ldebug_line0:
 9779 0000 0A080000 		.section	.debug_str,"MS",%progbits,1
 9779      02006700 
 9779      00000201 
 9779      FB0E0D00 
 9779      01010101 
 9780              	.LASF88:
 9781 0000 706C6C46 		.ascii	"pllFreq\000"
 9781      72657100 
 9782              	.LASF102:
 9783 0008 4379496E 		.ascii	"CyIntGetVector\000"
 9783      74476574 
 9783      56656374 
 9783      6F7200
 9784              	.LASF137:
 9785 0017 43795379 		.ascii	"CySysTickClear\000"
 9785      73546963 
 9785      6B436C65 
 9785      617200
 9786              	.LASF109:
 9787 0026 43794465 		.ascii	"CyDelay\000"
 9787      6C617900 
 9788              	.LASF103:
 9789 002e 4379496E 		.ascii	"CyIntSetPriority\000"
 9789      74536574 
 9789      5072696F 
 9789      72697479 
 9789      00
 9790              	.LASF61:
 9791 003f 43795379 		.ascii	"CySysClkPllGetUnlockStatus\000"
 9791      73436C6B 
 9791      506C6C47 
 9791      6574556E 
 9791      6C6F636B 
 9792              	.LASF107:
 9793 005a 4379496E 		.ascii	"CyIntGetPriority\000"
 9793      74476574 
 9793      5072696F 
 9793      72697479 
 9793      00
 9794              	.LASF148:
 9795 006b 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 9795      73536574 
 9795      446D6163 
 9795      41636365 
 9795      73734172 
 9796              	.LASF110:
 9797 0089 6D696C6C 		.ascii	"milliseconds\000"
 9797      69736563 
 9797      6F6E6473 
 9797      00
 9798              	.LASF115:
 9799 0096 696D6F54 		.ascii	"imoTrim1Value\000"
 9799      72696D31 
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 236


 9799      56616C75 
 9799      6500
 9800              	.LASF56:
 9801 00a4 72657475 		.ascii	"returnStatus\000"
 9801      726E5374 
 9801      61747573 
 9801      00
 9802              	.LASF153:
 9803 00b1 63796465 		.ascii	"cydelayFreqKhz\000"
 9803      6C617946 
 9803      7265714B 
 9803      687A00
 9804              	.LASF160:
 9805 00c0 43794578 		.ascii	"CyExitCriticalSection\000"
 9805      69744372 
 9805      69746963 
 9805      616C5365 
 9805      6374696F 
 9806              	.LASF95:
 9807 00d6 66657272 		.ascii	"ferr\000"
 9807      00
 9808              	.LASF8:
 9809 00db 756E7369 		.ascii	"unsigned int\000"
 9809      676E6564 
 9809      20696E74 
 9809      00
 9810              	.LASF48:
 9811 00e8 66547269 		.ascii	"fTrim\000"
 9811      6D00
 9812              	.LASF150:
 9813 00ee 696E7465 		.ascii	"interfaceNumber\000"
 9813      72666163 
 9813      654E756D 
 9813      62657200 
 9814              	.LASF89:
 9815 00fe 66726571 		.ascii	"freqTol\000"
 9815      546F6C00 
 9816              	.LASF34:
 9817 0106 43795379 		.ascii	"CySysEnablePumpClock\000"
 9817      73456E61 
 9817      626C6550 
 9817      756D7043 
 9817      6C6F636B 
 9818              	.LASF32:
 9819 011b 696E7465 		.ascii	"interruptState\000"
 9819      72727570 
 9819      74537461 
 9819      746500
 9820              	.LASF130:
 9821 012a 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 9821      73436C6B 
 9821      496D6F47 
 9821      65745763 
 9821      6F4C6F63 
 9822              	.LASF17:
 9823 0140 72656738 		.ascii	"reg8\000"
 9823      00
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 237


 9824              	.LASF40:
 9825 0145 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 9825      73436C6B 
 9825      57726974 
 9825      65486663 
 9825      6C6B4469 
 9826              	.LASF73:
 9827 015b 4379496E 		.ascii	"CyIntDisable\000"
 9827      74446973 
 9827      61626C65 
 9827      00
 9828              	.LASF156:
 9829 0168 43795379 		.ascii	"CySysTickInitVar\000"
 9829      73546963 
 9829      6B496E69 
 9829      74566172 
 9829      00
 9830              	.LASF83:
 9831 0179 72656665 		.ascii	"reference\000"
 9831      72656E63 
 9831      6500
 9832              	.LASF140:
 9833 0183 43795379 		.ascii	"CySysTickSetCallback\000"
 9833      73546963 
 9833      6B536574 
 9833      43616C6C 
 9833      6261636B 
 9834              	.LASF68:
 9835 0198 4379456E 		.ascii	"CyEnableInts\000"
 9835      61626C65 
 9835      496E7473 
 9835      00
 9836              	.LASF124:
 9837 01a5 43794465 		.ascii	"CyDelayFreq\000"
 9837      6C617946 
 9837      72657100 
 9838              	.LASF27:
 9839 01b1 63795F73 		.ascii	"cy_sys_clk_pll_struct\000"
 9839      79735F63 
 9839      6C6B5F70 
 9839      6C6C5F73 
 9839      74727563 
 9840              	.LASF41:
 9841 01c7 43795379 		.ascii	"CySysClkEcoStop\000"
 9841      73436C6B 
 9841      45636F53 
 9841      746F7000 
 9842              	.LASF13:
 9843 01d7 666C6F61 		.ascii	"float\000"
 9843      7400
 9844              	.LASF105:
 9845 01dd 73686966 		.ascii	"shift\000"
 9845      7400
 9846              	.LASF164:
 9847 01e3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 9847      43313120 
 9847      352E342E 
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 238


 9847      31203230 
 9847      31363036 
 9848 0216 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 9848      20726576 
 9848      6973696F 
 9848      6E203233 
 9848      37373135 
 9849 0249 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 9849      67202D66 
 9849      66756E63 
 9849      74696F6E 
 9849      2D736563 
 9850              	.LASF12:
 9851 0275 696E7433 		.ascii	"int32\000"
 9851      3200
 9852              	.LASF131:
 9853 027b 43795379 		.ascii	"CySysTickGetReload\000"
 9853      73546963 
 9853      6B476574 
 9853      52656C6F 
 9853      616400
 9854              	.LASF86:
 9855 028e 43795379 		.ascii	"CySysClkPllSetFrequency\000"
 9855      73436C6B 
 9855      506C6C53 
 9855      65744672 
 9855      65717565 
 9856              	.LASF117:
 9857 02a6 43794465 		.ascii	"CyDelayUs\000"
 9857      6C617955 
 9857      7300
 9858              	.LASF7:
 9859 02b0 6C6F6E67 		.ascii	"long long unsigned int\000"
 9859      206C6F6E 
 9859      6720756E 
 9859      7369676E 
 9859      65642069 
 9860              	.LASF65:
 9861 02c7 72656173 		.ascii	"reason\000"
 9861      6F6E00
 9862              	.LASF76:
 9863 02ce 43794861 		.ascii	"CyHalt\000"
 9863      6C7400
 9864              	.LASF36:
 9865 02d5 656E6162 		.ascii	"enable\000"
 9865      6C6500
 9866              	.LASF51:
 9867 02dc 72656754 		.ascii	"regTmp\000"
 9867      6D7000
 9868              	.LASF106:
 9869 02e3 76616C75 		.ascii	"value\000"
 9869      6500
 9870              	.LASF42:
 9871 02e9 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 9871      73436C6B 
 9871      47657453 
 9871      7973636C 
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 239


 9871      6B536F75 
 9872              	.LASF90:
 9873 0301 714D696E 		.ascii	"qMin\000"
 9873      00
 9874              	.LASF125:
 9875 0306 43795379 		.ascii	"CySysTickStop\000"
 9875      73546963 
 9875      6B53746F 
 9875      7000
 9876              	.LASF72:
 9877 0314 4379496E 		.ascii	"CyIntGetState\000"
 9877      74476574 
 9877      53746174 
 9877      6500
 9878              	.LASF152:
 9879 0322 63796465 		.ascii	"cydelayFreqHz\000"
 9879      6C617946 
 9879      72657148 
 9879      7A00
 9880              	.LASF87:
 9881 0330 696E7075 		.ascii	"inputFreq\000"
 9881      74467265 
 9881      7100
 9882              	.LASF143:
 9883 033a 43795379 		.ascii	"CySysTickGetCallback\000"
 9883      73546963 
 9883      6B476574 
 9883      43616C6C 
 9883      6261636B 
 9884              	.LASF98:
 9885 034f 6F6C6449 		.ascii	"oldIsr\000"
 9885      737200
 9886              	.LASF92:
 9887 0356 7156616C 		.ascii	"qVal\000"
 9887      00
 9888              	.LASF74:
 9889 035b 4379496E 		.ascii	"CyIntSetPending\000"
 9889      74536574 
 9889      50656E64 
 9889      696E6700 
 9890              	.LASF35:
 9891 036b 636C6B53 		.ascii	"clkSelect\000"
 9891      656C6563 
 9891      7400
 9892              	.LASF67:
 9893 0375 696E7453 		.ascii	"intState\000"
 9893      74617465 
 9893      00
 9894              	.LASF123:
 9895 037e 636F756E 		.ascii	"counts\000"
 9895      747300
 9896              	.LASF53:
 9897 0385 66726571 		.ascii	"freq\000"
 9897      00
 9898              	.LASF60:
 9899 038a 62797061 		.ascii	"bypass\000"
 9899      737300
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 240


 9900              	.LASF22:
 9901 0391 63795379 		.ascii	"cySysTickCallback\000"
 9901      73546963 
 9901      6B43616C 
 9901      6C626163 
 9901      6B00
 9902              	.LASF75:
 9903 03a3 4379496E 		.ascii	"CyIntClearPending\000"
 9903      74436C65 
 9903      61725065 
 9903      6E64696E 
 9903      6700
 9904              	.LASF15:
 9905 03b5 63686172 		.ascii	"char\000"
 9905      00
 9906              	.LASF136:
 9907 03ba 43795379 		.ascii	"CySysTickGetCountFlag\000"
 9907      73546963 
 9907      6B476574 
 9907      436F756E 
 9907      74466C61 
 9908              	.LASF161:
 9909 03d0 43794465 		.ascii	"CyDelayCycles\000"
 9909      6C617943 
 9909      79636C65 
 9909      7300
 9910              	.LASF113:
 9911 03de 666C6173 		.ascii	"flashCtlReg\000"
 9911      6843746C 
 9911      52656700 
 9912              	.LASF30:
 9913 03ea 43795379 		.ascii	"CySysClkImoStop\000"
 9913      73436C6B 
 9913      496D6F53 
 9913      746F7000 
 9914              	.LASF31:
 9915 03fa 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 9915      73436C6B 
 9915      57726974 
 9915      65486663 
 9915      6C6B4469 
 9916              	.LASF10:
 9917 0413 75696E74 		.ascii	"uint16\000"
 9917      313600
 9918              	.LASF82:
 9919 041a 66656564 		.ascii	"feedback\000"
 9919      6261636B 
 9919      00
 9920              	.LASF101:
 9921 0423 4379496E 		.ascii	"CyIntSetVector\000"
 9921      74536574 
 9921      56656374 
 9921      6F7200
 9922              	.LASF26:
 9923 0432 63795F73 		.ascii	"cy_sys_clk_pll_regs_struct\000"
 9923      79735F63 
 9923      6C6B5F70 
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 241


 9923      6C6C5F72 
 9923      6567735F 
 9924              	.LASF24:
 9925 044d 73746174 		.ascii	"status\000"
 9925      757300
 9926              	.LASF146:
 9927 0454 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 9927      73536574 
 9927      52616D41 
 9927      63636573 
 9927      73417262 
 9928              	.LASF43:
 9929 0471 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 9929      73436C6B 
 9929      45636F52 
 9929      65616453 
 9929      74617475 
 9930              	.LASF81:
 9931 0487 43795379 		.ascii	"CySysClkPllSetPQ\000"
 9931      73436C6B 
 9931      506C6C53 
 9931      65745051 
 9931      00
 9932              	.LASF47:
 9933 0498 61547269 		.ascii	"aTrim\000"
 9933      6D00
 9934              	.LASF57:
 9935 049e 676D4D69 		.ascii	"gmMin\000"
 9935      6E00
 9936              	.LASF55:
 9937 04a4 6D617841 		.ascii	"maxAmplitude\000"
 9937      6D706C69 
 9937      74756465 
 9937      00
 9938              	.LASF149:
 9939 04b1 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 9939      73536574 
 9939      50657269 
 9939      70686572 
 9939      616C4163 
 9940              	.LASF6:
 9941 04d5 6C6F6E67 		.ascii	"long long int\000"
 9941      206C6F6E 
 9941      6720696E 
 9941      7400
 9942              	.LASF111:
 9943 04e3 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 9943      73436C6B 
 9943      496D6F45 
 9943      6E61626C 
 9943      6557636F 
 9944              	.LASF97:
 9945 04fc 61646472 		.ascii	"address\000"
 9945      65737300 
 9946              	.LASF127:
 9947 0504 43795379 		.ascii	"CySysTickEnable\000"
 9947      73546963 
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 242


 9947      6B456E61 
 9947      626C6500 
 9948              	.LASF64:
 9949 0514 43795379 		.ascii	"CySysGetResetReason\000"
 9949      73476574 
 9949      52657365 
 9949      74526561 
 9949      736F6E00 
 9950              	.LASF147:
 9951 0528 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 9951      73536574 
 9951      466C6173 
 9951      68416363 
 9951      65737341 
 9952              	.LASF100:
 9953 0547 4379496E 		.ascii	"CyIntGetSysVector\000"
 9953      74476574 
 9953      53797356 
 9953      6563746F 
 9953      7200
 9954              	.LASF151:
 9955 0559 43795379 		.ascii	"CySysTickCallbacks\000"
 9955      73546963 
 9955      6B43616C 
 9955      6C626163 
 9955      6B7300
 9956              	.LASF132:
 9957 056c 43795379 		.ascii	"CySysTickGetValue\000"
 9957      73546963 
 9957      6B476574 
 9957      56616C75 
 9957      6500
 9958              	.LASF78:
 9959 057e 43795379 		.ascii	"CySysClkPllGetBypassMode\000"
 9959      73436C6B 
 9959      506C6C47 
 9959      65744279 
 9959      70617373 
 9960              	.LASF19:
 9961 0597 63796973 		.ascii	"cyisraddress\000"
 9961      72616464 
 9961      72657373 
 9961      00
 9962              	.LASF46:
 9963 05a4 77445472 		.ascii	"wDTrim\000"
 9963      696D00
 9964              	.LASF119:
 9965 05ab 43795379 		.ascii	"CySysClkEcoStart\000"
 9965      73436C6B 
 9965      45636F53 
 9965      74617274 
 9965      00
 9966              	.LASF11:
 9967 05bc 75696E74 		.ascii	"uint32\000"
 9967      333200
 9968              	.LASF79:
 9969 05c3 43795379 		.ascii	"CySysClkPllConfigChangeAllowed\000"
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 243


 9969      73436C6B 
 9969      506C6C43 
 9969      6F6E6669 
 9969      67436861 
 9970              	.LASF139:
 9971 05e2 43795379 		.ascii	"CySysTickStart\000"
 9971      73546963 
 9971      6B537461 
 9971      727400
 9972              	.LASF167:
 9973 05f1 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 9973      73546963 
 9973      6B536572 
 9973      76696365 
 9973      43616C6C 
 9974              	.LASF69:
 9975 060b 6D61736B 		.ascii	"mask\000"
 9975      00
 9976              	.LASF133:
 9977 0610 43795379 		.ascii	"CySysTickSetClockSource\000"
 9977      73546963 
 9977      6B536574 
 9977      436C6F63 
 9977      6B536F75 
 9978              	.LASF122:
 9979 0628 77616974 		.ascii	"wait\000"
 9979      00
 9980              	.LASF44:
 9981 062d 72657475 		.ascii	"returnValue\000"
 9981      726E5661 
 9981      6C756500 
 9982              	.LASF28:
 9983 0639 43795379 		.ascii	"CySysClkImoStart\000"
 9983      73436C6B 
 9983      496D6F53 
 9983      74617274 
 9983      00
 9984              	.LASF116:
 9985 064a 77636F4C 		.ascii	"wcoLock\000"
 9985      6F636B00 
 9986              	.LASF20:
 9987 0652 6C6F6E67 		.ascii	"long double\000"
 9987      20646F75 
 9987      626C6500 
 9988              	.LASF66:
 9989 065e 43794469 		.ascii	"CyDisableInts\000"
 9989      7361626C 
 9989      65496E74 
 9989      7300
 9990              	.LASF18:
 9991 066c 72656733 		.ascii	"reg32\000"
 9991      3200
 9992              	.LASF134:
 9993 0672 636C6F63 		.ascii	"clockSource\000"
 9993      6B536F75 
 9993      72636500 
 9994              	.LASF33:
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 244


 9995 067e 746D7052 		.ascii	"tmpReg\000"
 9995      656700
 9996              	.LASF163:
 9997 0685 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 9997      73466C61 
 9997      73685365 
 9997      74576169 
 9997      74437963 
 9998              	.LASF23:
 9999 069d 636F6E66 		.ascii	"config\000"
 9999      696700
 10000              	.LASF54:
 10001 06a4 634C6F61 		.ascii	"cLoad\000"
 10001      6400
 10002              	.LASF129:
 10003 06aa 43795379 		.ascii	"CySysTickSetReload\000"
 10003      73546963 
 10003      6B536574 
 10003      52656C6F 
 10003      616400
 10004              	.LASF2:
 10005 06bd 73686F72 		.ascii	"short int\000"
 10005      7420696E 
 10005      7400
 10006              	.LASF39:
 10007 06c7 64697669 		.ascii	"divider\000"
 10007      64657200 
 10008              	.LASF4:
 10009 06cf 6C6F6E67 		.ascii	"long int\000"
 10009      20696E74 
 10009      00
 10010              	.LASF80:
 10011 06d8 706C6C42 		.ascii	"pllBypassMode\000"
 10011      79706173 
 10011      734D6F64 
 10011      6500
 10012              	.LASF52:
 10013 06e6 43795379 		.ascii	"CySysClkConfigureEcoDrive\000"
 10013      73436C6B 
 10013      436F6E66 
 10013      69677572 
 10013      6545636F 
 10014              	.LASF96:
 10015 0700 4379496E 		.ascii	"CyIntSetSysVector\000"
 10015      74536574 
 10015      53797356 
 10015      6563746F 
 10015      7200
 10016              	.LASF104:
 10017 0712 7072696F 		.ascii	"priority\000"
 10017      72697479 
 10017      00
 10018              	.LASF158:
 10019 071b 43795379 		.ascii	"CySysClkPumpConfig\000"
 10019      73436C6B 
 10019      50756D70 
 10019      436F6E66 
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 245


 10019      696700
 10020              	.LASF94:
 10021 072e 6676636F 		.ascii	"fvco\000"
 10021      00
 10022              	.LASF38:
 10023 0733 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 10023      73436C6B 
 10023      57726974 
 10023      65537973 
 10023      636C6B44 
 10024              	.LASF128:
 10025 074a 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 10025      73546963 
 10025      6B446973 
 10025      61626C65 
 10025      496E7465 
 10026              	.LASF50:
 10027 0764 67547269 		.ascii	"gTrim\000"
 10027      6D00
 10028              	.LASF165:
 10029 076a 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 10029      72617465 
 10029      645F536F 
 10029      75726365 
 10029      5C50536F 
 10030              	.LASF63:
 10031 0789 736F7572 		.ascii	"source\000"
 10031      636500
 10032              	.LASF71:
 10033 0790 6E756D62 		.ascii	"number\000"
 10033      657200
 10034              	.LASF112:
 10035 0797 6C664C69 		.ascii	"lfLimit\000"
 10035      6D697400 
 10036              	.LASF93:
 10037 079f 7056616C 		.ascii	"pVal\000"
 10037      00
 10038              	.LASF138:
 10039 07a4 43795379 		.ascii	"CySysTickInit\000"
 10039      73546963 
 10039      6B496E69 
 10039      7400
 10040              	.LASF166:
 10041 07b2 433A5C55 		.ascii	"C:\\Users\\Banni\\Desktop\\BLE Project\\Workspace\\"
 10041      73657273 
 10041      5C42616E 
 10041      6E695C44 
 10041      65736B74 
 10042 07df 43593843 		.ascii	"CY8C_149KIT\\HomeAutomation.cydsn\000"
 10042      5F313439 
 10042      4B49545C 
 10042      486F6D65 
 10042      4175746F 
 10043              	.LASF58:
 10044 0800 43795379 		.ascii	"CySysClkPllStop\000"
 10044      73436C6B 
 10044      506C6C53 
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 246


 10044      746F7000 
 10045              	.LASF145:
 10046 0810 756E6971 		.ascii	"uniqueId\000"
 10046      75654964 
 10046      00
 10047              	.LASF91:
 10048 0819 714D6178 		.ascii	"qMax\000"
 10048      00
 10049              	.LASF21:
 10050 081e 73697A65 		.ascii	"sizetype\000"
 10050      74797065 
 10050      00
 10051              	.LASF59:
 10052 0827 43795379 		.ascii	"CySysClkPllSetBypassMode\000"
 10052      73436C6B 
 10052      506C6C53 
 10052      65744279 
 10052      70617373 
 10053              	.LASF45:
 10054 0840 43795379 		.ascii	"CySysClkConfigureEcoTrim\000"
 10054      73436C6B 
 10054      436F6E66 
 10054      69677572 
 10054      6545636F 
 10055              	.LASF5:
 10056 0859 6C6F6E67 		.ascii	"long unsigned int\000"
 10056      20756E73 
 10056      69676E65 
 10056      6420696E 
 10056      7400
 10057              	.LASF142:
 10058 086b 72657456 		.ascii	"retVal\000"
 10058      616C00
 10059              	.LASF49:
 10060 0872 72547269 		.ascii	"rTrim\000"
 10060      6D00
 10061              	.LASF135:
 10062 0878 43795379 		.ascii	"CySysTickGetClockSource\000"
 10062      73546963 
 10062      6B476574 
 10062      436C6F63 
 10062      6B536F75 
 10063              	.LASF108:
 10064 0890 4379536F 		.ascii	"CySoftwareReset\000"
 10064      66747761 
 10064      72655265 
 10064      73657400 
 10065              	.LASF16:
 10066 08a0 63797374 		.ascii	"cystatus\000"
 10066      61747573 
 10066      00
 10067              	.LASF120:
 10068 08a9 74696D65 		.ascii	"timeoutUs\000"
 10068      6F757455 
 10068      7300
 10069              	.LASF1:
 10070 08b3 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 247


 10070      676E6564 
 10070      20636861 
 10070      7200
 10071              	.LASF154:
 10072 08c1 63796465 		.ascii	"cydelayFreqMhz\000"
 10072      6C617946 
 10072      7265714D 
 10072      687A00
 10073              	.LASF99:
 10074 08d0 72616D56 		.ascii	"ramVectorTable\000"
 10074      6563746F 
 10074      72546162 
 10074      6C6500
 10075              	.LASF144:
 10076 08df 43794765 		.ascii	"CyGetUniqueId\000"
 10076      74556E69 
 10076      71756549 
 10076      6400
 10077              	.LASF141:
 10078 08ed 66756E63 		.ascii	"function\000"
 10078      74696F6E 
 10078      00
 10079              	.LASF25:
 10080 08f6 74657374 		.ascii	"test\000"
 10080      00
 10081              	.LASF77:
 10082 08fb 43795379 		.ascii	"CySysClkPllGetLockStatus\000"
 10082      73436C6B 
 10082      506C6C47 
 10082      65744C6F 
 10082      636B5374 
 10083              	.LASF118:
 10084 0914 6D696372 		.ascii	"microseconds\000"
 10084      6F736563 
 10084      6F6E6473 
 10084      00
 10085              	.LASF162:
 10086 0921 43795379 		.ascii	"CySysClkWcoEnabled\000"
 10086      73436C6B 
 10086      57636F45 
 10086      6E61626C 
 10086      656400
 10087              	.LASF121:
 10088 0934 43795379 		.ascii	"CySysClkPllStart\000"
 10088      73436C6B 
 10088      506C6C53 
 10088      74617274 
 10088      00
 10089              	.LASF126:
 10090 0945 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 10090      73546963 
 10090      6B456E61 
 10090      626C6549 
 10090      6E746572 
 10091              	.LASF155:
 10092 095e 63796465 		.ascii	"cydelay32kMs\000"
 10092      6C617933 
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 248


 10092      326B4D73 
 10092      00
 10093              	.LASF157:
 10094 096b 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 10094      6F467265 
 10094      714D687A 
 10094      3244706C 
 10094      6C4F6666 
 10095              	.LASF85:
 10096 0983 43795379 		.ascii	"CySysClkPllSetOutputDivider\000"
 10096      73436C6B 
 10096      506C6C53 
 10096      65744F75 
 10096      74707574 
 10097              	.LASF29:
 10098 099f 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 10098      73436C6B 
 10098      496D6F44 
 10098      69736162 
 10098      6C655763 
 10099              	.LASF114:
 10100 09b9 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 10100      73436C6B 
 10100      57726974 
 10100      65496D6F 
 10100      46726571 
 10101              	.LASF70:
 10102 09ce 4379496E 		.ascii	"CyIntEnable\000"
 10102      74456E61 
 10102      626C6500 
 10103              	.LASF62:
 10104 09da 43795379 		.ascii	"CySysClkPllSetSource\000"
 10104      73436C6B 
 10104      506C6C53 
 10104      6574536F 
 10104      75726365 
 10105              	.LASF159:
 10106 09ef 4379456E 		.ascii	"CyEnterCriticalSection\000"
 10106      74657243 
 10106      72697469 
 10106      63616C53 
 10106      65637469 
 10107              	.LASF0:
 10108 0a06 7369676E 		.ascii	"signed char\000"
 10108      65642063 
 10108      68617200 
 10109              	.LASF3:
 10110 0a12 73686F72 		.ascii	"short unsigned int\000"
 10110      7420756E 
 10110      7369676E 
 10110      65642069 
 10110      6E7400
 10111              	.LASF84:
 10112 0a25 63757272 		.ascii	"current\000"
 10112      656E7400 
 10113              	.LASF9:
 10114 0a2d 75696E74 		.ascii	"uint8\000"
ARM GAS  C:\Users\Banni\AppData\Local\Temp\ccvFPZ8V.s 			page 249


 10114      3800
 10115              	.LASF14:
 10116 0a33 646F7562 		.ascii	"double\000"
 10116      6C6500
 10117              	.LASF37:
 10118 0a3a 73797363 		.ascii	"sysclkSource\000"
 10118      6C6B536F 
 10118      75726365 
 10118      00
 10119              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
